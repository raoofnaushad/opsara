{
    "id": "309e64f4e0c6dedbcf89d265e60ce836",
    "metadata": {
        "id": "309e64f4e0c6dedbcf89d265e60ce836",
        "url": "https://github.com/langchain-ai/langchain/",
        "title": "GitHub - langchain-ai/langchain: 🦜🔗 Build context-aware reasoning applications",
        "properties": {
            "description": "🦜🔗 Build context-aware reasoning applications. Contribute to langchain-ai/langchain development by creating an account on GitHub.",
            "keywords": null,
            "author": null,
            "og:image": "https://opengraph.githubassets.com/1c88a6d27fc0bdb970eaa50438f085671676db7b8fd9263385fc28eda41916f6/langchain-ai/langchain",
            "og:image:alt": "🦜🔗 Build context-aware reasoning applications. Contribute to langchain-ai/langchain development by creating an account on GitHub.",
            "og:image:width": "1200",
            "og:image:height": "600",
            "og:site_name": "GitHub",
            "og:type": "object",
            "og:title": "GitHub - langchain-ai/langchain: 🦜🔗 Build context-aware reasoning applications",
            "og:url": "https://github.com/langchain-ai/langchain",
            "og:description": "🦜🔗 Build context-aware reasoning applications. Contribute to langchain-ai/langchain development by creating an account on GitHub.",
            "twitter:image": "https://opengraph.githubassets.com/1c88a6d27fc0bdb970eaa50438f085671676db7b8fd9263385fc28eda41916f6/langchain-ai/langchain",
            "twitter:site": "@github",
            "twitter:card": "summary_large_image",
            "twitter:title": "GitHub - langchain-ai/langchain: 🦜🔗 Build context-aware reasoning applications",
            "twitter:description": "🦜🔗 Build context-aware reasoning applications. Contribute to langchain-ai/langchain development by creating an account on GitHub."
        }
    },
    "parent_metadata": {
        "id": "eebbce4c8b22cda0d2dde5be5f321f49",
        "url": "https://www.notion.so/Frameworks-eebbce4c8b22cda0d2dde5be5f321f49",
        "title": "Frameworks",
        "properties": {
            "Type": "Leaf"
        }
    },
    "content": "[Skip to content](#start-of-content)\n\n## Navigation Menu\n\nToggle navigation\n\n[ ](/)\n\n[ Sign in ](/login?return_to=https%3A%2F%2Fgithub.com%2Flangchain-ai%2Flangchain%2F)\n\n  * Product \n\n    * [ GitHub Copilot Write better code with AI  ](https://github.com/features/copilot)\n    * [ Security Find and fix vulnerabilities  ](https://github.com/features/security)\n    * [ Actions Automate any workflow  ](https://github.com/features/actions)\n    * [ Codespaces Instant dev environments  ](https://github.com/features/codespaces)\n    * [ Issues Plan and track work  ](https://github.com/features/issues)\n    * [ Code Review Manage code changes  ](https://github.com/features/code-review)\n    * [ Discussions Collaborate outside of code  ](https://github.com/features/discussions)\n    * [ Code Search Find more, search less  ](https://github.com/features/code-search)\n\nExplore\n    * [ All features ](https://github.com/features)\n    * [ Documentation ](https://docs.github.com)\n    * [ GitHub Skills ](https://skills.github.com)\n    * [ Blog ](https://github.blog)\n\n  * Solutions \n\nBy company size\n    * [ Enterprises ](https://github.com/enterprise)\n    * [ Small and medium teams ](https://github.com/team)\n    * [ Startups ](https://github.com/enterprise/startups)\n    * [ Nonprofits ](/solutions/industry/nonprofits)\n\nBy use case\n    * [ DevSecOps ](/solutions/use-case/devsecops)\n    * [ DevOps ](/solutions/use-case/devops)\n    * [ CI/CD ](/solutions/use-case/ci-cd)\n    * [ View all use cases ](/solutions/use-case)\n\nBy industry\n    * [ Healthcare ](/solutions/industry/healthcare)\n    * [ Financial services ](/solutions/industry/financial-services)\n    * [ Manufacturing ](/solutions/industry/manufacturing)\n    * [ Government ](/solutions/industry/government)\n    * [ View all industries ](/solutions/industry)\n\n[ View all solutions ](/solutions)\n\n  * Resources \n\nTopics\n    * [ AI ](/resources/articles/ai)\n    * [ DevOps ](/resources/articles/devops)\n    * [ Security ](/resources/articles/security)\n    * [ Software Development ](/resources/articles/software-development)\n    * [ View all ](/resources/articles)\n\nExplore\n    * [ Learning Pathways ](https://resources.github.com/learn/pathways)\n    * [ White papers, Ebooks, Webinars ](https://resources.github.com)\n    * [ Customer Stories ](https://github.com/customer-stories)\n    * [ Partners ](https://partner.github.com)\n    * [ Executive Insights ](https://github.com/solutions/executive-insights)\n\n  * Open Source \n\n    * [ GitHub Sponsors Fund open source developers  ](/sponsors)\n\n    * [ The ReadME Project GitHub community articles  ](https://github.com/readme)\n\nRepositories\n    * [ Topics ](https://github.com/topics)\n    * [ Trending ](https://github.com/trending)\n    * [ Collections ](https://github.com/collections)\n\n  * Enterprise \n\n    * [ Enterprise platform AI-powered developer platform  ](/enterprise)\n\nAvailable add-ons\n    * [ Advanced Security Enterprise-grade security features  ](https://github.com/enterprise/advanced-security)\n    * [ GitHub Copilot Enterprise-grade AI features  ](/features/copilot#enterprise)\n    * [ Premium Support Enterprise-grade 24/7 support  ](/premium-support)\n\n  * [Pricing](https://github.com/pricing)\n\n\n\nSearch or jump to...\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch \n\nClear\n\n[Search syntax tips](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax)\n\n#  Provide feedback \n\nWe read every piece of feedback, and take your input very seriously.\n\nInclude my email address so I can be contacted\n\nCancel  Submit feedback \n\n#  Saved searches \n\n## Use saved searches to filter your results more quickly\n\nName\n\nQuery\n\nTo see all available qualifiers, see our [documentation](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax). \n\nCancel  Create saved search \n\n[ Sign in ](/login?return_to=https%3A%2F%2Fgithub.com%2Flangchain-ai%2Flangchain%2F)\n\n[ Sign up ](/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&source=header-repo&source_repo=langchain-ai%2Flangchain) Reseting focus\n\nYou signed in with another tab or window. [Reload]() to refresh your session. You signed out in another tab or window. [Reload]() to refresh your session. You switched accounts on another tab or window. [Reload]() to refresh your session. Dismiss alert\n\n{{ message }}\n\n[ langchain-ai ](/langchain-ai) / **[langchain](/langchain-ai/langchain) ** Public\n\n  * [ Notifications ](/login?return_to=%2Flangchain-ai%2Flangchain) You must be signed in to change notification settings\n  * [ Fork 16.1k ](/login?return_to=%2Flangchain-ai%2Flangchain)\n  * [ Star  98.7k ](/login?return_to=%2Flangchain-ai%2Flangchain)\n\n\n\n\n🦜🔗 Build context-aware reasoning applications \n\n[python.langchain.com](https://python.langchain.com \"https://python.langchain.com\")\n\n### License\n\n[ MIT license ](/langchain-ai/langchain/blob/master/LICENSE)\n\n[ 98.7k stars ](/langchain-ai/langchain/stargazers) [ 16.1k forks ](/langchain-ai/langchain/forks) [ Branches ](/langchain-ai/langchain/branches) [ Tags ](/langchain-ai/langchain/tags) [ Activity ](/langchain-ai/langchain/activity)\n\n[ Star  ](/login?return_to=%2Flangchain-ai%2Flangchain)\n\n[ Notifications ](/login?return_to=%2Flangchain-ai%2Flangchain) You must be signed in to change notification settings\n\n  * [ Code ](/langchain-ai/langchain)\n  * [ Issues 381 ](/langchain-ai/langchain/issues)\n  * [ Pull requests 54 ](/langchain-ai/langchain/pulls)\n  * [ Discussions ](/langchain-ai/langchain/discussions)\n  * [ Actions ](/langchain-ai/langchain/actions)\n  * [ Projects 2 ](/langchain-ai/langchain/projects)\n  * [ Security ](/langchain-ai/langchain/security)\n  * [ Insights ](/langchain-ai/langchain/pulse)\n\n\n\nAdditional navigation options\n\n  * [ Code  ](/langchain-ai/langchain)\n  * [ Issues  ](/langchain-ai/langchain/issues)\n  * [ Pull requests  ](/langchain-ai/langchain/pulls)\n  * [ Discussions  ](/langchain-ai/langchain/discussions)\n  * [ Actions  ](/langchain-ai/langchain/actions)\n  * [ Projects  ](/langchain-ai/langchain/projects)\n  * [ Security  ](/langchain-ai/langchain/security)\n  * [ Insights  ](/langchain-ai/langchain/pulse)\n\n\n\n# langchain-ai/langchain\n\nmaster\n\n[**861** Branches](/langchain-ai/langchain/branches)[**761** Tags](/langchain-ai/langchain/tags)\n\n[](/langchain-ai/langchain/branches)[](/langchain-ai/langchain/tags)\n\nGo to file\n\nCode\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\n![Siddhant231xyz](https://avatars.githubusercontent.com/u/87547498?v=4&size=40)![Siddhant Jain](https://github.githubassets.com/images/gravatars/gravatar-user-420.png?size=40)![efriis](https://avatars.githubusercontent.com/u/9557659?v=4&size=40)3 people[langchain: added vectorstore docstring linting (](/langchain-ai/langchain/commit/9eb10a9240eddbd544cb970e189c02e27e025522)[#29241](https://github.com/langchain-ai/langchain/pull/29241)[)](/langchain-ai/langchain/commit/9eb10a9240eddbd544cb970e189c02e27e025522)Jan 22, 2025[9eb10a9](/langchain-ai/langchain/commit/9eb10a9240eddbd544cb970e189c02e27e025522) · Jan 22, 2025\n\n## History\n\n[12,486 Commits](/langchain-ai/langchain/commits/master/)[](/langchain-ai/langchain/commits/master/)  \n[.devcontainer](/langchain-ai/langchain/tree/master/.devcontainer \".devcontainer\")| [.devcontainer](/langchain-ai/langchain/tree/master/.devcontainer \".devcontainer\")| [community[minor]: Add ApertureDB as a vectorstore (](/langchain-ai/langchain/commit/5caa3811770fe25e54e46b61e1b14d1a985a0a32 \"community\\[minor\\]: Add ApertureDB as a vectorstore \\(#24088\\)\nThank you for contributing to LangChain!\n- \\[X\\] *ApertureDB as vectorstore**: \"community: Add ApertureDB as a\nvectorestore\"\n- **Description:** this change provides a new community integration that\nuses ApertureData's ApertureDB as a vector store.\n  - **Issue:** none\n  - **Dependencies:** depends on ApertureDB Python SDK\n  - **Twitter handle:** ApertureData\n- \\[X\\] **Add tests and docs**: If you're adding a new integration, please\ninclude\n1. a test for the integration, preferably unit tests that do not rely on\nnetwork access,\n2. an example notebook showing its use. It lives in\n`docs/docs/integrations` directory.\nIntegration tests rely on a local run of a public docker image.\nExample notebook additionally relies on a local Ollama server.\n- \\[X\\] **Lint and test**: Run `make format`, `make lint` and `make test`\nfrom the root of the package\\(s\\) you've modified. See contribution\nguidelines for more: https://python.langchain.com/docs/contributing/\nAll lint tests pass.\nAdditional guidelines:\n- Make sure optional dependencies are imported within a function.\n- Please do not add dependencies to pyproject.toml files \\(even optional\nones\\) unless they are required for unit tests.\n- Most PRs should not touch more than one package.\n- Changes should be backwards compatible.\n- If you are adding something to community, do not re-import it in\nlangchain.\nIf no one reviews your PR within a few days, please @-mention one of\nbaskaryan, efriis, eyurtsev, ccurme, vbarda, hwchase17.\n---------\nCo-authored-by: Gautam <gautam@aperturedata.io>\")[#24088](https://github.com/langchain-ai/langchain/pull/24088)[)](/langchain-ai/langchain/commit/5caa3811770fe25e54e46b61e1b14d1a985a0a32 \"community\\[minor\\]: Add ApertureDB as a vectorstore \\(#24088\\)\nThank you for contributing to LangChain!\n- \\[X\\] *ApertureDB as vectorstore**: \"community: Add ApertureDB as a\nvectorestore\"\n- **Description:** this change provides a new community integration that\nuses ApertureData's ApertureDB as a vector store.\n  - **Issue:** none\n  - **Dependencies:** depends on ApertureDB Python SDK\n  - **Twitter handle:** ApertureData\n- \\[X\\] **Add tests and docs**: If you're adding a new integration, please\ninclude\n1. a test for the integration, preferably unit tests that do not rely on\nnetwork access,\n2. an example notebook showing its use. It lives in\n`docs/docs/integrations` directory.\nIntegration tests rely on a local run of a public docker image.\nExample notebook additionally relies on a local Ollama server.\n- \\[X\\] **Lint and test**: Run `make format`, `make lint` and `make test`\nfrom the root of the package\\(s\\) you've modified. See contribution\nguidelines for more: https://python.langchain.com/docs/contributing/\nAll lint tests pass.\nAdditional guidelines:\n- Make sure optional dependencies are imported within a function.\n- Please do not add dependencies to pyproject.toml files \\(even optional\nones\\) unless they are required for unit tests.\n- Most PRs should not touch more than one package.\n- Changes should be backwards compatible.\n- If you are adding something to community, do not re-import it in\nlangchain.\nIf no one reviews your PR within a few days, please @-mention one of\nbaskaryan, efriis, eyurtsev, ccurme, vbarda, hwchase17.\n---------\nCo-authored-by: Gautam <gautam@aperturedata.io>\")| Jul 16, 2024  \n[.github](/langchain-ai/langchain/tree/master/.github \".github\")| [.github](/langchain-ai/langchain/tree/master/.github \".github\")| [infra: run doc lint on root pyproject change (](/langchain-ai/langchain/commit/a2ed796aa687f2b002c274d520c18099c92380d7 \"infra: run doc lint on root pyproject change \\(#29350\\)\")[#29350](https://github.com/langchain-ai/langchain/pull/29350)[)](/langchain-ai/langchain/commit/a2ed796aa687f2b002c274d520c18099c92380d7 \"infra: run doc lint on root pyproject change \\(#29350\\)\")| Jan 22, 2025  \n[cookbook](/langchain-ai/langchain/tree/master/cookbook \"cookbook\")| [cookbook](/langchain-ai/langchain/tree/master/cookbook \"cookbook\")| [cookbook: fix typo in cookbook/mongodb-langchain-cache-memory.ipynb (](/langchain-ai/langchain/commit/4c0217681a81859da6b3547c46c0bb6af780307c \"cookbook: fix typo in cookbook/mongodb-langchain-cache-memory.ipynb \\(#29149\\)\nDescription: fix \"enviornment\" into \"environment\". \nIssue: Typo\nDependencies: None\nTwitter handle: zrwang01\")[#…](https://github.com/langchain-ai/langchain/pull/29149)| Jan 13, 2025  \n[docs](/langchain-ai/langchain/tree/master/docs \"docs\")| [docs](/langchain-ai/langchain/tree/master/docs \"docs\")| [packages, docs: Pipeshift - Langchain integration of pipeshift (](/langchain-ai/langchain/commit/de1fc4811da035f8ba765fab957ed0c63a9e80fd \"packages, docs: Pipeshift - Langchain integration of pipeshift \\(#29114\\)\nDescription: Added pipeshift integration. This integrates pipeshift LLM\nand ChatModels APIs with langchain\nDependencies: none\nUnit Tests & Integration tests are added\nDocumentation is added as well\nThis PR is w.r.t\n\\[#27390\\]\\(https://github.com/langchain-ai/langchain/pull/27390\\) and as\nper request, a freshly minted `langchain-pipeshift` package is uploaded\nto PYPI. Only changes to the docs & packages.yml are made in langchain\nmaster branch\n---------\nCo-authored-by: Chester Curme <chester.curme@gmail.com>\nCo-authored-by: Erick Friis <erick@langchain.dev>\")[#29114](https://github.com/langchain-ai/langchain/pull/29114)[)](/langchain-ai/langchain/commit/de1fc4811da035f8ba765fab957ed0c63a9e80fd \"packages, docs: Pipeshift - Langchain integration of pipeshift \\(#29114\\)\nDescription: Added pipeshift integration. This integrates pipeshift LLM\nand ChatModels APIs with langchain\nDependencies: none\nUnit Tests & Integration tests are added\nDocumentation is added as well\nThis PR is w.r.t\n\\[#27390\\]\\(https://github.com/langchain-ai/langchain/pull/27390\\) and as\nper request, a freshly minted `langchain-pipeshift` package is uploaded\nto PYPI. Only changes to the docs & packages.yml are made in langchain\nmaster branch\n---------\nCo-authored-by: Chester Curme <chester.curme@gmail.com>\nCo-authored-by: Erick Friis <erick@langchain.dev>\")| Jan 22, 2025  \n[libs](/langchain-ai/langchain/tree/master/libs \"libs\")| [libs](/langchain-ai/langchain/tree/master/libs \"libs\")| [langchain: added vectorstore docstring linting (](/langchain-ai/langchain/commit/9eb10a9240eddbd544cb970e189c02e27e025522 \"langchain: added vectorstore docstring linting \\(#29241\\)\n…ore.py\nThank you for contributing to LangChain!\n- \\[x\\] **PR title**: \"package: description\"\n- Where \"package\" is whichever of langchain, community, core, etc. is\nbeing modified. Use \"docs: ...\" for purely docs changes, \"infra: ...\"\nfor CI changes.\n - Example: \"community: add foobar LLM\"\n \nAdded docstring linting in the vectorstore.py file relating to issue\n#25154\n\n- \\[x\\] **Add tests and docs**: If you're adding a new integration, please\ninclude\n1. a test for the integration, preferably unit tests that do not rely on\nnetwork access,\n2. an example notebook showing its use. It lives in\n`docs/docs/integrations` directory.\n\n- \\[x\\] **Lint and test**: Run `make format`, `make lint` and `make test`\nfrom the root of the package\\(s\\) you've modified. See contribution\nguidelines for more: https://python.langchain.com/docs/contributing/\nAdditional guidelines:\n- Make sure optional dependencies are imported within a function.\n- Please do not add dependencies to pyproject.toml files \\(even optional\nones\\) unless they are required for unit tests.\n- Most PRs should not touch more than one package.\n- Changes should be backwards compatible.\n- If you are adding something to community, do not re-import it in\nlangchain.\nIf no one reviews your PR within a few days, please @-mention one of\nbaskaryan, efriis, eyurtsev, ccurme, vbarda, hwchase17.\n---------\nCo-authored-by: Siddhant Jain <sjain35@buffalo.edu>\nCo-authored-by: Erick Friis <erick@langchain.dev>\")[#29241](https://github.com/langchain-ai/langchain/pull/29241)[)](/langchain-ai/langchain/commit/9eb10a9240eddbd544cb970e189c02e27e025522 \"langchain: added vectorstore docstring linting \\(#29241\\)\n…ore.py\nThank you for contributing to LangChain!\n- \\[x\\] **PR title**: \"package: description\"\n- Where \"package\" is whichever of langchain, community, core, etc. is\nbeing modified. Use \"docs: ...\" for purely docs changes, \"infra: ...\"\nfor CI changes.\n - Example: \"community: add foobar LLM\"\n \nAdded docstring linting in the vectorstore.py file relating to issue\n#25154\n\n- \\[x\\] **Add tests and docs**: If you're adding a new integration, please\ninclude\n1. a test for the integration, preferably unit tests that do not rely on\nnetwork access,\n2. an example notebook showing its use. It lives in\n`docs/docs/integrations` directory.\n\n- \\[x\\] **Lint and test**: Run `make format`, `make lint` and `make test`\nfrom the root of the package\\(s\\) you've modified. See contribution\nguidelines for more: https://python.langchain.com/docs/contributing/\nAdditional guidelines:\n- Make sure optional dependencies are imported within a function.\n- Please do not add dependencies to pyproject.toml files \\(even optional\nones\\) unless they are required for unit tests.\n- Most PRs should not touch more than one package.\n- Changes should be backwards compatible.\n- If you are adding something to community, do not re-import it in\nlangchain.\nIf no one reviews your PR within a few days, please @-mention one of\nbaskaryan, efriis, eyurtsev, ccurme, vbarda, hwchase17.\n---------\nCo-authored-by: Siddhant Jain <sjain35@buffalo.edu>\nCo-authored-by: Erick Friis <erick@langchain.dev>\")| Jan 22, 2025  \n[scripts](/langchain-ai/langchain/tree/master/scripts \"scripts\")| [scripts](/langchain-ai/langchain/tree/master/scripts \"scripts\")| [infra: update mypy 1.10, ruff 0.5 (](/langchain-ai/langchain/commit/a0c2281540885b068331921d45d2549f7df8b55f \"infra: update mypy 1.10, ruff 0.5 \\(#23721\\)\n```python\n\"\"\"python scripts/update_mypy_ruff.py\"\"\"\nimport glob\nimport tomllib\nfrom pathlib import Path\nimport toml\nimport subprocess\nimport re\nROOT_DIR = Path\\(__file__\\).parents\\[1\\]\n\ndef main\\(\\):\n  for path in glob.glob\\(str\\(ROOT_DIR / \"libs/**/pyproject.toml\"\\), recursive=True\\):\n    print\\(path\\)\n    with open\\(path, \"rb\"\\) as f:\n      pyproject = tomllib.load\\(f\\)\n    try:\n      pyproject\\[\"tool\"\\]\\[\"poetry\"\\]\\[\"group\"\\]\\[\"typing\"\\]\\[\"dependencies\"\\]\\[\"mypy\"\\] = \\(\n        \"^1.10\"\n      \\)\n      pyproject\\[\"tool\"\\]\\[\"poetry\"\\]\\[\"group\"\\]\\[\"lint\"\\]\\[\"dependencies\"\\]\\[\"ruff\"\\] = \\(\n        \"^0.5\"\n      \\)\n    except KeyError:\n      continue\n    with open\\(path, \"w\"\\) as f:\n      toml.dump\\(pyproject, f\\)\n    cwd = \"/\".join\\(path.split\\(\"/\"\\)\\[:-1\\]\\)\n    completed = subprocess.run\\(\n      \"poetry lock --no-update; poetry install --with typing; poetry run mypy . --no-color\",\n      cwd=cwd,\n      shell=True,\n      capture_output=True,\n      text=True,\n    \\)\n    logs = completed.stdout.split\\(\"\\\\n\"\\)\n    to_ignore = {}\n    for l in logs:\n      if re.match\\(\"^\\(.*\\)\\\\:\\(\\\\d+\\)\\\\: error:.*\\\\\\[\\(.*\\)\\\\\\]\", l\\):\n        path, line_no, error_type = re.match\\(\n          \"^\\(.*\\)\\\\:\\(\\\\d+\\)\\\\: error:.*\\\\\\[\\(.*\\)\\\\\\]\", l\n        \\).groups\\(\\)\n        if \\(path, line_no\\) in to_ignore:\n          to_ignore\\[\\(path, line_no\\)\\].append\\(error_type\\)\n        else:\n          to_ignore\\[\\(path, line_no\\)\\] = \\[error_type\\]\n    print\\(len\\(to_ignore\\)\\)\n    for \\(error_path, line_no\\), error_types in to_ignore.items\\(\\):\n      all_errors = \", \".join\\(error_types\\)\n      full_path = f\"{cwd}/{error_path}\"\n      try:\n        with open\\(full_path, \"r\"\\) as f:\n          file_lines = f.readlines\\(\\)\n      except FileNotFoundError:\n        continue\n      file_lines\\[int\\(line_no\\) - 1\\] = \\(\n        file_lines\\[int\\(line_no\\) - 1\\]\\[:-1\\] + f\" # type: ignore\\[{all_errors}\\]\\\\n\"\n      \\)\n      with open\\(full_path, \"w\"\\) as f:\n        f.write\\(\"\".join\\(file_lines\\)\\)\n    subprocess.run\\(\n      \"poetry run ruff format .; poetry run ruff --select I --fix .\",\n      cwd=cwd,\n      shell=True,\n      capture_output=True,\n      text=True,\n    \\)\n\nif __name__ == \"__main__\":\n  main\\(\\)\n```\")[#23721](https://github.com/langchain-ai/langchain/pull/23721)[)](/langchain-ai/langchain/commit/a0c2281540885b068331921d45d2549f7df8b55f \"infra: update mypy 1.10, ruff 0.5 \\(#23721\\)\n```python\n\"\"\"python scripts/update_mypy_ruff.py\"\"\"\nimport glob\nimport tomllib\nfrom pathlib import Path\nimport toml\nimport subprocess\nimport re\nROOT_DIR = Path\\(__file__\\).parents\\[1\\]\n\ndef main\\(\\):\n  for path in glob.glob\\(str\\(ROOT_DIR / \"libs/**/pyproject.toml\"\\), recursive=True\\):\n    print\\(path\\)\n    with open\\(path, \"rb\"\\) as f:\n      pyproject = tomllib.load\\(f\\)\n    try:\n      pyproject\\[\"tool\"\\]\\[\"poetry\"\\]\\[\"group\"\\]\\[\"typing\"\\]\\[\"dependencies\"\\]\\[\"mypy\"\\] = \\(\n        \"^1.10\"\n      \\)\n      pyproject\\[\"tool\"\\]\\[\"poetry\"\\]\\[\"group\"\\]\\[\"lint\"\\]\\[\"dependencies\"\\]\\[\"ruff\"\\] = \\(\n        \"^0.5\"\n      \\)\n    except KeyError:\n      continue\n    with open\\(path, \"w\"\\) as f:\n      toml.dump\\(pyproject, f\\)\n    cwd = \"/\".join\\(path.split\\(\"/\"\\)\\[:-1\\]\\)\n    completed = subprocess.run\\(\n      \"poetry lock --no-update; poetry install --with typing; poetry run mypy . --no-color\",\n      cwd=cwd,\n      shell=True,\n      capture_output=True,\n      text=True,\n    \\)\n    logs = completed.stdout.split\\(\"\\\\n\"\\)\n    to_ignore = {}\n    for l in logs:\n      if re.match\\(\"^\\(.*\\)\\\\:\\(\\\\d+\\)\\\\: error:.*\\\\\\[\\(.*\\)\\\\\\]\", l\\):\n        path, line_no, error_type = re.match\\(\n          \"^\\(.*\\)\\\\:\\(\\\\d+\\)\\\\: error:.*\\\\\\[\\(.*\\)\\\\\\]\", l\n        \\).groups\\(\\)\n        if \\(path, line_no\\) in to_ignore:\n          to_ignore\\[\\(path, line_no\\)\\].append\\(error_type\\)\n        else:\n          to_ignore\\[\\(path, line_no\\)\\] = \\[error_type\\]\n    print\\(len\\(to_ignore\\)\\)\n    for \\(error_path, line_no\\), error_types in to_ignore.items\\(\\):\n      all_errors = \", \".join\\(error_types\\)\n      full_path = f\"{cwd}/{error_path}\"\n      try:\n        with open\\(full_path, \"r\"\\) as f:\n          file_lines = f.readlines\\(\\)\n      except FileNotFoundError:\n        continue\n      file_lines\\[int\\(line_no\\) - 1\\] = \\(\n        file_lines\\[int\\(line_no\\) - 1\\]\\[:-1\\] + f\" # type: ignore\\[{all_errors}\\]\\\\n\"\n      \\)\n      with open\\(full_path, \"w\"\\) as f:\n        f.write\\(\"\".join\\(file_lines\\)\\)\n    subprocess.run\\(\n      \"poetry run ruff format .; poetry run ruff --select I --fix .\",\n      cwd=cwd,\n      shell=True,\n      capture_output=True,\n      text=True,\n    \\)\n\nif __name__ == \"__main__\":\n  main\\(\\)\n```\")| Jul 3, 2024  \n[.gitattributes](/langchain-ai/langchain/blob/master/.gitattributes \".gitattributes\")| [.gitattributes](/langchain-ai/langchain/blob/master/.gitattributes \".gitattributes\")| [Update dev container (](/langchain-ai/langchain/commit/ccd916babe8b24ff8a2ef5d9c2a8a53487388f2a \"Update dev container \\(#6189\\)\nFixes https://github.com/hwchase17/langchain/issues/6172\nAs described in https://github.com/hwchase17/langchain/issues/6172, I'd\nlove to help update the dev container in this project.\n**Summary of changes:**\n- Dev container now builds \\(the current container in this repo won't\nbuild for me\\)\n- Dockerfile updates\n- Update image to our \\[currently-maintained Python\nimage\\]\\(https://github.com/devcontainers/images/tree/main/src/python/.devcontainer\\)\n\\(`mcr.microsoft.com/devcontainers/python`\\) rather than the deprecated\nimage from vscode-dev-containers\n- Move Dockerfile to root of repo - in order for `COPY` to work\nproperly, it needs the files \\(in this case, `pyproject.toml` and\n`poetry.toml`\\) in the same directory\n- devcontainer.json updates\n- Removed `customizations` and `remoteUser` since they should be covered\nby the updated image in the Dockerfile\n   - Update comments\n- Update docker-compose.yaml to properly point to updated Dockerfile\n- Add a .gitattributes to avoid line ending conversions, which can\nresult in hundreds of pending changes\n\\(\\[info\\]\\(https://code.visualstudio.com/docs/devcontainers/tips-and-tricks#_resolving-git-line-ending-issues-in-containers-resulting-in-many-modified-files\\)\\)\n- Add a README in the .devcontainer folder and info on the dev container\nin the contributing.md\n**Outstanding questions:**\n- Is it expected for `poetry install` to take some time? It takes about\n30 minutes for this dev container to finish building in a Codespace, but\na user should only have to experience this once. Through some online\ninvestigation, this doesn't seem unusual\n- Versions of poetry newer than 1.3.2 failed every time - based on some\nof the guidance in contributing.md and other online resources, it seemed\nchanging poetry versions might be a good solution. 1.3.2 is from Jan\n2023\n---------\nCo-authored-by: bamurtaugh <brmurtau@microsoft.com>\nCo-authored-by: Samruddhi Khandale <samruddhikhandale@github.com>\")[#6189](https://github.com/langchain-ai/langchain/pull/6189)[)](/langchain-ai/langchain/commit/ccd916babe8b24ff8a2ef5d9c2a8a53487388f2a \"Update dev container \\(#6189\\)\nFixes https://github.com/hwchase17/langchain/issues/6172\nAs described in https://github.com/hwchase17/langchain/issues/6172, I'd\nlove to help update the dev container in this project.\n**Summary of changes:**\n- Dev container now builds \\(the current container in this repo won't\nbuild for me\\)\n- Dockerfile updates\n- Update image to our \\[currently-maintained Python\nimage\\]\\(https://github.com/devcontainers/images/tree/main/src/python/.devcontainer\\)\n\\(`mcr.microsoft.com/devcontainers/python`\\) rather than the deprecated\nimage from vscode-dev-containers\n- Move Dockerfile to root of repo - in order for `COPY` to work\nproperly, it needs the files \\(in this case, `pyproject.toml` and\n`poetry.toml`\\) in the same directory\n- devcontainer.json updates\n- Removed `customizations` and `remoteUser` since they should be covered\nby the updated image in the Dockerfile\n   - Update comments\n- Update docker-compose.yaml to properly point to updated Dockerfile\n- Add a .gitattributes to avoid line ending conversions, which can\nresult in hundreds of pending changes\n\\(\\[info\\]\\(https://code.visualstudio.com/docs/devcontainers/tips-and-tricks#_resolving-git-line-ending-issues-in-containers-resulting-in-many-modified-files\\)\\)\n- Add a README in the .devcontainer folder and info on the dev container\nin the contributing.md\n**Outstanding questions:**\n- Is it expected for `poetry install` to take some time? It takes about\n30 minutes for this dev container to finish building in a Codespace, but\na user should only have to experience this once. Through some online\ninvestigation, this doesn't seem unusual\n- Versions of poetry newer than 1.3.2 failed every time - based on some\nof the guidance in contributing.md and other online resources, it seemed\nchanging poetry versions might be a good solution. 1.3.2 is from Jan\n2023\n---------\nCo-authored-by: bamurtaugh <brmurtau@microsoft.com>\nCo-authored-by: Samruddhi Khandale <samruddhikhandale@github.com>\")| Jun 17, 2023  \n[.gitignore](/langchain-ai/langchain/blob/master/.gitignore \".gitignore\")| [.gitignore](/langchain-ai/langchain/blob/master/.gitignore \".gitignore\")| [infra: gitignore api_ref mds (](/langchain-ai/langchain/commit/6a60a2a4353501157947eb49471be0b8a84e615d \"infra: gitignore api_ref mds \\(#25705\\)\")[#25705](https://github.com/langchain-ai/langchain/pull/25705)[)](/langchain-ai/langchain/commit/6a60a2a4353501157947eb49471be0b8a84e615d \"infra: gitignore api_ref mds \\(#25705\\)\")| Aug 23, 2024  \n[.pre-commit-config.yaml](/langchain-ai/langchain/blob/master/.pre-commit-config.yaml \".pre-commit-config.yaml\")| [.pre-commit-config.yaml](/langchain-ai/langchain/blob/master/.pre-commit-config.yaml \".pre-commit-config.yaml\")| [all: Add pre-commit hook (](/langchain-ai/langchain/commit/1e88adaca7bb0dfe86f933cbe82639653384b05d \"all: Add pre-commit hook \\(#26993\\)\nThis calls `make format` on projects that have modified files.\nSo `poetry install --with lint` must have been done for those projects.\n---------\nCo-authored-by: Erick Friis <erick@langchain.dev>\")[#26993](https://github.com/langchain-ai/langchain/pull/26993)[)](/langchain-ai/langchain/commit/1e88adaca7bb0dfe86f933cbe82639653384b05d \"all: Add pre-commit hook \\(#26993\\)\nThis calls `make format` on projects that have modified files.\nSo `poetry install --with lint` must have been done for those projects.\n---------\nCo-authored-by: Erick Friis <erick@langchain.dev>\")| Dec 19, 2024  \n[.readthedocs.yaml](/langchain-ai/langchain/blob/master/.readthedocs.yaml \".readthedocs.yaml\")| [.readthedocs.yaml](/langchain-ai/langchain/blob/master/.readthedocs.yaml \".readthedocs.yaml\")| [infra: update rtd yaml (](/langchain-ai/langchain/commit/dd68a8716ec9ce35b65ab575853e0ef689e5caa1 \"infra: update rtd yaml \\(#17502\\)\")[#17502](https://github.com/langchain-ai/langchain/pull/17502)[)](/langchain-ai/langchain/commit/dd68a8716ec9ce35b65ab575853e0ef689e5caa1 \"infra: update rtd yaml \\(#17502\\)\")| Feb 14, 2024  \n[CITATION.cff](/langchain-ai/langchain/blob/master/CITATION.cff \"CITATION.cff\")| [CITATION.cff](/langchain-ai/langchain/blob/master/CITATION.cff \"CITATION.cff\")| [rename repo namespace to langchain-ai (](/langchain-ai/langchain/commit/a363ab52923582dedc7809c6ac960201c4abe882 \"rename repo namespace to langchain-ai \\(#11259\\)\n### Description\nrenamed several repository links from `hwchase17` to `langchain-ai`.\n### Why\nI discovered that the README file in the devcontainer contains an old\nrepository name, so I took the opportunity to rename the old repository\nname in all files within the repository, excluding those that do not\nrequire changes.\n### Dependencies\nnone\n### Tag maintainer\n@baskaryan\n### Twitter handle\n\\[kzk_maeda\\]\\(https://twitter.com/kzk_maeda\\)\")[#11259](https://github.com/langchain-ai/langchain/pull/11259)[)](/langchain-ai/langchain/commit/a363ab52923582dedc7809c6ac960201c4abe882 \"rename repo namespace to langchain-ai \\(#11259\\)\n### Description\nrenamed several repository links from `hwchase17` to `langchain-ai`.\n### Why\nI discovered that the README file in the devcontainer contains an old\nrepository name, so I took the opportunity to rename the old repository\nname in all files within the repository, excluding those that do not\nrequire changes.\n### Dependencies\nnone\n### Tag maintainer\n@baskaryan\n### Twitter handle\n\\[kzk_maeda\\]\\(https://twitter.com/kzk_maeda\\)\")| Oct 1, 2023  \n[LICENSE](/langchain-ai/langchain/blob/master/LICENSE \"LICENSE\")| [LICENSE](/langchain-ai/langchain/blob/master/LICENSE \"LICENSE\")| [Library Licenses (](/langchain-ai/langchain/commit/5eca1bd93ff42435f5d2299dd620e82d2b0c4515 \"Library Licenses \\(#13300\\)\nSame change as #8403 but in other libs\nalso updates \\(c\\) LangChain Inc. instead of @hwchase17\")[#13300](https://github.com/langchain-ai/langchain/pull/13300)[)](/langchain-ai/langchain/commit/5eca1bd93ff42435f5d2299dd620e82d2b0c4515 \"Library Licenses \\(#13300\\)\nSame change as #8403 but in other libs\nalso updates \\(c\\) LangChain Inc. instead of @hwchase17\")| Nov 29, 2023  \n[MIGRATE.md](/langchain-ai/langchain/blob/master/MIGRATE.md \"MIGRATE.md\")| [MIGRATE.md](/langchain-ai/langchain/blob/master/MIGRATE.md \"MIGRATE.md\")| [Proofreading and Editing Report for Migration Guide (](/langchain-ai/langchain/commit/beef4c4d622d7cb79bcc532e633bffcee206b91c \"Proofreading and Editing Report for Migration Guide \\(#28084\\)\nCorrections and Suggestions for Migrating LangChain Code Documentation\nThank you for contributing to LangChain!\n- \\[ \\] **PR title**: \"package: description\"\n- Where \"package\" is whichever of langchain, community, core, etc. is\nbeing modified. Use \"docs: ...\" for purely docs changes, \"infra: ...\"\nfor CI changes.\n - Example: \"community: add foobar LLM\"\n\n- \\[ \\] **PR message**: ***Delete this entire checklist*** and replace\nwith\n  - **Description:** a description of the change\n  - **Issue:** the issue # it fixes, if applicable\n  - **Dependencies:** any dependencies required for this change\n- **Twitter handle:** if your PR gets announced, and you'd like a\nmention, we'll gladly shout you out!\n\n- \\[ \\] **Add tests and docs**: If you're adding a new integration, please\ninclude\n1. a test for the integration, preferably unit tests that do not rely on\nnetwork access,\n2. an example notebook showing its use. It lives in\n`docs/docs/integrations` directory.\n\n- \\[ \\] **Lint and test**: Run `make format`, `make lint` and `make test`\nfrom the root of the package\\(s\\) you've modified. See contribution\nguidelines for more: https://python.langchain.com/docs/contributing/\nAdditional guidelines:\n- Make sure optional dependencies are imported within a function.\n- Please do not add dependencies to pyproject.toml files \\(even optional\nones\\) unless they are required for unit tests.\n- Most PRs should not touch more than one package.\n- Changes should be backwards compatible.\n- If you are adding something to community, do not re-import it in\nlangchain.\nIf no one reviews your PR within a few days, please @-mention one of\nbaskaryan, efriis, eyurtsev, ccurme, vbarda, hwchase17.\")[#28084](https://github.com/langchain-ai/langchain/pull/28084)[)](/langchain-ai/langchain/commit/beef4c4d622d7cb79bcc532e633bffcee206b91c \"Proofreading and Editing Report for Migration Guide \\(#28084\\)\nCorrections and Suggestions for Migrating LangChain Code Documentation\nThank you for contributing to LangChain!\n- \\[ \\] **PR title**: \"package: description\"\n- Where \"package\" is whichever of langchain, community, core, etc. is\nbeing modified. Use \"docs: ...\" for purely docs changes, \"infra: ...\"\nfor CI changes.\n - Example: \"community: add foobar LLM\"\n\n- \\[ \\] **PR message**: ***Delete this entire checklist*** and replace\nwith\n  - **Description:** a description of the change\n  - **Issue:** the issue # it fixes, if applicable\n  - **Dependencies:** any dependencies required for this change\n- **Twitter handle:** if your PR gets announced, and you'd like a\nmention, we'll gladly shout you out!\n\n- \\[ \\] **Add tests and docs**: If you're adding a new integration, please\ninclude\n1. a test for the integration, preferably unit tests that do not rely on\nnetwork access,\n2. an example notebook showing its use. It lives in\n`docs/docs/integrations` directory.\n\n- \\[ \\] **Lint and test**: Run `make format`, `make lint` and `make test`\nfrom the root of the package\\(s\\) you've modified. See contribution\nguidelines for more: https://python.langchain.com/docs/contributing/\nAdditional guidelines:\n- Make sure optional dependencies are imported within a function.\n- Please do not add dependencies to pyproject.toml files \\(even optional\nones\\) unless they are required for unit tests.\n- Most PRs should not touch more than one package.\n- Changes should be backwards compatible.\n- If you are adding something to community, do not re-import it in\nlangchain.\nIf no one reviews your PR within a few days, please @-mention one of\nbaskaryan, efriis, eyurtsev, ccurme, vbarda, hwchase17.\")| Nov 13, 2024  \n[Makefile](/langchain-ai/langchain/blob/master/Makefile \"Makefile\")| [Makefile](/langchain-ai/langchain/blob/master/Makefile \"Makefile\")| [docs: more api ref links, add linting step to prevent more (](/langchain-ai/langchain/commit/e6a08355a3222803cbda7bfbc3b93a3d0d15b586 \"docs: more api ref links, add linting step to prevent more \\(#28495\\)\")[#28495](https://github.com/langchain-ai/langchain/pull/28495)[)](/langchain-ai/langchain/commit/e6a08355a3222803cbda7bfbc3b93a3d0d15b586 \"docs: more api ref links, add linting step to prevent more \\(#28495\\)\")| Dec 4, 2024  \n[README.md](/langchain-ai/langchain/blob/master/README.md \"README.md\")| [README.md](/langchain-ai/langchain/blob/master/README.md \"README.md\")| [docs: fix readme link (](/langchain-ai/langchain/commit/5656702b8dea5b008d8026b30274b23f23bdc041 \"docs: fix readme link \\(#28770\\)\nSQL Llama2 Template -> LangChain Extract\")[#28770](https://github.com/langchain-ai/langchain/pull/28770)[)](/langchain-ai/langchain/commit/5656702b8dea5b008d8026b30274b23f23bdc041 \"docs: fix readme link \\(#28770\\)\nSQL Llama2 Template -> LangChain Extract\")| Dec 17, 2024  \n[SECURITY.md](/langchain-ai/langchain/blob/master/SECURITY.md \"SECURITY.md\")| [SECURITY.md](/langchain-ai/langchain/blob/master/SECURITY.md \"SECURITY.md\")| [docs: single security doc (](/langchain-ai/langchain/commit/12d74d5bef144bbdd4c76c08a6e9c286909eb8a7 \"docs: single security doc \\(#28515\\)\")[#28515](https://github.com/langchain-ai/langchain/pull/28515)[)](/langchain-ai/langchain/commit/12d74d5bef144bbdd4c76c08a6e9c286909eb8a7 \"docs: single security doc \\(#28515\\)\")| Dec 4, 2024  \n[poetry.lock](/langchain-ai/langchain/blob/master/poetry.lock \"poetry.lock\")| [poetry.lock](/langchain-ai/langchain/blob/master/poetry.lock \"poetry.lock\")| [infra: fix notebook tests (](/langchain-ai/langchain/commit/23b433f683d1dfd2474c4f5a570b7f01ce81c4da \"infra: fix notebook tests \\(#28722\\)\nBump unstructured to pick up resolution of\nhttps://github.com/Unstructured-IO/unstructured/issues/3795\")[#28722](https://github.com/langchain-ai/langchain/pull/28722)[)](/langchain-ai/langchain/commit/23b433f683d1dfd2474c4f5a570b7f01ce81c4da \"infra: fix notebook tests \\(#28722\\)\nBump unstructured to pick up resolution of\nhttps://github.com/Unstructured-IO/unstructured/issues/3795\")| Dec 14, 2024  \n[poetry.toml](/langchain-ai/langchain/blob/master/poetry.toml \"poetry.toml\")| [poetry.toml](/langchain-ai/langchain/blob/master/poetry.toml \"poetry.toml\")| [multiple: use modern installer in poetry (](/langchain-ai/langchain/commit/007c5a85d5264203ec0e0a6c44eb13b079bfb984 \"multiple: use modern installer in poetry \\(#23998\\)\")[#23998](https://github.com/langchain-ai/langchain/pull/23998)[)](/langchain-ai/langchain/commit/007c5a85d5264203ec0e0a6c44eb13b079bfb984 \"multiple: use modern installer in poetry \\(#23998\\)\")| Jul 9, 2024  \n[pyproject.toml](/langchain-ai/langchain/blob/master/pyproject.toml \"pyproject.toml\")| [pyproject.toml](/langchain-ai/langchain/blob/master/pyproject.toml \"pyproject.toml\")| [Add Google-style docstring linting and update pyproject.toml (](/langchain-ai/langchain/commit/6c52378992f1b6b07cc9ac36dc45e881f430c85b \"Add Google-style docstring linting and update pyproject.toml \\(#29303\\)\n### Description:\nThis PR introduces Google-style docstring linting for the\nModelLaboratory class in libs/langchain/langchain/model_laboratory.py.\nIt also updates the pyproject.toml file to comply with the latest Ruff\nconfiguration standards \\(deprecating top-level lint settings in favor of\nlint\\).\n### Changes include:\n- \\[x\\] Added detailed Google-style docstrings to all methods in\nModelLaboratory.\n- \\[x\\] Updated pyproject.toml to move select and pydocstyle settings\nunder the \\[tool.ruff.lint\\] section.\n- \\[x\\] Ensured all files pass Ruff linting.\nIssue:\nCloses #25154\n### Dependencies:\nNo additional dependencies are required for this change.\n### Checklist\n- \\[x\\] Files passes ruff linting.\n- \\[x\\] Docstrings conform to the Google-style convention.\n- \\[x\\] pyproject.toml updated to avoid deprecation warnings.\n- \\[x\\] My PR is ready to review, please review.\")[#29303](https://github.com/langchain-ai/langchain/pull/29303)[)](/langchain-ai/langchain/commit/6c52378992f1b6b07cc9ac36dc45e881f430c85b \"Add Google-style docstring linting and update pyproject.toml \\(#29303\\)\n### Description:\nThis PR introduces Google-style docstring linting for the\nModelLaboratory class in libs/langchain/langchain/model_laboratory.py.\nIt also updates the pyproject.toml file to comply with the latest Ruff\nconfiguration standards \\(deprecating top-level lint settings in favor of\nlint\\).\n### Changes include:\n- \\[x\\] Added detailed Google-style docstrings to all methods in\nModelLaboratory.\n- \\[x\\] Updated pyproject.toml to move select and pydocstyle settings\nunder the \\[tool.ruff.lint\\] section.\n- \\[x\\] Ensured all files pass Ruff linting.\nIssue:\nCloses #25154\n### Dependencies:\nNo additional dependencies are required for this change.\n### Checklist\n- \\[x\\] Files passes ruff linting.\n- \\[x\\] Docstrings conform to the Google-style convention.\n- \\[x\\] pyproject.toml updated to avoid deprecation warnings.\n- \\[x\\] My PR is ready to review, please review.\")| Jan 19, 2025  \n[yarn.lock](/langchain-ai/langchain/blob/master/yarn.lock \"yarn.lock\")| [yarn.lock](/langchain-ai/langchain/blob/master/yarn.lock \"yarn.lock\")| [box: add langchain box package and DocumentLoader (](/langchain-ai/langchain/commit/55fd2e21584d6ef269ff3bdd2f2b7bd49889ee3c \"box: add langchain box package and DocumentLoader \\(#25506\\)\nThank you for contributing to LangChain!\n-Description: Adding new package: `langchain-box`:\n* `langchain_box.document_loaders.BoxLoader` — DocumentLoader\nfunctionality\n* `langchain_box.utilities.BoxAPIWrapper` — Box-specific code\n* `langchain_box.utilities.BoxAuth` — Helper class for Box\nauthentication\n* `langchain_box.utilities.BoxAuthType` — enum used by BoxAuth class\n- Twitter handle: @boxplatform\n\n- \\[x\\] **Add tests and docs**: If you're adding a new integration, please\ninclude\n1. a test for the integration, preferably unit tests that do not rely on\nnetwork access,\n2. an example notebook showing its use. It lives in\n`docs/docs/integrations` directory.\n\n- \\[x\\] **Lint and test**: Run `make format`, `make lint` and `make test`\nfrom the root of the package\\(s\\) you've modified. See contribution\nguidelines for more: https://python.langchain.com/docs/contributing/\nAdditional guidelines:\n- Make sure optional dependencies are imported within a function.\n- Please do not add dependencies to pyproject.toml files \\(even optional\nones\\) unless they are required for unit tests.\n- Most PRs should not touch more than one package.\n- Changes should be backwards compatible.\n- If you are adding something to community, do not re-import it in\nlangchain.\nIf no one reviews your PR within a few days, please @-mention one of\nbaskaryan, efriis, eyurtsev, ccurme, vbarda, hwchase17.\n---------\nCo-authored-by: Erick Friis <erickfriis@gmail.com>\nCo-authored-by: Erick Friis <erick@langchain.dev>\")[#25506](https://github.com/langchain-ai/langchain/pull/25506)[)](/langchain-ai/langchain/commit/55fd2e21584d6ef269ff3bdd2f2b7bd49889ee3c \"box: add langchain box package and DocumentLoader \\(#25506\\)\nThank you for contributing to LangChain!\n-Description: Adding new package: `langchain-box`:\n* `langchain_box.document_loaders.BoxLoader` — DocumentLoader\nfunctionality\n* `langchain_box.utilities.BoxAPIWrapper` — Box-specific code\n* `langchain_box.utilities.BoxAuth` — Helper class for Box\nauthentication\n* `langchain_box.utilities.BoxAuthType` — enum used by BoxAuth class\n- Twitter handle: @boxplatform\n\n- \\[x\\] **Add tests and docs**: If you're adding a new integration, please\ninclude\n1. a test for the integration, preferably unit tests that do not rely on\nnetwork access,\n2. an example notebook showing its use. It lives in\n`docs/docs/integrations` directory.\n\n- \\[x\\] **Lint and test**: Run `make format`, `make lint` and `make test`\nfrom the root of the package\\(s\\) you've modified. See contribution\nguidelines for more: https://python.langchain.com/docs/contributing/\nAdditional guidelines:\n- Make sure optional dependencies are imported within a function.\n- Please do not add dependencies to pyproject.toml files \\(even optional\nones\\) unless they are required for unit tests.\n- Most PRs should not touch more than one package.\n- Changes should be backwards compatible.\n- If you are adding something to community, do not re-import it in\nlangchain.\nIf no one reviews your PR within a few days, please @-mention one of\nbaskaryan, efriis, eyurtsev, ccurme, vbarda, hwchase17.\n---------\nCo-authored-by: Erick Friis <erickfriis@gmail.com>\nCo-authored-by: Erick Friis <erick@langchain.dev>\")| Aug 21, 2024  \nView all files  \n  \n## Repository files navigation\n\n  * [README](#)\n  * [Code of conduct](#)\n  * [MIT license](#)\n  * [Security](#)\n\n\n\n# 🦜️🔗 LangChain\n\n[](#️-langchain)\n\n⚡ Build context-aware reasoning applications ⚡\n\n[![Release Notes](https://camo.githubusercontent.com/41ac979ad4e5a6f01a6fd1525321f58afbd22c1d895c491ad35fd02b36ae5f43/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6c616e67636861696e2d61692f6c616e67636861696e3f7374796c653d666c61742d737175617265)](https://github.com/langchain-ai/langchain/releases) [![CI](https://github.com/langchain-ai/langchain/actions/workflows/check_diffs.yml/badge.svg)](https://github.com/langchain-ai/langchain/actions/workflows/check_diffs.yml) [![PyPI - License](https://camo.githubusercontent.com/c11a4ab9212c5029f425ffcc8b7e96503b684fc9ddaf782bf094217a4fd64d74/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6c616e67636861696e2d636f72653f7374796c653d666c61742d737175617265)](https://opensource.org/licenses/MIT) [![PyPI - Downloads](https://camo.githubusercontent.com/4d8dab9ad311d70f41203de5d42d818c679d5d59bcba0200f262f934ae4dbaf6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f6c616e67636861696e2d636f72653f7374796c653d666c61742d737175617265)](https://pypistats.org/packages/langchain-core) [![GitHub star chart](https://camo.githubusercontent.com/1dfba37328291056d23ea687f51e983d739a39526f75947331650c57fe755b1d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6c616e67636861696e2d61692f6c616e67636861696e3f7374796c653d666c61742d737175617265)](https://star-history.com/#langchain-ai/langchain) [![Open Issues](https://camo.githubusercontent.com/f4b106d240df0c680c5b98f5c5f7071b2bd6a66ee37e9c6b691e24fabd358a0b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d7261772f6c616e67636861696e2d61692f6c616e67636861696e3f7374796c653d666c61742d737175617265)](https://github.com/langchain-ai/langchain/issues) [![Open in Dev Containers](https://camo.githubusercontent.com/45e9addd26ffda5e9fd54b1390f4419b1b1dbe4cdbbef267ebac1661705d2cb9/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d446576253230436f6e7461696e657273266d6573736167653d4f70656e26636f6c6f723d626c7565266c6f676f3d76697375616c73747564696f636f6465267374796c653d666c61742d737175617265)](https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/langchain-ai/langchain) [![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/langchain-ai/langchain) [![Twitter](https://camo.githubusercontent.com/4dcbdca1cef6d6a3176ae1c41ff677586ca10c970626d4602caa031edb9f1dff/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f68747470732f747769747465722e636f6d2f6c616e67636861696e61692e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f772532302534304c616e67436861696e4149)](https://twitter.com/langchainai)\n\nLooking for the JS/TS library? Check out [LangChain.js](https://github.com/langchain-ai/langchainjs).\n\nTo help you ship LangChain apps to production faster, check out [LangSmith](https://smith.langchain.com). [LangSmith](https://smith.langchain.com) is a unified developer platform for building, testing, and monitoring LLM applications. Fill out [this form](https://www.langchain.com/contact-sales) to speak with our sales team.\n\n## Quick Install\n\n[](#quick-install)\n\nWith pip:\n\n```\npip install langchain\n```\n\nWith conda:\n\n```\nconda install langchain -c conda-forge\n```\n\n## 🤔 What is LangChain?\n\n[](#-what-is-langchain)\n\n**LangChain** is a framework for developing applications powered by large language models (LLMs).\n\nFor these applications, LangChain simplifies the entire application lifecycle:\n\n  * **Open-source libraries** : Build your applications using LangChain's open-source [components](https://python.langchain.com/docs/concepts/) and [third-party integrations](https://python.langchain.com/docs/integrations/providers/). Use [LangGraph](https://langchain-ai.github.io/langgraph/) to build stateful agents with first-class streaming and human-in-the-loop support.\n  * **Productionization** : Inspect, monitor, and evaluate your apps with [LangSmith](https://docs.smith.langchain.com/) so that you can constantly optimize and deploy with confidence.\n  * **Deployment** : Turn your LangGraph applications into production-ready APIs and Assistants with [LangGraph Platform](https://langchain-ai.github.io/langgraph/cloud/).\n\n\n\n### Open-source libraries\n\n[](#open-source-libraries)\n\n  * **`langchain-core`** : Base abstractions.\n  * **Integration packages** (e.g. **`langchain-openai`** , **`langchain-anthropic`** , etc.): Important integrations have been split into lightweight packages that are co-maintained by the LangChain team and the integration developers.\n  * **`langchain`** : Chains, agents, and retrieval strategies that make up an application's cognitive architecture.\n  * **`langchain-community`** : Third-party integrations that are community maintained.\n  * **[LangGraph](https://langchain-ai.github.io/langgraph)** : Build robust and stateful multi-actor applications with LLMs by modeling steps as edges and nodes in a graph. Integrates smoothly with LangChain, but can be used without it. To learn more about LangGraph, check out our first LangChain Academy course, _Introduction to LangGraph_ , available [here](https://academy.langchain.com/courses/intro-to-langgraph).\n\n\n\n### Productionization:\n\n[](#productionization)\n\n  * **[LangSmith](https://docs.smith.langchain.com/)** : A developer platform that lets you debug, test, evaluate, and monitor chains built on any LLM framework and seamlessly integrates with LangChain.\n\n\n\n### Deployment:\n\n[](#deployment)\n\n  * **[LangGraph Platform](https://langchain-ai.github.io/langgraph/cloud/)** : Turn your LangGraph applications into production-ready APIs and Assistants.\n\n\n\n[![Diagram outlining the hierarchical organization of the LangChain framework, displaying the interconnected parts across multiple layers.](/langchain-ai/langchain/raw/master/docs/static/svg/langchain_stack_112024.svg#gh-light-mode-only)](/langchain-ai/langchain/blob/master/docs/static/svg/langchain_stack_112024.svg#gh-light-mode-only) [![Diagram outlining the hierarchical organization of the LangChain framework, displaying the interconnected parts across multiple layers.](/langchain-ai/langchain/raw/master/docs/static/svg/langchain_stack_112024_dark.svg#gh-dark-mode-only)](/langchain-ai/langchain/blob/master/docs/static/svg/langchain_stack_112024_dark.svg#gh-dark-mode-only)\n\n## 🧱 What can you build with LangChain?\n\n[](#-what-can-you-build-with-langchain)\n\n**❓ Question answering with RAG**\n\n  * [Documentation](https://python.langchain.com/docs/tutorials/rag/)\n  * End-to-end Example: [Chat LangChain](https://chat.langchain.com) and [repo](https://github.com/langchain-ai/chat-langchain)\n\n\n\n**🧱 Extracting structured output**\n\n  * [Documentation](https://python.langchain.com/docs/tutorials/extraction/)\n  * End-to-end Example: [LangChain Extract](https://github.com/langchain-ai/langchain-extract/)\n\n\n\n**🤖 Chatbots**\n\n  * [Documentation](https://python.langchain.com/docs/tutorials/chatbot/)\n  * End-to-end Example: [Web LangChain (web researcher chatbot)](https://weblangchain.vercel.app) and [repo](https://github.com/langchain-ai/weblangchain)\n\n\n\nAnd much more! Head to the [Tutorials](https://python.langchain.com/docs/tutorials/) section of the docs for more.\n\n## 🚀 How does LangChain help?\n\n[](#-how-does-langchain-help)\n\nThe main value props of the LangChain libraries are:\n\n  1. **Components** : composable building blocks, tools and integrations for working with language models. Components are modular and easy-to-use, whether you are using the rest of the LangChain framework or not.\n  2. **Easy orchestration with LangGraph** : [LangGraph](https://langchain-ai.github.io/langgraph/), built on top of `langchain-core`, has built-in support for [messages](https://python.langchain.com/docs/concepts/messages/), [tools](https://python.langchain.com/docs/concepts/tools/), and other LangChain abstractions. This makes it easy to combine components into production-ready applications with persistence, streaming, and other key features. Check out the LangChain [tutorials page](https://python.langchain.com/docs/tutorials/#orchestration) for examples.\n\n\n\n## Components\n\n[](#components)\n\nComponents fall into the following **modules** :\n\n**📃 Model I/O**\n\nThis includes [prompt management](https://python.langchain.com/docs/concepts/prompt_templates/) and a generic interface for [chat models](https://python.langchain.com/docs/concepts/chat_models/), including a consistent interface for [tool-calling](https://python.langchain.com/docs/concepts/tool_calling/) and [structured output](https://python.langchain.com/docs/concepts/structured_outputs/) across model providers.\n\n**📚 Retrieval**\n\nRetrieval Augmented Generation involves [loading data](https://python.langchain.com/docs/concepts/document_loaders/) from a variety of sources, [preparing it](https://python.langchain.com/docs/concepts/text_splitters/), then [searching over (a.k.a. retrieving from)](https://python.langchain.com/docs/concepts/retrievers/) it for use in the generation step.\n\n**🤖 Agents**\n\nAgents allow an LLM autonomy over how a task is accomplished. Agents make decisions about which Actions to take, then take that Action, observe the result, and repeat until the task is complete. [LangGraph](https://langchain-ai.github.io/langgraph/) makes it easy to use LangChain components to build both [custom](https://langchain-ai.github.io/langgraph/tutorials/) and [built-in](https://langchain-ai.github.io/langgraph/how-tos/create-react-agent/) LLM agents.\n\n## 📖 Documentation\n\n[](#-documentation)\n\nPlease see [here](https://python.langchain.com) for full documentation, which includes:\n\n  * [Introduction](https://python.langchain.com/docs/introduction/): Overview of the framework and the structure of the docs.\n  * [Tutorials](https://python.langchain.com/docs/tutorials/): If you're looking to build something specific or are more of a hands-on learner, check out our tutorials. This is the best place to get started.\n  * [How-to guides](https://python.langchain.com/docs/how_to/): Answers to “How do I….?” type questions. These guides are goal-oriented and concrete; they're meant to help you complete a specific task.\n  * [Conceptual guide](https://python.langchain.com/docs/concepts/): Conceptual explanations of the key parts of the framework.\n  * [API Reference](https://python.langchain.com/api_reference/): Thorough documentation of every class and method.\n\n\n\n## 🌐 Ecosystem\n\n[](#-ecosystem)\n\n  * [🦜🛠️ LangSmith](https://docs.smith.langchain.com/): Trace and evaluate your language model applications and intelligent agents to help you move from prototype to production.\n  * [🦜🕸️ LangGraph](https://langchain-ai.github.io/langgraph/): Create stateful, multi-actor applications with LLMs. Integrates smoothly with LangChain, but can be used without it.\n  * [🦜🕸️ LangGraph Platform](https://langchain-ai.github.io/langgraph/concepts/#langgraph-platform): Deploy LLM applications built with LangGraph into production.\n\n\n\n## 💁 Contributing\n\n[](#-contributing)\n\nAs an open-source project in a rapidly developing field, we are extremely open to contributions, whether it be in the form of a new feature, improved infrastructure, or better documentation.\n\nFor detailed information on how to contribute, see [here](https://python.langchain.com/docs/contributing/).\n\n## 🌟 Contributors\n\n[](#-contributors)\n\n[![langchain contributors](https://camo.githubusercontent.com/17ff631f142bb9263e1b0dc039c78a82fd119efbd58569be208c5f6eebdd9c75/68747470733a2f2f636f6e747269622e726f636b732f696d6167653f7265706f3d6c616e67636861696e2d61692f6c616e67636861696e266d61783d32303030)](https://github.com/langchain-ai/langchain/graphs/contributors)\n\n## About\n\n🦜🔗 Build context-aware reasoning applications \n\n[python.langchain.com](https://python.langchain.com \"https://python.langchain.com\")\n\n### Resources\n\n[ Readme ](#readme-ov-file)\n\n### License\n\n[ MIT license ](#MIT-1-ov-file)\n\n### Code of conduct\n\n[ Code of conduct ](#coc-ov-file)\n\n### Security policy\n\n[ Security policy ](#security-ov-file)\n\n### Citation\n\nCite this repository \n\nLoading\n\nSomething went wrong. \n\n[ Activity](/langchain-ai/langchain/activity)\n\n[ Custom properties](/langchain-ai/langchain/custom-properties)\n\n### Stars\n\n[ **98.7k** stars](/langchain-ai/langchain/stargazers)\n\n### Watchers\n\n[ **709** watching](/langchain-ai/langchain/watchers)\n\n### Forks\n\n[ **16.1k** forks](/langchain-ai/langchain/forks)\n\n[ Report repository ](/contact/report-content?content_url=https%3A%2F%2Fgithub.com%2Flangchain-ai%2Flangchain&report=langchain-ai+%28user%29)\n\n##  [Releases 761](/langchain-ai/langchain/releases)\n\n[ langchain-core==0.3.31 Latest  Jan 21, 2025 ](/langchain-ai/langchain/releases/tag/langchain-core%3D%3D0.3.31)\n\n[+ 760 releases](/langchain-ai/langchain/releases)\n\n##  [Packages 0](/orgs/langchain-ai/packages?repo_name=langchain)\n\nNo packages published \n\n##  [Used by 171k](/langchain-ai/langchain/network/dependents)\n\n[\n\n  * ![@alishangtian](https://avatars.githubusercontent.com/u/3463296?s=64&v=4)\n  * ![@vieisi8](https://avatars.githubusercontent.com/u/146730344?s=64&v=4)\n  * ![@mwebberclay](https://avatars.githubusercontent.com/u/177776801?s=64&v=4)\n  * ![@ka1817](https://avatars.githubusercontent.com/u/173427201?s=64&v=4)\n  * ![@tail-unica](https://avatars.githubusercontent.com/u/187305435?s=64&v=4)\n  * ![@jkittell](https://avatars.githubusercontent.com/u/11903226?s=64&v=4)\n  * ![@rezvanjoshaghani](https://avatars.githubusercontent.com/u/8338655?s=64&v=4)\n  * ![@armallah](https://avatars.githubusercontent.com/u/77011373?s=64&v=4)\n\n+ 171,380  ](/langchain-ai/langchain/network/dependents)\n\n##  [Contributors 3,412](/langchain-ai/langchain/graphs/contributors)\n\n  * [ ![@baskaryan](https://avatars.githubusercontent.com/u/22008038?s=64&v=4) ](https://github.com/baskaryan)\n  * [ ![@hwchase17](https://avatars.githubusercontent.com/u/11986836?s=64&v=4) ](https://github.com/hwchase17)\n  * [ ![@efriis](https://avatars.githubusercontent.com/u/9557659?s=64&v=4) ](https://github.com/efriis)\n  * [ ![@eyurtsev](https://avatars.githubusercontent.com/u/3205522?s=64&v=4) ](https://github.com/eyurtsev)\n  * [ ![@ccurme](https://avatars.githubusercontent.com/u/26529506?s=64&v=4) ](https://github.com/ccurme)\n  * [ ![@nfcampos](https://avatars.githubusercontent.com/u/56902?s=64&v=4) ](https://github.com/nfcampos)\n  * [ ![@leo-gan](https://avatars.githubusercontent.com/u/2256422?s=64&v=4) ](https://github.com/leo-gan)\n  * [ ![@hinthornw](https://avatars.githubusercontent.com/u/13333726?s=64&v=4) ](https://github.com/hinthornw)\n  * [ ![@dev2049](https://avatars.githubusercontent.com/u/130488702?s=64&v=4) ](https://github.com/dev2049)\n  * [ ![@cbornet](https://avatars.githubusercontent.com/u/11633333?s=64&v=4) ](https://github.com/cbornet)\n  * [ ![@rlancemartin](https://avatars.githubusercontent.com/u/122662504?s=64&v=4) ](https://github.com/rlancemartin)\n  * [ ![@vowelparrot](https://avatars.githubusercontent.com/u/130414180?s=64&v=4) ](https://github.com/vowelparrot)\n  * [ ![@jacoblee93](https://avatars.githubusercontent.com/u/6952323?s=64&v=4) ](https://github.com/jacoblee93)\n  * [ ![@tomasonjo](https://avatars.githubusercontent.com/u/19948365?s=64&v=4) ](https://github.com/tomasonjo)\n\n\n\n[+ 3,398 contributors](/langchain-ai/langchain/graphs/contributors)\n\n## Languages\n\n  * [ Jupyter Notebook 62.0% ](/langchain-ai/langchain/search?l=jupyter-notebook)\n  * [ Python 37.8% ](/langchain-ai/langchain/search?l=python)\n  * [ MDX 0.1% ](/langchain-ai/langchain/search?l=mdx)\n  * [ Makefile 0.1% ](/langchain-ai/langchain/search?l=makefile)\n  * [ XSLT 0.0% ](/langchain-ai/langchain/search?l=xslt)\n  * [ Shell 0.0% ](/langchain-ai/langchain/search?l=shell)\n\n\n\n## Footer\n\n[ ](https://github.com \"GitHub\") © 2025 GitHub, Inc. \n\n### Footer navigation\n\n  * [Terms](https://docs.github.com/site-policy/github-terms/github-terms-of-service)\n  * [Privacy](https://docs.github.com/site-policy/privacy-policies/github-privacy-statement)\n  * [Security](https://github.com/security)\n  * [Status](https://www.githubstatus.com/)\n  * [Docs](https://docs.github.com/)\n  * [Contact](https://support.github.com?tags=dotcom-footer)\n  * Manage cookies \n  * Do not share my personal information \n\n\n\nYou can’t perform that action at this time. \n",
    "content_quality_score": 0.0,
    "summary": null,
    "child_urls": [
        "https://github.com/langchain-ai/langchain/#start-of-content",
        "https://github.com/",
        "https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Flangchain-ai%2Flangchain%2F",
        "https://github.com/features/copilot",
        "https://github.com/features/security",
        "https://github.com/features/actions",
        "https://github.com/features/codespaces",
        "https://github.com/features/issues",
        "https://github.com/features/code-review",
        "https://github.com/features/discussions",
        "https://github.com/features/code-search",
        "https://github.com/features",
        "https://docs.github.com",
        "https://skills.github.com",
        "https://github.com/enterprise",
        "https://github.com/team",
        "https://github.com/enterprise/startups",
        "https://github.com/solutions/industry/nonprofits",
        "https://github.com/solutions/use-case/devsecops",
        "https://github.com/solutions/use-case/devops",
        "https://github.com/solutions/use-case/ci-cd",
        "https://github.com/solutions/use-case",
        "https://github.com/solutions/industry/healthcare",
        "https://github.com/solutions/industry/financial-services",
        "https://github.com/solutions/industry/manufacturing",
        "https://github.com/solutions/industry/government",
        "https://github.com/solutions/industry",
        "https://github.com/solutions",
        "https://github.com/resources/articles/ai",
        "https://github.com/resources/articles/devops",
        "https://github.com/resources/articles/security",
        "https://github.com/resources/articles/software-development",
        "https://github.com/resources/articles",
        "https://resources.github.com/learn/pathways",
        "https://resources.github.com",
        "https://github.com/customer-stories",
        "https://partner.github.com",
        "https://github.com/solutions/executive-insights",
        "https://github.com/sponsors",
        "https://github.com/readme",
        "https://github.com/topics",
        "https://github.com/trending",
        "https://github.com/collections",
        "https://github.com/enterprise/advanced-security",
        "https://github.com/features/copilot#enterprise",
        "https://github.com/premium-support",
        "https://github.com/pricing",
        "https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax",
        "https://github.com/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&source=header-repo&source_repo=langchain-ai%2Flangchain",
        "https://github.com/langchain-ai",
        "https://github.com/langchain-ai/langchain",
        "https://github.com/login?return_to=%2Flangchain-ai%2Flangchain",
        "https://github.com/langchain-ai/langchain/blob/master/LICENSE",
        "https://github.com/langchain-ai/langchain/stargazers",
        "https://github.com/langchain-ai/langchain/forks",
        "https://github.com/langchain-ai/langchain/branches",
        "https://github.com/langchain-ai/langchain/tags",
        "https://github.com/langchain-ai/langchain/activity",
        "https://github.com/langchain-ai/langchain/issues",
        "https://github.com/langchain-ai/langchain/pulls",
        "https://github.com/langchain-ai/langchain/discussions",
        "https://github.com/langchain-ai/langchain/actions",
        "https://github.com/langchain-ai/langchain/projects",
        "https://github.com/langchain-ai/langchain/security",
        "https://github.com/langchain-ai/langchain/pulse",
        "https://github.com/langchain-ai/langchain/commit/9eb10a9240eddbd544cb970e189c02e27e025522",
        "https://github.com/langchain-ai/langchain/pull/29241",
        "https://github.com/langchain-ai/langchain/commits/master/",
        "https://github.com/langchain-ai/langchain/tree/master/.devcontainer",
        "https://github.com/langchain-ai/langchain/commit/5caa3811770fe25e54e46b61e1b14d1a985a0a32",
        "https://github.com/langchain-ai/langchain/pull/24088",
        "https://github.com/langchain-ai/langchain/tree/master/.github",
        "https://github.com/langchain-ai/langchain/commit/a2ed796aa687f2b002c274d520c18099c92380d7",
        "https://github.com/langchain-ai/langchain/pull/29350",
        "https://github.com/langchain-ai/langchain/tree/master/cookbook",
        "https://github.com/langchain-ai/langchain/commit/4c0217681a81859da6b3547c46c0bb6af780307c",
        "https://github.com/langchain-ai/langchain/pull/29149",
        "https://github.com/langchain-ai/langchain/tree/master/docs",
        "https://github.com/langchain-ai/langchain/commit/de1fc4811da035f8ba765fab957ed0c63a9e80fd",
        "https://github.com/langchain-ai/langchain/pull/29114",
        "https://github.com/langchain-ai/langchain/tree/master/libs",
        "https://github.com/langchain-ai/langchain/tree/master/scripts",
        "https://github.com/langchain-ai/langchain/commit/a0c2281540885b068331921d45d2549f7df8b55f",
        "https://github.com/langchain-ai/langchain/pull/23721",
        "https://github.com/langchain-ai/langchain/blob/master/.gitattributes",
        "https://github.com/langchain-ai/langchain/commit/ccd916babe8b24ff8a2ef5d9c2a8a53487388f2a",
        "https://github.com/langchain-ai/langchain/pull/6189",
        "https://github.com/langchain-ai/langchain/blob/master/.gitignore",
        "https://github.com/langchain-ai/langchain/commit/6a60a2a4353501157947eb49471be0b8a84e615d",
        "https://github.com/langchain-ai/langchain/pull/25705",
        "https://github.com/langchain-ai/langchain/blob/master/.pre-commit-config.yaml",
        "https://github.com/langchain-ai/langchain/commit/1e88adaca7bb0dfe86f933cbe82639653384b05d",
        "https://github.com/langchain-ai/langchain/pull/26993",
        "https://github.com/langchain-ai/langchain/blob/master/.readthedocs.yaml",
        "https://github.com/langchain-ai/langchain/commit/dd68a8716ec9ce35b65ab575853e0ef689e5caa1",
        "https://github.com/langchain-ai/langchain/pull/17502",
        "https://github.com/langchain-ai/langchain/blob/master/CITATION.cff",
        "https://github.com/langchain-ai/langchain/commit/a363ab52923582dedc7809c6ac960201c4abe882",
        "https://github.com/langchain-ai/langchain/pull/11259",
        "https://github.com/langchain-ai/langchain/commit/5eca1bd93ff42435f5d2299dd620e82d2b0c4515",
        "https://github.com/langchain-ai/langchain/pull/13300",
        "https://github.com/langchain-ai/langchain/blob/master/MIGRATE.md",
        "https://github.com/langchain-ai/langchain/commit/beef4c4d622d7cb79bcc532e633bffcee206b91c",
        "https://github.com/langchain-ai/langchain/pull/28084",
        "https://github.com/langchain-ai/langchain/blob/master/Makefile",
        "https://github.com/langchain-ai/langchain/commit/e6a08355a3222803cbda7bfbc3b93a3d0d15b586",
        "https://github.com/langchain-ai/langchain/pull/28495",
        "https://github.com/langchain-ai/langchain/blob/master/README.md",
        "https://github.com/langchain-ai/langchain/commit/5656702b8dea5b008d8026b30274b23f23bdc041",
        "https://github.com/langchain-ai/langchain/pull/28770",
        "https://github.com/langchain-ai/langchain/blob/master/SECURITY.md",
        "https://github.com/langchain-ai/langchain/commit/12d74d5bef144bbdd4c76c08a6e9c286909eb8a7",
        "https://github.com/langchain-ai/langchain/pull/28515",
        "https://github.com/langchain-ai/langchain/blob/master/poetry.lock",
        "https://github.com/langchain-ai/langchain/commit/23b433f683d1dfd2474c4f5a570b7f01ce81c4da",
        "https://github.com/langchain-ai/langchain/pull/28722",
        "https://github.com/langchain-ai/langchain/blob/master/poetry.toml",
        "https://github.com/langchain-ai/langchain/commit/007c5a85d5264203ec0e0a6c44eb13b079bfb984",
        "https://github.com/langchain-ai/langchain/pull/23998",
        "https://github.com/langchain-ai/langchain/blob/master/pyproject.toml",
        "https://github.com/langchain-ai/langchain/commit/6c52378992f1b6b07cc9ac36dc45e881f430c85b",
        "https://github.com/langchain-ai/langchain/pull/29303",
        "https://github.com/langchain-ai/langchain/blob/master/yarn.lock",
        "https://github.com/langchain-ai/langchain/commit/55fd2e21584d6ef269ff3bdd2f2b7bd49889ee3c",
        "https://github.com/langchain-ai/langchain/pull/25506",
        "https://github.com/langchain-ai/langchain/",
        "https://github.com/langchain-ai/langchain/#️-langchain",
        "https://github.com/langchain-ai/langchain/releases",
        "https://github.com/langchain-ai/langchain/actions/workflows/check_diffs.yml",
        "https://github.com/langchain-ai/langchainjs",
        "https://github.com/langchain-ai/langchain/#quick-install",
        "https://github.com/langchain-ai/langchain/#-what-is-langchain",
        "https://github.com/langchain-ai/langchain/#open-source-libraries",
        "https://github.com/langchain-ai/langchain/#productionization",
        "https://github.com/langchain-ai/langchain/#deployment",
        "https://github.com/langchain-ai/langchain/blob/master/docs/static/svg/langchain_stack_112024.svg#gh-light-mode-only",
        "https://github.com/langchain-ai/langchain/blob/master/docs/static/svg/langchain_stack_112024_dark.svg#gh-dark-mode-only",
        "https://github.com/langchain-ai/langchain/#-what-can-you-build-with-langchain",
        "https://github.com/langchain-ai/chat-langchain",
        "https://github.com/langchain-ai/langchain-extract/",
        "https://github.com/langchain-ai/weblangchain",
        "https://github.com/langchain-ai/langchain/#-how-does-langchain-help",
        "https://github.com/langchain-ai/langchain/#components",
        "https://github.com/langchain-ai/langchain/#-documentation",
        "https://github.com/langchain-ai/langchain/#-ecosystem",
        "https://github.com/langchain-ai/langchain/#-contributing",
        "https://github.com/langchain-ai/langchain/#-contributors",
        "https://github.com/langchain-ai/langchain/graphs/contributors",
        "https://github.com/langchain-ai/langchain/#readme-ov-file",
        "https://github.com/langchain-ai/langchain/#MIT-1-ov-file",
        "https://github.com/langchain-ai/langchain/#coc-ov-file",
        "https://github.com/langchain-ai/langchain/#security-ov-file",
        "https://github.com/langchain-ai/langchain/custom-properties",
        "https://github.com/langchain-ai/langchain/watchers",
        "https://github.com/contact/report-content?content_url=https%3A%2F%2Fgithub.com%2Flangchain-ai%2Flangchain&report=langchain-ai+%28user%29",
        "https://github.com/langchain-ai/langchain/releases/tag/langchain-core%3D%3D0.3.31",
        "https://github.com/orgs/langchain-ai/packages?repo_name=langchain",
        "https://github.com/langchain-ai/langchain/network/dependents",
        "https://github.com/baskaryan",
        "https://github.com/hwchase17",
        "https://github.com/efriis",
        "https://github.com/eyurtsev",
        "https://github.com/ccurme",
        "https://github.com/nfcampos",
        "https://github.com/leo-gan",
        "https://github.com/hinthornw",
        "https://github.com/dev2049",
        "https://github.com/cbornet",
        "https://github.com/rlancemartin",
        "https://github.com/vowelparrot",
        "https://github.com/jacoblee93",
        "https://github.com/tomasonjo",
        "https://github.com/langchain-ai/langchain/search?l=jupyter-notebook",
        "https://github.com/langchain-ai/langchain/search?l=python",
        "https://github.com/langchain-ai/langchain/search?l=mdx",
        "https://github.com/langchain-ai/langchain/search?l=makefile",
        "https://github.com/langchain-ai/langchain/search?l=xslt",
        "https://github.com/langchain-ai/langchain/search?l=shell",
        "https://github.com",
        "https://docs.github.com/site-policy/github-terms/github-terms-of-service",
        "https://docs.github.com/site-policy/privacy-policies/github-privacy-statement",
        "https://github.com/security",
        "https://docs.github.com/",
        "https://support.github.com?tags=dotcom-footer",
        "https://github.blog",
        "https://python.langchain.com",
        "https://opensource.org/licenses/MIT",
        "https://pypistats.org/packages/langchain-core",
        "https://star-history.com/#langchain-ai/langchain",
        "https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/langchain-ai/langchain",
        "https://codespaces.new/langchain-ai/langchain",
        "https://twitter.com/langchainai",
        "https://smith.langchain.com",
        "https://www.langchain.com/contact-sales",
        "https://python.langchain.com/docs/concepts/",
        "https://python.langchain.com/docs/integrations/providers/",
        "https://langchain-ai.github.io/langgraph/",
        "https://docs.smith.langchain.com/",
        "https://langchain-ai.github.io/langgraph/cloud/",
        "https://langchain-ai.github.io/langgraph",
        "https://academy.langchain.com/courses/intro-to-langgraph",
        "https://python.langchain.com/docs/tutorials/rag/",
        "https://chat.langchain.com",
        "https://python.langchain.com/docs/tutorials/extraction/",
        "https://python.langchain.com/docs/tutorials/chatbot/",
        "https://weblangchain.vercel.app",
        "https://python.langchain.com/docs/tutorials/",
        "https://python.langchain.com/docs/concepts/messages/",
        "https://python.langchain.com/docs/concepts/tools/",
        "https://python.langchain.com/docs/tutorials/#orchestration",
        "https://python.langchain.com/docs/concepts/prompt_templates/",
        "https://python.langchain.com/docs/concepts/chat_models/",
        "https://python.langchain.com/docs/concepts/tool_calling/",
        "https://python.langchain.com/docs/concepts/structured_outputs/",
        "https://python.langchain.com/docs/concepts/document_loaders/",
        "https://python.langchain.com/docs/concepts/text_splitters/",
        "https://python.langchain.com/docs/concepts/retrievers/",
        "https://langchain-ai.github.io/langgraph/tutorials/",
        "https://langchain-ai.github.io/langgraph/how-tos/create-react-agent/",
        "https://python.langchain.com/docs/introduction/",
        "https://python.langchain.com/docs/how_to/",
        "https://python.langchain.com/api_reference/",
        "https://langchain-ai.github.io/langgraph/concepts/#langgraph-platform",
        "https://python.langchain.com/docs/contributing/",
        "https://www.githubstatus.com/"
    ]
}