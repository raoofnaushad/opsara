{
    "id": "da4d5f30034dae67e2c6330fdea1633e",
    "metadata": {
        "id": "da4d5f30034dae67e2c6330fdea1633e",
        "url": "https://github.com/langchain-ai/langgraph/",
        "title": "GitHub - langchain-ai/langgraph: Build resilient language agents as graphs.",
        "properties": {
            "description": "Build resilient language agents as graphs. Contribute to langchain-ai/langgraph development by creating an account on GitHub.",
            "keywords": null,
            "author": null,
            "og:image": "https://opengraph.githubassets.com/e811dda2af00a4c6fae500ab98615265af62f14b0923e26083bd8a289267d27d/langchain-ai/langgraph",
            "og:image:alt": "Build resilient language agents as graphs. Contribute to langchain-ai/langgraph development by creating an account on GitHub.",
            "og:image:width": "1200",
            "og:image:height": "600",
            "og:site_name": "GitHub",
            "og:type": "object",
            "og:title": "GitHub - langchain-ai/langgraph: Build resilient language agents as graphs.",
            "og:url": "https://github.com/langchain-ai/langgraph",
            "og:description": "Build resilient language agents as graphs. Contribute to langchain-ai/langgraph development by creating an account on GitHub.",
            "twitter:image": "https://opengraph.githubassets.com/e811dda2af00a4c6fae500ab98615265af62f14b0923e26083bd8a289267d27d/langchain-ai/langgraph",
            "twitter:site": "@github",
            "twitter:card": "summary_large_image",
            "twitter:title": "GitHub - langchain-ai/langgraph: Build resilient language agents as graphs.",
            "twitter:description": "Build resilient language agents as graphs. Contribute to langchain-ai/langgraph development by creating an account on GitHub."
        }
    },
    "parent_metadata": {
        "id": "352386ab53f57cbda711fe91d66c324a",
        "url": "https://www.notion.so/Frameworks-352386ab53f57cbda711fe91d66c324a",
        "title": "Frameworks",
        "properties": {
            "Type": "Leaf"
        }
    },
    "content": "[Skip to content](#start-of-content)\n\n## Navigation Menu\n\nToggle navigation\n\n[ ](/)\n\n[ Sign in ](/login?return_to=https%3A%2F%2Fgithub.com%2Flangchain-ai%2Flanggraph%2F)\n\n  * Product \n\n    * [ GitHub Copilot Write better code with AI  ](https://github.com/features/copilot)\n    * [ Security Find and fix vulnerabilities  ](https://github.com/features/security)\n    * [ Actions Automate any workflow  ](https://github.com/features/actions)\n    * [ Codespaces Instant dev environments  ](https://github.com/features/codespaces)\n    * [ Issues Plan and track work  ](https://github.com/features/issues)\n    * [ Code Review Manage code changes  ](https://github.com/features/code-review)\n    * [ Discussions Collaborate outside of code  ](https://github.com/features/discussions)\n    * [ Code Search Find more, search less  ](https://github.com/features/code-search)\n\nExplore\n    * [ All features ](https://github.com/features)\n    * [ Documentation ](https://docs.github.com)\n    * [ GitHub Skills ](https://skills.github.com)\n    * [ Blog ](https://github.blog)\n\n  * Solutions \n\nBy company size\n    * [ Enterprises ](https://github.com/enterprise)\n    * [ Small and medium teams ](https://github.com/team)\n    * [ Startups ](https://github.com/enterprise/startups)\n    * [ Nonprofits ](/solutions/industry/nonprofits)\n\nBy use case\n    * [ DevSecOps ](/solutions/use-case/devsecops)\n    * [ DevOps ](/solutions/use-case/devops)\n    * [ CI/CD ](/solutions/use-case/ci-cd)\n    * [ View all use cases ](/solutions/use-case)\n\nBy industry\n    * [ Healthcare ](/solutions/industry/healthcare)\n    * [ Financial services ](/solutions/industry/financial-services)\n    * [ Manufacturing ](/solutions/industry/manufacturing)\n    * [ Government ](/solutions/industry/government)\n    * [ View all industries ](/solutions/industry)\n\n[ View all solutions ](/solutions)\n\n  * Resources \n\nTopics\n    * [ AI ](/resources/articles/ai)\n    * [ DevOps ](/resources/articles/devops)\n    * [ Security ](/resources/articles/security)\n    * [ Software Development ](/resources/articles/software-development)\n    * [ View all ](/resources/articles)\n\nExplore\n    * [ Learning Pathways ](https://resources.github.com/learn/pathways)\n    * [ White papers, Ebooks, Webinars ](https://resources.github.com)\n    * [ Customer Stories ](https://github.com/customer-stories)\n    * [ Partners ](https://partner.github.com)\n    * [ Executive Insights ](https://github.com/solutions/executive-insights)\n\n  * Open Source \n\n    * [ GitHub Sponsors Fund open source developers  ](/sponsors)\n\n    * [ The ReadME Project GitHub community articles  ](https://github.com/readme)\n\nRepositories\n    * [ Topics ](https://github.com/topics)\n    * [ Trending ](https://github.com/trending)\n    * [ Collections ](https://github.com/collections)\n\n  * Enterprise \n\n    * [ Enterprise platform AI-powered developer platform  ](/enterprise)\n\nAvailable add-ons\n    * [ Advanced Security Enterprise-grade security features  ](https://github.com/enterprise/advanced-security)\n    * [ GitHub Copilot Enterprise-grade AI features  ](/features/copilot#enterprise)\n    * [ Premium Support Enterprise-grade 24/7 support  ](/premium-support)\n\n  * [Pricing](https://github.com/pricing)\n\n\n\nSearch or jump to...\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch \n\nClear\n\n[Search syntax tips](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax)\n\n#  Provide feedback \n\nWe read every piece of feedback, and take your input very seriously.\n\nInclude my email address so I can be contacted\n\nCancel  Submit feedback \n\n#  Saved searches \n\n## Use saved searches to filter your results more quickly\n\nName\n\nQuery\n\nTo see all available qualifiers, see our [documentation](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax). \n\nCancel  Create saved search \n\n[ Sign in ](/login?return_to=https%3A%2F%2Fgithub.com%2Flangchain-ai%2Flanggraph%2F)\n\n[ Sign up ](/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&source=header-repo&source_repo=langchain-ai%2Flanggraph) Reseting focus\n\nYou signed in with another tab or window. [Reload]() to refresh your session. You signed out in another tab or window. [Reload]() to refresh your session. You switched accounts on another tab or window. [Reload]() to refresh your session. Dismiss alert\n\n{{ message }}\n\n[ langchain-ai ](/langchain-ai) / **[langgraph](/langchain-ai/langgraph) ** Public\n\n  * [ Notifications ](/login?return_to=%2Flangchain-ai%2Flanggraph) You must be signed in to change notification settings\n  * [ Fork 1.3k ](/login?return_to=%2Flangchain-ai%2Flanggraph)\n  * [ Star  8.3k ](/login?return_to=%2Flangchain-ai%2Flanggraph)\n\n\n\n\nBuild resilient language agents as graphs. \n\n[langchain-ai.github.io/langgraph/](https://langchain-ai.github.io/langgraph/ \"https://langchain-ai.github.io/langgraph/\")\n\n### License\n\n[ MIT license ](/langchain-ai/langgraph/blob/main/LICENSE)\n\n[ 8.3k stars ](/langchain-ai/langgraph/stargazers) [ 1.3k forks ](/langchain-ai/langgraph/forks) [ Branches ](/langchain-ai/langgraph/branches) [ Tags ](/langchain-ai/langgraph/tags) [ Activity ](/langchain-ai/langgraph/activity)\n\n[ Star  ](/login?return_to=%2Flangchain-ai%2Flanggraph)\n\n[ Notifications ](/login?return_to=%2Flangchain-ai%2Flanggraph) You must be signed in to change notification settings\n\n  * [ Code ](/langchain-ai/langgraph)\n  * [ Issues 58 ](/langchain-ai/langgraph/issues)\n  * [ Pull requests 36 ](/langchain-ai/langgraph/pulls)\n  * [ Discussions ](/langchain-ai/langgraph/discussions)\n  * [ Actions ](/langchain-ai/langgraph/actions)\n  * [ Projects 1 ](/langchain-ai/langgraph/projects)\n  * [ Security ](/langchain-ai/langgraph/security)\n  * [ Insights ](/langchain-ai/langgraph/pulse)\n\n\n\nAdditional navigation options\n\n  * [ Code  ](/langchain-ai/langgraph)\n  * [ Issues  ](/langchain-ai/langgraph/issues)\n  * [ Pull requests  ](/langchain-ai/langgraph/pulls)\n  * [ Discussions  ](/langchain-ai/langgraph/discussions)\n  * [ Actions  ](/langchain-ai/langgraph/actions)\n  * [ Projects  ](/langchain-ai/langgraph/projects)\n  * [ Security  ](/langchain-ai/langgraph/security)\n  * [ Insights  ](/langchain-ai/langgraph/pulse)\n\n\n\n# langchain-ai/langgraph\n\nmain\n\n[**102** Branches](/langchain-ai/langgraph/branches)[**208** Tags](/langchain-ai/langgraph/tags)\n\n[](/langchain-ai/langgraph/branches)[](/langchain-ai/langgraph/tags)\n\nGo to file\n\nCode\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\n[![vbarda](https://avatars.githubusercontent.com/u/19161700?v=4&size=40)](/vbarda)[vbarda](/langchain-ai/langgraph/commits?author=vbarda)[docs: add missing api key to cross-thread persistence howto (](/langchain-ai/langgraph/commit/44840aa23f05edb9758eb63d5cbbef89438b26f7)[#3141](https://github.com/langchain-ai/langgraph/pull/3141)[)](/langchain-ai/langgraph/commit/44840aa23f05edb9758eb63d5cbbef89438b26f7)Jan 22, 2025[44840aa](/langchain-ai/langgraph/commit/44840aa23f05edb9758eb63d5cbbef89438b26f7) Â· Jan 22, 2025\n\n## History\n\n[3,921 Commits](/langchain-ai/langgraph/commits/main/)[](/langchain-ai/langgraph/commits/main/)  \n[.github](/langchain-ai/langgraph/tree/main/.github \".github\")| [.github](/langchain-ai/langgraph/tree/main/.github \".github\")| [ci: pin codespell (](/langchain-ai/langgraph/commit/51242e2a325f809ee3ea0f938158803911e32b57 \"ci: pin codespell \\(#3140\\)\")[#3140](https://github.com/langchain-ai/langgraph/pull/3140)[)](/langchain-ai/langgraph/commit/51242e2a325f809ee3ea0f938158803911e32b57 \"ci: pin codespell \\(#3140\\)\")| Jan 22, 2025  \n[docs](/langchain-ai/langgraph/tree/main/docs \"docs\")| [docs](/langchain-ai/langgraph/tree/main/docs \"docs\")| [docs: add missing api key to cross-thread persistence howto (](/langchain-ai/langgraph/commit/44840aa23f05edb9758eb63d5cbbef89438b26f7 \"docs: add missing api key to cross-thread persistence howto \\(#3141\\)\")[#3141](https://github.com/langchain-ai/langgraph/pull/3141)[)](/langchain-ai/langgraph/commit/44840aa23f05edb9758eb63d5cbbef89438b26f7 \"docs: add missing api key to cross-thread persistence howto \\(#3141\\)\")| Jan 22, 2025  \n[examples](/langchain-ai/langgraph/tree/main/examples \"examples\")| [examples](/langchain-ai/langgraph/tree/main/examples \"examples\")| [docs: remove example with missing link (](/langchain-ai/langgraph/commit/d1c29fc8be4dc12abe69b5910842972e6ab1d59c \"docs: remove example with missing link \\(#2099\\)\")[#2099](https://github.com/langchain-ai/langgraph/pull/2099)[)](/langchain-ai/langgraph/commit/d1c29fc8be4dc12abe69b5910842972e6ab1d59c \"docs: remove example with missing link \\(#2099\\)\")| Oct 14, 2024  \n[libs](/langchain-ai/langgraph/tree/main/libs \"libs\")| [libs](/langchain-ai/langgraph/tree/main/libs \"libs\")| [Disable recursing on runnables for task/entrypoint decorated funcs](/langchain-ai/langgraph/commit/12ae29719493e7e0ed63f6bfa79870a725f30fb3 \"Disable recursing on runnables for task/entrypoint decorated funcs\")| Jan 22, 2025  \n[.gitignore](/langchain-ai/langgraph/blob/main/.gitignore \".gitignore\")| [.gitignore](/langchain-ai/langgraph/blob/main/.gitignore \".gitignore\")| [Add benchmark/profile commands](/langchain-ai/langgraph/commit/f577529356f6a19dfcac09e7c1851d3c7d9b6fd0 \"Add benchmark/profile commands\")| Sep 11, 2024  \n[.markdown-link-check.config.json](/langchain-ai/langgraph/blob/main/.markdown-link-check.config.json \".markdown-link-check.config.json\")| [.markdown-link-check.config.json](/langchain-ai/langgraph/blob/main/.markdown-link-check.config.json \".markdown-link-check.config.json\")| [Use create_react_agent (](/langchain-ai/langgraph/commit/2c32a38c4206ae029df1ba308617846ad52ba0bb \"Use create_react_agent \\(#441\\)\")[#441](https://github.com/langchain-ai/langgraph/pull/441)[)](/langchain-ai/langgraph/commit/2c32a38c4206ae029df1ba308617846ad52ba0bb \"Use create_react_agent \\(#441\\)\")| May 14, 2024  \n[CONTRIBUTING.md](/langchain-ai/langgraph/blob/main/CONTRIBUTING.md \"CONTRIBUTING.md\")| [CONTRIBUTING.md](/langchain-ai/langgraph/blob/main/CONTRIBUTING.md \"CONTRIBUTING.md\")| [fix(docs): Small nits & typo fixes](/langchain-ai/langgraph/commit/9d755f54e4609121720c79de51520e069a081f67 \"fix\\(docs\\): Small nits & typo fixes\")| Dec 3, 2024  \n[LICENSE](/langchain-ai/langgraph/blob/main/LICENSE \"LICENSE\")| [LICENSE](/langchain-ai/langgraph/blob/main/LICENSE \"LICENSE\")| [libs: add cli, sdk-py, sdk-js and move core langgraph](/langchain-ai/langgraph/commit/1a06d500d4282cfdb2ae9d7748bb570e8162acdf \"libs: add cli, sdk-py, sdk-js and move core langgraph\")| Jun 18, 2024  \n[Makefile](/langchain-ai/langgraph/blob/main/Makefile \"Makefile\")| [Makefile](/langchain-ai/langgraph/blob/main/Makefile \"Makefile\")| [Update wording](/langchain-ai/langgraph/commit/b6c3a0d0fddd9e71934619ec2c2f322629b72f26 \"Update wording\")| Dec 17, 2024  \n[README.md](/langchain-ai/langgraph/blob/main/README.md \"README.md\")| [README.md](/langchain-ai/langgraph/blob/main/README.md \"README.md\")| [add hyperlink](/langchain-ai/langgraph/commit/ee61d06f8dc8404ea6de960c2e19e9908924c62f \"add hyperlink\")| Jan 21, 2025  \n[poetry.lock](/langchain-ai/langgraph/blob/main/poetry.lock \"poetry.lock\")| [poetry.lock](/langchain-ai/langgraph/blob/main/poetry.lock \"poetry.lock\")| [ci: fix docs runner (](/langchain-ai/langgraph/commit/4c0f8553292cbcc245f0daaa5b1825e829d5e6c9 \"ci: fix docs runner \\(#3010\\)\")[#3010](https://github.com/langchain-ai/langgraph/pull/3010)[)](/langchain-ai/langgraph/commit/4c0f8553292cbcc245f0daaa5b1825e829d5e6c9 \"ci: fix docs runner \\(#3010\\)\")| Jan 14, 2025  \n[pyproject.toml](/langchain-ai/langgraph/blob/main/pyproject.toml \"pyproject.toml\")| [pyproject.toml](/langchain-ai/langgraph/blob/main/pyproject.toml \"pyproject.toml\")| [ci: fix docs runner (](/langchain-ai/langgraph/commit/4c0f8553292cbcc245f0daaa5b1825e829d5e6c9 \"ci: fix docs runner \\(#3010\\)\")[#3010](https://github.com/langchain-ai/langgraph/pull/3010)[)](/langchain-ai/langgraph/commit/4c0f8553292cbcc245f0daaa5b1825e829d5e6c9 \"ci: fix docs runner \\(#3010\\)\")| Jan 14, 2025  \n[security.md](/langchain-ai/langgraph/blob/main/security.md \"security.md\")| [security.md](/langchain-ai/langgraph/blob/main/security.md \"security.md\")| [x (](/langchain-ai/langgraph/commit/76b6394e7f7b3af10bc054e09715a6da1aa9968a \"x \\(#210\\)\")[#210](https://github.com/langchain-ai/langgraph/pull/210)[)](/langchain-ai/langgraph/commit/76b6394e7f7b3af10bc054e09715a6da1aa9968a \"x \\(#210\\)\")| Mar 15, 2024  \nView all files  \n  \n## Repository files navigation\n\n  * [README](#)\n  * [MIT license](#)\n  * [Security](#)\n\n\n\n# ð¦ð¸ï¸LangGraph\n\n[](#ï¸langgraph)\n\n[![Version](https://camo.githubusercontent.com/291f325393c3f62d28da44bb7c1d9f659e260a36e8b8f1b5b8d79b1aec5ee2f9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6c616e676772617068)](https://camo.githubusercontent.com/291f325393c3f62d28da44bb7c1d9f659e260a36e8b8f1b5b8d79b1aec5ee2f9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6c616e676772617068) [![Downloads](https://camo.githubusercontent.com/2889feb475ba0094698bdf82a0908a837c1da48ce3ff83a0c9133811b68be8d6/68747470733a2f2f7374617469632e706570792e746563682f62616467652f6c616e6767726170682f6d6f6e7468)](https://pepy.tech/project/langgraph) [![Open Issues](https://camo.githubusercontent.com/5c13e9a7e2e21ad5dcf19f3be58e4b34485296e00539a1a93aec1d0896b2bd0f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d7261772f6c616e67636861696e2d61692f6c616e676772617068)](https://github.com/langchain-ai/langgraph/issues) [![Docs](https://camo.githubusercontent.com/1a5daa2002aae52e28b869f1907ff99534f4cd34dc7753ddebf2caa26ffb7820/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c7565)](https://langchain-ai.github.io/langgraph/)\n\nâ¡ Building language agents as graphs â¡\n\nNote\n\nLooking for the JS version? See the [JS repo](https://github.com/langchain-ai/langgraphjs) and the [JS docs](https://langchain-ai.github.io/langgraphjs/).\n\n## Overview\n\n[](#overview)\n\n[LangGraph](https://langchain-ai.github.io/langgraph/) is a library for building stateful, multi-actor applications with LLMs, used to create agent and multi-agent workflows. Check out an introductory tutorial [here](https://langchain-ai.github.io/langgraph/tutorials/introduction/).\n\nLangGraph is inspired by [Pregel](https://research.google/pubs/pub37252/) and [Apache Beam](https://beam.apache.org/). The public interface draws inspiration from [NetworkX](https://networkx.org/documentation/latest/). LangGraph is built by LangChain Inc, the creators of LangChain, but can be used without LangChain.\n\n### Why use LangGraph?\n\n[](#why-use-langgraph)\n\nLangGraph provides fine-grained control over both the flow and state of your agent applications. It implements a central [persistence layer](https://langchain-ai.github.io/langgraph/concepts/persistence/), enabling features that are common to most agent architectures:\n\n  * **Memory** : LangGraph persists arbitrary aspects of your application's state, supporting memory of conversations and other updates within and across user interactions;\n  * **Human-in-the-loop** : Because state is checkpointed, execution can be interrupted and resumed, allowing for decisions, validation, and corrections at key stages via human input.\n\n\n\nStandardizing these components allows individuals and teams to focus on the behavior of their agent, instead of its supporting infrastructure.\n\nThrough [LangGraph Platform](#langgraph-platform), LangGraph also provides tooling for the development, deployment, debugging, and monitoring of your applications.\n\nLangGraph integrates seamlessly with [LangChain](https://python.langchain.com/docs/introduction/) and [LangSmith](https://docs.smith.langchain.com/) (but does not require them).\n\nTo learn more about LangGraph, check out our first LangChain Academy course, _Introduction to LangGraph_ , available for free [here](https://academy.langchain.com/courses/intro-to-langgraph).\n\n### LangGraph Platform\n\n[](#langgraph-platform)\n\n[LangGraph Platform](https://langchain-ai.github.io/langgraph/concepts/langgraph_platform) is infrastructure for deploying LangGraph agents. It is a commercial solution for deploying agentic applications to production, built on the open-source LangGraph framework. The LangGraph Platform consists of several components that work together to support the development, deployment, debugging, and monitoring of LangGraph applications: [LangGraph Server](https://langchain-ai.github.io/langgraph/concepts/langgraph_server) (APIs), [LangGraph SDKs](https://langchain-ai.github.io/langgraph/concepts/sdk) (clients for the APIs), [LangGraph CLI](https://langchain-ai.github.io/langgraph/concepts/langgraph_cli) (command line tool for building the server), and [LangGraph Studio](https://langchain-ai.github.io/langgraph/concepts/langgraph_studio) (UI/debugger).\n\nSee deployment options [here](https://langchain-ai.github.io/langgraph/concepts/deployment_options/) (includes a free tier).\n\nHere are some common issues that arise in complex deployments, which LangGraph Platform addresses:\n\n  * **Streaming support** : LangGraph Server provides [multiple streaming modes](https://langchain-ai.github.io/langgraph/concepts/streaming) optimized for various application needs\n  * **Background runs** : Runs agents asynchronously in the background\n  * **Support for long running agents** : Infrastructure that can handle long running processes\n  * **[Double texting](https://langchain-ai.github.io/langgraph/concepts/double_texting)** : Handle the case where you get two messages from the user before the agent can respond\n  * **Handle burstiness** : Task queue for ensuring requests are handled consistently without loss, even under heavy loads\n\n\n\n## Installation\n\n[](#installation)\n\n```\npip install -U langgraph\n```\n\n## Example\n\n[](#example)\n\nLet's build a tool-calling [ReAct-style](https://langchain-ai.github.io/langgraph/concepts/agentic_concepts/#react-implementation) agent that uses a search tool!\n\n```\npip install langchain-anthropic\n```\n\n```\nexport ANTHROPIC_API_KEY=sk-...\n```\n\nOptionally, we can set up [LangSmith](https://docs.smith.langchain.com/) for best-in-class observability.\n\n```\nexport LANGSMITH_TRACING=true export LANGSMITH_API_KEY=lsv2_sk_...\n```\n\nThe simplest way to create a tool-calling agent in LangGraph is to use `create_react_agent`:\n\nHigh-level implementation\n\n```\nfrom langgraph.prebuilt import create_react_agent from langgraph.checkpoint.memory import MemorySaver from langchain_anthropic import ChatAnthropic from langchain_core.tools import tool # Define the tools for the agent to use @tool def search(query: str): \"\"\"Call to surf the web.\"\"\" # This is a placeholder, but don't tell the LLM that... if \"sf\" in query.lower() or \"san francisco\" in query.lower(): return \"It's 60 degrees and foggy.\" return \"It's 90 degrees and sunny.\" tools = [search] model = ChatAnthropic(model=\"claude-3-5-sonnet-latest\", temperature=0) # Initialize memory to persist state between graph runs checkpointer = MemorySaver() app = create_react_agent(model, tools, checkpointer=checkpointer) # Use the agent final_state = app.invoke( {\"messages\": [{\"role\": \"user\", \"content\": \"what is the weather in sf\"}]}, config={\"configurable\": {\"thread_id\": 42}} ) final_state[\"messages\"][-1].content\n```\n\n```\n`\"Based on the search results, I can tell you that the current weather in San Francisco is:\\n\\nTemperature: 60 degrees Fahrenheit\\nConditions: Foggy\\n\\nSan Francisco is known for its microclimates and frequent fog, especially during the summer months. The temperature of 60Â°F (about 15.5Â°C) is quite typical for the city, which tends to have mild temperatures year-round. The fog, often referred to as \"Karl the Fog\" by locals, is a characteristic feature of San Francisco\\'s weather, particularly in the mornings and evenings.\\n\\nIs there anything else you\\'d like to know about the weather in San Francisco or any other location?\" `\n```\n\nNow when we pass the same `\"thread_id\"`, the conversation context is retained via the saved state (i.e. stored list of messages)\n\n```\nfinal_state = app.invoke( {\"messages\": [{\"role\": \"user\", \"content\": \"what about ny\"}]}, config={\"configurable\": {\"thread_id\": 42}} ) final_state[\"messages\"][-1].content\n```\n\n```\n`\"Based on the search results, I can tell you that the current weather in New York City is:\\n\\nTemperature: 90 degrees Fahrenheit (approximately 32.2 degrees Celsius)\\nConditions: Sunny\\n\\nThis weather is quite different from what we just saw in San Francisco. New York is experiencing much warmer temperatures right now. Here are a few points to note:\\n\\n1. The temperature of 90Â°F is quite hot, typical of summer weather in New York City.\\n2. The sunny conditions suggest clear skies, which is great for outdoor activities but also means it might feel even hotter due to direct sunlight.\\n3. This kind of weather in New York often comes with high humidity, which can make it feel even warmer than the actual temperature suggests.\\n\\nIt's interesting to see the stark contrast between San Francisco's mild, foggy weather and New York's hot, sunny conditions. This difference illustrates how varied weather can be across different parts of the United States, even on the same day.\\n\\nIs there anything else you'd like to know about the weather in New York or any other location?\" `\n```\n\nTip\n\nLangGraph is a **low-level** framework that allows you to implement any custom agent architectures. Click on the low-level implementation below to see how to implement a tool-calling agent from scratch.\n\nLow-level implementation\n\n```\nfrom typing import Literal from langchain_anthropic import ChatAnthropic from langchain_core.tools import tool from langgraph.checkpoint.memory import MemorySaver from langgraph.graph import END, START, StateGraph, MessagesState from langgraph.prebuilt import ToolNode # Define the tools for the agent to use @tool def search(query: str): \"\"\"Call to surf the web.\"\"\" # This is a placeholder, but don't tell the LLM that... if \"sf\" in query.lower() or \"san francisco\" in query.lower(): return \"It's 60 degrees and foggy.\" return \"It's 90 degrees and sunny.\" tools = [search] tool_node = ToolNode(tools) model = ChatAnthropic(model=\"claude-3-5-sonnet-latest\", temperature=0).bind_tools(tools) # Define the function that determines whether to continue or not def should_continue(state: MessagesState) -> Literal[\"tools\", END]: messages = state['messages'] last_message = messages[-1] # If the LLM makes a tool call, then we route to the \"tools\" node if last_message.tool_calls: return \"tools\" # Otherwise, we stop (reply to the user) return END # Define the function that calls the model def call_model(state: MessagesState): messages = state['messages'] response = model.invoke(messages) # We return a list, because this will get added to the existing list return {\"messages\": [response]} # Define a new graph workflow = StateGraph(MessagesState) # Define the two nodes we will cycle between workflow.add_node(\"agent\", call_model) workflow.add_node(\"tools\", tool_node) # Set the entrypoint as `agent` # This means that this node is the first one called workflow.add_edge(START, \"agent\") # We now add a conditional edge workflow.add_conditional_edges( # First, we define the start node. We use `agent`. # This means these are the edges taken after the `agent` node is called. \"agent\", # Next, we pass in the function that will determine which node is called next. should_continue, ) # We now add a normal edge from `tools` to `agent`. # This means that after `tools` is called, `agent` node is called next. workflow.add_edge(\"tools\", 'agent') # Initialize memory to persist state between graph runs checkpointer = MemorySaver() # Finally, we compile it! # This compiles it into a LangChain Runnable, # meaning you can use it as you would any other runnable. # Note that we're (optionally) passing the memory when compiling the graph app = workflow.compile(checkpointer=checkpointer) # Use the agent final_state = app.invoke( {\"messages\": [{\"role\": \"user\", \"content\": \"what is the weather in sf\"}]}, config={\"configurable\": {\"thread_id\": 42}} ) final_state[\"messages\"][-1].content\n```\n\n**Step-by-step Breakdown** :\n\nInitialize the model and tools.\n\n  * We use `ChatAnthropic` as our LLM. **NOTE:** we need to make sure the model knows that it has these tools available to call. We can do this by converting the LangChain tools into the format for OpenAI tool calling using the `.bind_tools()` method. \n  * We define the tools we want to use - a search tool in our case. It is really easy to create your own tools - see documentation here on how to do that [here](https://python.langchain.com/docs/modules/agents/tools/custom_tools). \n\nInitialize graph with state.\n\n  * We initialize graph (`StateGraph`) by passing state schema (in our case `MessagesState`)\n  * `MessagesState` is a prebuilt state schema that has one attribute -- a list of LangChain `Message` objects, as well as logic for merging the updates from each node into the state.\n\nDefine graph nodes.\n\nThere are two main nodes we need:\n\n  * The `agent` node: responsible for deciding what (if any) actions to take.\n  * The `tools` node that invokes tools: if the agent decides to take an action, this node will then execute that action.\n\nDefine entry point and graph edges.\n\nFirst, we need to set the entry point for graph execution - `agent` node.\n\nThen we define one normal and one conditional edge. Conditional edge means that the destination depends on the contents of the graph's state (`MessagesState`). In our case, the destination is not known until the agent (LLM) decides.\n\n  * Conditional edge: after the agent is called, we should either: \n    * a. Run tools if the agent said to take an action, OR\n    * b. Finish (respond to the user) if the agent did not ask to run tools\n  * Normal edge: after the tools are invoked, the graph should always return to the agent to decide what to do next\n\nCompile the graph.\n\n  * When we compile the graph, we turn it into a LangChain [Runnable](https://python.langchain.com/v0.2/docs/concepts/#runnable-interface), which automatically enables calling `.invoke()`, `.stream()` and `.batch()` with your inputs \n  * We can also optionally pass checkpointer object for persisting state between graph runs, and enabling memory, human-in-the-loop workflows, time travel and more. In our case we use `MemorySaver` - a simple in-memory checkpointer \n\nExecute the graph.\n\n  1. LangGraph adds the input message to the internal state, then passes the state to the entrypoint node, `\"agent\"`.\n  2. The `\"agent\"` node executes, invoking the chat model.\n  3. The chat model returns an `AIMessage`. LangGraph adds this to the state.\n  4. Graph cycles the following steps until there are no more `tool_calls` on `AIMessage`: \n     * If `AIMessage` has `tool_calls`, `\"tools\"` node executes\n     * The `\"agent\"` node executes again and returns `AIMessage`\n  5. Execution progresses to the special `END` value and outputs the final state. And as a result, we get a list of all our chat messages as output.\n\n\n\n## Documentation\n\n[](#documentation)\n\n  * [Tutorials](https://langchain-ai.github.io/langgraph/tutorials/): Learn to build with LangGraph through guided examples.\n  * [How-to Guides](https://langchain-ai.github.io/langgraph/how-tos/): Accomplish specific things within LangGraph, from streaming, to adding memory & persistence, to common design patterns (branching, subgraphs, etc.), these are the place to go if you want to copy and run a specific code snippet.\n  * [Conceptual Guides](https://langchain-ai.github.io/langgraph/concepts/high_level/): In-depth explanations of the key concepts and principles behind LangGraph, such as nodes, edges, state and more.\n  * [API Reference](https://langchain-ai.github.io/langgraph/reference/graphs/): Review important classes and methods, simple examples of how to use the graph and checkpointing APIs, higher-level prebuilt components and more.\n  * [LangGraph Platform](https://langchain-ai.github.io/langgraph/concepts/#langgraph-platform): LangGraph Platform is a commercial solution for deploying agentic applications in production, built on the open-source LangGraph framework.\n\n\n\n## Contributing\n\n[](#contributing)\n\nFor more information on how to contribute, see [here](https://github.com/langchain-ai/langgraph/blob/main/CONTRIBUTING.md).\n\n## About\n\nBuild resilient language agents as graphs. \n\n[langchain-ai.github.io/langgraph/](https://langchain-ai.github.io/langgraph/ \"https://langchain-ai.github.io/langgraph/\")\n\n### Resources\n\n[ Readme ](#readme-ov-file)\n\n### License\n\n[ MIT license ](#MIT-1-ov-file)\n\n### Security policy\n\n[ Security policy ](#security-ov-file)\n\n[ Activity](/langchain-ai/langgraph/activity)\n\n[ Custom properties](/langchain-ai/langgraph/custom-properties)\n\n### Stars\n\n[ **8.3k** stars](/langchain-ai/langgraph/stargazers)\n\n### Watchers\n\n[ **68** watching](/langchain-ai/langgraph/watchers)\n\n### Forks\n\n[ **1.3k** forks](/langchain-ai/langgraph/forks)\n\n[ Report repository ](/contact/report-content?content_url=https%3A%2F%2Fgithub.com%2Flangchain-ai%2Flanggraph&report=langchain-ai+%28user%29)\n\n##  [Releases 200](/langchain-ai/langgraph/releases)\n\n[ 0.2.66 Latest  Jan 21, 2025 ](/langchain-ai/langgraph/releases/tag/0.2.66)\n\n[+ 199 releases](/langchain-ai/langgraph/releases)\n\n##  [Packages 0](/orgs/langchain-ai/packages?repo_name=langgraph)\n\nNo packages published \n\n##  [Used by 9.9k](/langchain-ai/langgraph/network/dependents)\n\n[\n\n  * ![@Ash2809](https://avatars.githubusercontent.com/u/128780437?s=64&v=4)\n  * ![@couchbaselabs](https://avatars.githubusercontent.com/u/636956?s=64&v=4)\n  * ![@LangGraph-GUI](https://avatars.githubusercontent.com/u/173017689?s=64&v=4)\n  * ![@plon-Susk7](https://avatars.githubusercontent.com/u/89684873?s=64&v=4)\n  * ![@TATA-IQ](https://avatars.githubusercontent.com/u/133328746?s=64&v=4)\n  * ![@SBDI](https://avatars.githubusercontent.com/u/56833115?s=64&v=4)\n  * ![@tanzeel0](https://avatars.githubusercontent.com/u/93648765?s=64&v=4)\n  * ![@vijayakanth06](https://avatars.githubusercontent.com/u/172112022?s=64&v=4)\n\n+ 9,936  ](/langchain-ai/langgraph/network/dependents)\n\n##  [Contributors 122](/langchain-ai/langgraph/graphs/contributors)\n\n  * [ ![@nfcampos](https://avatars.githubusercontent.com/u/56902?s=64&v=4) ](https://github.com/nfcampos)\n  * [ ![@vbarda](https://avatars.githubusercontent.com/u/19161700?s=64&v=4) ](https://github.com/vbarda)\n  * [ ![@hinthornw](https://avatars.githubusercontent.com/u/13333726?s=64&v=4) ](https://github.com/hinthornw)\n  * [ ![@eyurtsev](https://avatars.githubusercontent.com/u/3205522?s=64&v=4) ](https://github.com/eyurtsev)\n  * [ ![@dqbd](https://avatars.githubusercontent.com/u/1443449?s=64&v=4) ](https://github.com/dqbd)\n  * [ ![@hwchase17](https://avatars.githubusercontent.com/u/11986836?s=64&v=4) ](https://github.com/hwchase17)\n  * [ ![@isahers1](https://avatars.githubusercontent.com/u/78627776?s=64&v=4) ](https://github.com/isahers1)\n  * [ ![@andrewnguonly](https://avatars.githubusercontent.com/u/7654246?s=64&v=4) ](https://github.com/andrewnguonly)\n  * [ ![@rlancemartin](https://avatars.githubusercontent.com/u/122662504?s=64&v=4) ](https://github.com/rlancemartin)\n  * [ ![@ccurme](https://avatars.githubusercontent.com/u/26529506?s=64&v=4) ](https://github.com/ccurme)\n  * [ ![@bracesproul](https://avatars.githubusercontent.com/u/46789226?s=64&v=4) ](https://github.com/bracesproul)\n  * [ ![@jacoblee93](https://avatars.githubusercontent.com/u/6952323?s=64&v=4) ](https://github.com/jacoblee93)\n  * [ ![@baskaryan](https://avatars.githubusercontent.com/u/22008038?s=64&v=4) ](https://github.com/baskaryan)\n  * [ ![@dependabot\\[bot\\]](https://avatars.githubusercontent.com/in/29110?s=64&v=4) ](https://github.com/apps/dependabot)\n\n\n\n[+ 108 contributors](/langchain-ai/langgraph/graphs/contributors)\n\n## Languages\n\n  * [ Python 96.7% ](/langchain-ai/langgraph/search?l=python)\n  * [ TypeScript 2.7% ](/langchain-ai/langgraph/search?l=typescript)\n  * Other 0.6%\n\n\n\n## Footer\n\n[ ](https://github.com \"GitHub\") Â© 2025 GitHub, Inc. \n\n### Footer navigation\n\n  * [Terms](https://docs.github.com/site-policy/github-terms/github-terms-of-service)\n  * [Privacy](https://docs.github.com/site-policy/privacy-policies/github-privacy-statement)\n  * [Security](https://github.com/security)\n  * [Status](https://www.githubstatus.com/)\n  * [Docs](https://docs.github.com/)\n  * [Contact](https://support.github.com?tags=dotcom-footer)\n  * Manage cookies \n  * Do not share my personal information \n\n\n\nYou canât perform that action at this time. \n",
    "content_quality_score": 0.5,
    "summary": null,
    "child_urls": [
        "https://github.com/langchain-ai/langgraph/#start-of-content",
        "https://github.com/",
        "https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Flangchain-ai%2Flanggraph%2F",
        "https://github.com/features/copilot",
        "https://github.com/features/security",
        "https://github.com/features/actions",
        "https://github.com/features/codespaces",
        "https://github.com/features/issues",
        "https://github.com/features/code-review",
        "https://github.com/features/discussions",
        "https://github.com/features/code-search",
        "https://github.com/features",
        "https://docs.github.com",
        "https://skills.github.com",
        "https://github.com/enterprise",
        "https://github.com/team",
        "https://github.com/enterprise/startups",
        "https://github.com/solutions/industry/nonprofits",
        "https://github.com/solutions/use-case/devsecops",
        "https://github.com/solutions/use-case/devops",
        "https://github.com/solutions/use-case/ci-cd",
        "https://github.com/solutions/use-case",
        "https://github.com/solutions/industry/healthcare",
        "https://github.com/solutions/industry/financial-services",
        "https://github.com/solutions/industry/manufacturing",
        "https://github.com/solutions/industry/government",
        "https://github.com/solutions/industry",
        "https://github.com/solutions",
        "https://github.com/resources/articles/ai",
        "https://github.com/resources/articles/devops",
        "https://github.com/resources/articles/security",
        "https://github.com/resources/articles/software-development",
        "https://github.com/resources/articles",
        "https://resources.github.com/learn/pathways",
        "https://resources.github.com",
        "https://github.com/customer-stories",
        "https://partner.github.com",
        "https://github.com/solutions/executive-insights",
        "https://github.com/sponsors",
        "https://github.com/readme",
        "https://github.com/topics",
        "https://github.com/trending",
        "https://github.com/collections",
        "https://github.com/enterprise/advanced-security",
        "https://github.com/features/copilot#enterprise",
        "https://github.com/premium-support",
        "https://github.com/pricing",
        "https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax",
        "https://github.com/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&source=header-repo&source_repo=langchain-ai%2Flanggraph",
        "https://github.com/langchain-ai",
        "https://github.com/langchain-ai/langgraph",
        "https://github.com/login?return_to=%2Flangchain-ai%2Flanggraph",
        "https://github.com/langchain-ai/langgraph/blob/main/LICENSE",
        "https://github.com/langchain-ai/langgraph/stargazers",
        "https://github.com/langchain-ai/langgraph/forks",
        "https://github.com/langchain-ai/langgraph/branches",
        "https://github.com/langchain-ai/langgraph/tags",
        "https://github.com/langchain-ai/langgraph/activity",
        "https://github.com/langchain-ai/langgraph/issues",
        "https://github.com/langchain-ai/langgraph/pulls",
        "https://github.com/langchain-ai/langgraph/discussions",
        "https://github.com/langchain-ai/langgraph/actions",
        "https://github.com/langchain-ai/langgraph/projects",
        "https://github.com/langchain-ai/langgraph/security",
        "https://github.com/langchain-ai/langgraph/pulse",
        "https://github.com/vbarda",
        "https://github.com/langchain-ai/langgraph/commits?author=vbarda",
        "https://github.com/langchain-ai/langgraph/commit/44840aa23f05edb9758eb63d5cbbef89438b26f7",
        "https://github.com/langchain-ai/langgraph/pull/3141",
        "https://github.com/langchain-ai/langgraph/commits/main/",
        "https://github.com/langchain-ai/langgraph/tree/main/.github",
        "https://github.com/langchain-ai/langgraph/commit/51242e2a325f809ee3ea0f938158803911e32b57",
        "https://github.com/langchain-ai/langgraph/pull/3140",
        "https://github.com/langchain-ai/langgraph/tree/main/docs",
        "https://github.com/langchain-ai/langgraph/tree/main/examples",
        "https://github.com/langchain-ai/langgraph/commit/d1c29fc8be4dc12abe69b5910842972e6ab1d59c",
        "https://github.com/langchain-ai/langgraph/pull/2099",
        "https://github.com/langchain-ai/langgraph/tree/main/libs",
        "https://github.com/langchain-ai/langgraph/commit/12ae29719493e7e0ed63f6bfa79870a725f30fb3",
        "https://github.com/langchain-ai/langgraph/blob/main/.gitignore",
        "https://github.com/langchain-ai/langgraph/commit/f577529356f6a19dfcac09e7c1851d3c7d9b6fd0",
        "https://github.com/langchain-ai/langgraph/blob/main/.markdown-link-check.config.json",
        "https://github.com/langchain-ai/langgraph/commit/2c32a38c4206ae029df1ba308617846ad52ba0bb",
        "https://github.com/langchain-ai/langgraph/pull/441",
        "https://github.com/langchain-ai/langgraph/blob/main/CONTRIBUTING.md",
        "https://github.com/langchain-ai/langgraph/commit/9d755f54e4609121720c79de51520e069a081f67",
        "https://github.com/langchain-ai/langgraph/commit/1a06d500d4282cfdb2ae9d7748bb570e8162acdf",
        "https://github.com/langchain-ai/langgraph/blob/main/Makefile",
        "https://github.com/langchain-ai/langgraph/commit/b6c3a0d0fddd9e71934619ec2c2f322629b72f26",
        "https://github.com/langchain-ai/langgraph/blob/main/README.md",
        "https://github.com/langchain-ai/langgraph/commit/ee61d06f8dc8404ea6de960c2e19e9908924c62f",
        "https://github.com/langchain-ai/langgraph/blob/main/poetry.lock",
        "https://github.com/langchain-ai/langgraph/commit/4c0f8553292cbcc245f0daaa5b1825e829d5e6c9",
        "https://github.com/langchain-ai/langgraph/pull/3010",
        "https://github.com/langchain-ai/langgraph/blob/main/pyproject.toml",
        "https://github.com/langchain-ai/langgraph/blob/main/security.md",
        "https://github.com/langchain-ai/langgraph/commit/76b6394e7f7b3af10bc054e09715a6da1aa9968a",
        "https://github.com/langchain-ai/langgraph/pull/210",
        "https://github.com/langchain-ai/langgraph/",
        "https://github.com/langchain-ai/langgraph/#ï¸langgraph",
        "https://github.com/langchain-ai/langgraphjs",
        "https://github.com/langchain-ai/langgraph/#overview",
        "https://github.com/langchain-ai/langgraph/#why-use-langgraph",
        "https://github.com/langchain-ai/langgraph/#langgraph-platform",
        "https://github.com/langchain-ai/langgraph/#installation",
        "https://github.com/langchain-ai/langgraph/#example",
        "https://github.com/langchain-ai/langgraph/#documentation",
        "https://github.com/langchain-ai/langgraph/#contributing",
        "https://github.com/langchain-ai/langgraph/#readme-ov-file",
        "https://github.com/langchain-ai/langgraph/#MIT-1-ov-file",
        "https://github.com/langchain-ai/langgraph/#security-ov-file",
        "https://github.com/langchain-ai/langgraph/custom-properties",
        "https://github.com/langchain-ai/langgraph/watchers",
        "https://github.com/contact/report-content?content_url=https%3A%2F%2Fgithub.com%2Flangchain-ai%2Flanggraph&report=langchain-ai+%28user%29",
        "https://github.com/langchain-ai/langgraph/releases",
        "https://github.com/langchain-ai/langgraph/releases/tag/0.2.66",
        "https://github.com/orgs/langchain-ai/packages?repo_name=langgraph",
        "https://github.com/langchain-ai/langgraph/network/dependents",
        "https://github.com/langchain-ai/langgraph/graphs/contributors",
        "https://github.com/nfcampos",
        "https://github.com/hinthornw",
        "https://github.com/eyurtsev",
        "https://github.com/dqbd",
        "https://github.com/hwchase17",
        "https://github.com/isahers1",
        "https://github.com/andrewnguonly",
        "https://github.com/rlancemartin",
        "https://github.com/ccurme",
        "https://github.com/bracesproul",
        "https://github.com/jacoblee93",
        "https://github.com/baskaryan",
        "https://github.com/apps/dependabot",
        "https://github.com/langchain-ai/langgraph/search?l=python",
        "https://github.com/langchain-ai/langgraph/search?l=typescript",
        "https://github.com",
        "https://docs.github.com/site-policy/github-terms/github-terms-of-service",
        "https://docs.github.com/site-policy/privacy-policies/github-privacy-statement",
        "https://github.com/security",
        "https://docs.github.com/",
        "https://support.github.com?tags=dotcom-footer",
        "https://github.blog",
        "https://langchain-ai.github.io/langgraph/",
        "https://camo.githubusercontent.com/291f325393c3f62d28da44bb7c1d9f659e260a36e8b8f1b5b8d79b1aec5ee2f9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6c616e676772617068",
        "https://pepy.tech/project/langgraph",
        "https://langchain-ai.github.io/langgraphjs/",
        "https://langchain-ai.github.io/langgraph/tutorials/introduction/",
        "https://research.google/pubs/pub37252/",
        "https://beam.apache.org/",
        "https://networkx.org/documentation/latest/",
        "https://langchain-ai.github.io/langgraph/concepts/persistence/",
        "https://python.langchain.com/docs/introduction/",
        "https://docs.smith.langchain.com/",
        "https://academy.langchain.com/courses/intro-to-langgraph",
        "https://langchain-ai.github.io/langgraph/concepts/langgraph_platform",
        "https://langchain-ai.github.io/langgraph/concepts/langgraph_server",
        "https://langchain-ai.github.io/langgraph/concepts/sdk",
        "https://langchain-ai.github.io/langgraph/concepts/langgraph_cli",
        "https://langchain-ai.github.io/langgraph/concepts/langgraph_studio",
        "https://langchain-ai.github.io/langgraph/concepts/deployment_options/",
        "https://langchain-ai.github.io/langgraph/concepts/streaming",
        "https://langchain-ai.github.io/langgraph/concepts/double_texting",
        "https://langchain-ai.github.io/langgraph/concepts/agentic_concepts/#react-implementation",
        "https://python.langchain.com/docs/modules/agents/tools/custom_tools",
        "https://python.langchain.com/v0.2/docs/concepts/#runnable-interface",
        "https://langchain-ai.github.io/langgraph/tutorials/",
        "https://langchain-ai.github.io/langgraph/how-tos/",
        "https://langchain-ai.github.io/langgraph/concepts/high_level/",
        "https://langchain-ai.github.io/langgraph/reference/graphs/",
        "https://langchain-ai.github.io/langgraph/concepts/#langgraph-platform",
        "https://www.githubstatus.com/"
    ]
}