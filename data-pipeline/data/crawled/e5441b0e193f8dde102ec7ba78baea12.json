{
    "id": "e5441b0e193f8dde102ec7ba78baea12",
    "metadata": {
        "id": "e5441b0e193f8dde102ec7ba78baea12",
        "url": "https://github.com/huggingface/pytorch-image-models/",
        "title": "GitHub - huggingface/pytorch-image-models: The largest collection of PyTorch image encoders / backbones. Including train, eval, inference, export scripts, and pretrained weights -- ResNet, ResNeXT, EfficientNet, NFNet, Vision Transformer (ViT), MobileNetV4, MobileNet-V3 & V2, RegNet, DPN, CSPNet, Swin Transformer, MaxViT, CoAtNet, ConvNeXt, and more",
        "properties": {
            "description": "The largest collection of PyTorch image encoders / backbones. Including train, eval, inference, export scripts, and pretrained weights -- ResNet, ResNeXT, EfficientNet, NFNet, Vision Transformer (ViT), MobileNetV4, MobileNet-V3 & V2, RegNet, DPN, CSPNet, Swin Transformer, MaxViT, CoAtNet, ConvNeXt, and more - huggingface/pytorch-image-models",
            "keywords": null,
            "author": null,
            "og:image": "https://opengraph.githubassets.com/164609a6615a0da82d9fe378ddfa64f34bfb84d746f5a4ebfda267571bcfffb6/huggingface/pytorch-image-models",
            "og:image:alt": "The largest collection of PyTorch image encoders / backbones. Including train, eval, inference, export scripts, and pretrained weights -- ResNet, ResNeXT, EfficientNet, NFNet, Vision Transformer (V...",
            "og:image:width": "1200",
            "og:image:height": "600",
            "og:site_name": "GitHub",
            "og:type": "object",
            "og:title": "GitHub - huggingface/pytorch-image-models: The largest collection of PyTorch image encoders / backbones. Including train, eval, inference, export scripts, and pretrained weights -- ResNet, ResNeXT, EfficientNet, NFNet, Vision Transformer (ViT), MobileNetV4, MobileNet-V3 & V2, RegNet, DPN, CSPNet, Swin Transformer, MaxViT, CoAtNet, ConvNeXt, and more",
            "og:url": "https://github.com/huggingface/pytorch-image-models",
            "og:description": "The largest collection of PyTorch image encoders / backbones. Including train, eval, inference, export scripts, and pretrained weights -- ResNet, ResNeXT, EfficientNet, NFNet, Vision Transformer (V...",
            "twitter:image": "https://opengraph.githubassets.com/164609a6615a0da82d9fe378ddfa64f34bfb84d746f5a4ebfda267571bcfffb6/huggingface/pytorch-image-models",
            "twitter:site": "@github",
            "twitter:card": "summary_large_image",
            "twitter:title": "GitHub - huggingface/pytorch-image-models: The largest collection of PyTorch image encoders / backbones. Including train, eval, inference, export scripts, and pretrained weights -- ResNet, ResNeXT, EfficientNet, NFNet, Vision Transformer (ViT), MobileNetV4, MobileNet-V3 & V2, RegNet, DPN, CSPNet, Swin Transformer, MaxViT, CoAtNet, ConvNeXt, and more",
            "twitter:description": "The largest collection of PyTorch image encoders / backbones. Including train, eval, inference, export scripts, and pretrained weights -- ResNet, ResNeXT, EfficientNet, NFNet, Vision Transformer (V..."
        }
    },
    "parent_metadata": {
        "id": "35dcab2db126fcd3d4a13bc7ebbd9526",
        "url": "https://www.notion.so/Sources-35dcab2db126fcd3d4a13bc7ebbd9526",
        "title": "Sources",
        "properties": {
            "Type": "Node"
        }
    },
    "content": "[Skip to content](#start-of-content)\n\n## Navigation Menu\n\nToggle navigation\n\n[ ](/)\n\n[ Sign in ](/login?return_to=https%3A%2F%2Fgithub.com%2Fhuggingface%2Fpytorch-image-models%2F)\n\n  * Product \n\n    * [ GitHub Copilot Write better code with AI  ](https://github.com/features/copilot)\n    * [ Security Find and fix vulnerabilities  ](https://github.com/features/security)\n    * [ Actions Automate any workflow  ](https://github.com/features/actions)\n    * [ Codespaces Instant dev environments  ](https://github.com/features/codespaces)\n    * [ Issues Plan and track work  ](https://github.com/features/issues)\n    * [ Code Review Manage code changes  ](https://github.com/features/code-review)\n    * [ Discussions Collaborate outside of code  ](https://github.com/features/discussions)\n    * [ Code Search Find more, search less  ](https://github.com/features/code-search)\n\nExplore\n    * [ All features ](https://github.com/features)\n    * [ Documentation ](https://docs.github.com)\n    * [ GitHub Skills ](https://skills.github.com)\n    * [ Blog ](https://github.blog)\n\n  * Solutions \n\nBy company size\n    * [ Enterprises ](https://github.com/enterprise)\n    * [ Small and medium teams ](https://github.com/team)\n    * [ Startups ](https://github.com/enterprise/startups)\n    * [ Nonprofits ](/solutions/industry/nonprofits)\n\nBy use case\n    * [ DevSecOps ](/solutions/use-case/devsecops)\n    * [ DevOps ](/solutions/use-case/devops)\n    * [ CI/CD ](/solutions/use-case/ci-cd)\n    * [ View all use cases ](/solutions/use-case)\n\nBy industry\n    * [ Healthcare ](/solutions/industry/healthcare)\n    * [ Financial services ](/solutions/industry/financial-services)\n    * [ Manufacturing ](/solutions/industry/manufacturing)\n    * [ Government ](/solutions/industry/government)\n    * [ View all industries ](/solutions/industry)\n\n[ View all solutions ](/solutions)\n\n  * Resources \n\nTopics\n    * [ AI ](/resources/articles/ai)\n    * [ DevOps ](/resources/articles/devops)\n    * [ Security ](/resources/articles/security)\n    * [ Software Development ](/resources/articles/software-development)\n    * [ View all ](/resources/articles)\n\nExplore\n    * [ Learning Pathways ](https://resources.github.com/learn/pathways)\n    * [ White papers, Ebooks, Webinars ](https://resources.github.com)\n    * [ Customer Stories ](https://github.com/customer-stories)\n    * [ Partners ](https://partner.github.com)\n    * [ Executive Insights ](https://github.com/solutions/executive-insights)\n\n  * Open Source \n\n    * [ GitHub Sponsors Fund open source developers  ](/sponsors)\n\n    * [ The ReadME Project GitHub community articles  ](https://github.com/readme)\n\nRepositories\n    * [ Topics ](https://github.com/topics)\n    * [ Trending ](https://github.com/trending)\n    * [ Collections ](https://github.com/collections)\n\n  * Enterprise \n\n    * [ Enterprise platform AI-powered developer platform  ](/enterprise)\n\nAvailable add-ons\n    * [ Advanced Security Enterprise-grade security features  ](https://github.com/enterprise/advanced-security)\n    * [ GitHub Copilot Enterprise-grade AI features  ](/features/copilot#enterprise)\n    * [ Premium Support Enterprise-grade 24/7 support  ](/premium-support)\n\n  * [Pricing](https://github.com/pricing)\n\n\n\nSearch or jump to...\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch \n\nClear\n\n[Search syntax tips](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax)\n\n#  Provide feedback \n\nWe read every piece of feedback, and take your input very seriously.\n\nInclude my email address so I can be contacted\n\nCancel  Submit feedback \n\n#  Saved searches \n\n## Use saved searches to filter your results more quickly\n\nName\n\nQuery\n\nTo see all available qualifiers, see our [documentation](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax). \n\nCancel  Create saved search \n\n[ Sign in ](/login?return_to=https%3A%2F%2Fgithub.com%2Fhuggingface%2Fpytorch-image-models%2F)\n\n[ Sign up ](/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&source=header-repo&source_repo=huggingface%2Fpytorch-image-models) Reseting focus\n\nYou signed in with another tab or window. [Reload]() to refresh your session. You signed out in another tab or window. [Reload]() to refresh your session. You switched accounts on another tab or window. [Reload]() to refresh your session. Dismiss alert\n\n{{ message }}\n\n[ huggingface ](/huggingface) / **[pytorch-image-models](/huggingface/pytorch-image-models) ** Public\n\n  * [ Sponsor  ](/sponsors/huggingface)\n  * [ Notifications ](/login?return_to=%2Fhuggingface%2Fpytorch-image-models) You must be signed in to change notification settings\n  * [ Fork 4.8k ](/login?return_to=%2Fhuggingface%2Fpytorch-image-models)\n  * [ Star  33k ](/login?return_to=%2Fhuggingface%2Fpytorch-image-models)\n\n\n\n\nThe largest collection of PyTorch image encoders / backbones. Including train, eval, inference, export scripts, and pretrained weights -- ResNet, ResNeXT, EfficientNet, NFNet, Vision Transformer (ViT), MobileNetV4, MobileNet-V3 & V2, RegNet, DPN, CSPNet, Swin Transformer, MaxViT, CoAtNet, ConvNeXt, and more \n\n[huggingface.co/docs/timm](https://huggingface.co/docs/timm \"https://huggingface.co/docs/timm\")\n\n### License\n\n[ Apache-2.0 license ](/huggingface/pytorch-image-models/blob/main/LICENSE)\n\n[ 33k stars ](/huggingface/pytorch-image-models/stargazers) [ 4.8k forks ](/huggingface/pytorch-image-models/forks) [ Branches ](/huggingface/pytorch-image-models/branches) [ Tags ](/huggingface/pytorch-image-models/tags) [ Activity ](/huggingface/pytorch-image-models/activity)\n\n[ Star  ](/login?return_to=%2Fhuggingface%2Fpytorch-image-models)\n\n[ Notifications ](/login?return_to=%2Fhuggingface%2Fpytorch-image-models) You must be signed in to change notification settings\n\n  * [ Code ](/huggingface/pytorch-image-models)\n  * [ Issues 47 ](/huggingface/pytorch-image-models/issues)\n  * [ Pull requests 19 ](/huggingface/pytorch-image-models/pulls)\n  * [ Discussions ](/huggingface/pytorch-image-models/discussions)\n  * [ Actions ](/huggingface/pytorch-image-models/actions)\n  * [ Projects 0 ](/huggingface/pytorch-image-models/projects)\n  * [ Security ](/huggingface/pytorch-image-models/security)\n  * [ Insights ](/huggingface/pytorch-image-models/pulse)\n\n\n\nAdditional navigation options\n\n  * [ Code  ](/huggingface/pytorch-image-models)\n  * [ Issues  ](/huggingface/pytorch-image-models/issues)\n  * [ Pull requests  ](/huggingface/pytorch-image-models/pulls)\n  * [ Discussions  ](/huggingface/pytorch-image-models/discussions)\n  * [ Actions  ](/huggingface/pytorch-image-models/actions)\n  * [ Projects  ](/huggingface/pytorch-image-models/projects)\n  * [ Security  ](/huggingface/pytorch-image-models/security)\n  * [ Insights  ](/huggingface/pytorch-image-models/pulse)\n\n\n\n# huggingface/pytorch-image-models\n\nmain\n\n[**127** Branches](/huggingface/pytorch-image-models/branches)[**64** Tags](/huggingface/pytorch-image-models/tags)\n\n[](/huggingface/pytorch-image-models/branches)[](/huggingface/pytorch-image-models/tags)\n\nGo to file\n\nCode\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\n![brianhou0208](https://avatars.githubusercontent.com/u/23580140?v=4&size=40)![rwightman](https://avatars.githubusercontent.com/u/5702664?v=4&size=40)[brianhou0208](/huggingface/pytorch-image-models/commits?author=brianhou0208)and[rwightman](/huggingface/pytorch-image-models/commits?author=rwightman)[Add num_classes assertion after reset_classifier](/huggingface/pytorch-image-models/commit/bda46f8e6f4bd6463317b6402b8d63c107ceb09a)Jan 21, 2025[bda46f8](/huggingface/pytorch-image-models/commit/bda46f8e6f4bd6463317b6402b8d63c107ceb09a) · Jan 21, 2025\n\n## History\n\n[2,676 Commits](/huggingface/pytorch-image-models/commits/main/)[](/huggingface/pytorch-image-models/commits/main/)  \n[.github](/huggingface/pytorch-image-models/tree/main/.github \".github\")| [.github](/huggingface/pytorch-image-models/tree/main/.github \".github\")| [Update pip install to use whl/cpu](/huggingface/pytorch-image-models/commit/1a2d8bb5a082e63bd08ea7ed45670f7f46b190f6 \"Update pip install to use whl/cpu\")| Oct 2, 2024  \n[convert](/huggingface/pytorch-image-models/tree/main/convert \"convert\")| [convert](/huggingface/pytorch-image-models/tree/main/convert \"convert\")| [Move aggregation (convpool) for nest into NestLevel, cleanup and enab…](/huggingface/pytorch-image-models/commit/81cd6863c8c9515de8884e8a8ea0445ec08b4486 \"Move aggregation \\(convpool\\) for nest into NestLevel, cleanup and enable features_only use. Finalize weight url.\")| Jul 6, 2021  \n[hfdocs](/huggingface/pytorch-image-models/tree/main/hfdocs \"hfdocs\")| [hfdocs](/huggingface/pytorch-image-models/tree/main/hfdocs \"hfdocs\")| [Version 1.0.14, update README & changelog](/huggingface/pytorch-image-models/commit/5d535d7a2d4b435b1b5c1177fd8f04a12b942b9a \"Version 1.0.14, update README & changelog\")| Jan 19, 2025  \n[results](/huggingface/pytorch-image-models/tree/main/results \"results\")| [results](/huggingface/pytorch-image-models/tree/main/results \"results\")| [Add missing nhwc bm for 4090](/huggingface/pytorch-image-models/commit/ee5b1e8217134e9f016a0086b793c34abb721216 \"Add missing nhwc bm for 4090\")| Sep 5, 2024  \n[tests](/huggingface/pytorch-image-models/tree/main/tests \"tests\")| [tests](/huggingface/pytorch-image-models/tree/main/tests \"tests\")| [Add num_classes assertion after reset_classifier](/huggingface/pytorch-image-models/commit/bda46f8e6f4bd6463317b6402b8d63c107ceb09a \"Add num_classes assertion after reset_classifier\")| Jan 21, 2025  \n[timm](/huggingface/pytorch-image-models/tree/main/timm \"timm\")| [timm](/huggingface/pytorch-image-models/tree/main/timm \"timm\")| [Fix RDNet forward call](/huggingface/pytorch-image-models/commit/17eabaad174db0a3d509aff06b175c302db3967d \"Fix RDNet forward call\")| Jan 21, 2025  \n[.gitattributes](/huggingface/pytorch-image-models/blob/main/.gitattributes \".gitattributes\")| [.gitattributes](/huggingface/pytorch-image-models/blob/main/.gitattributes \".gitattributes\")| [Add .gitattributes](/huggingface/pytorch-image-models/commit/f632190fd902e23a06df17cc1da09b15fa3a515e \"Add .gitattributes\")| Jul 2, 2019  \n[.gitignore](/huggingface/pytorch-image-models/blob/main/.gitignore \".gitignore\")| [.gitignore](/huggingface/pytorch-image-models/blob/main/.gitignore \".gitignore\")| [Add FlexiViT models and weights, refactoring, push more weights](/huggingface/pytorch-image-models/commit/9a51e4ea2ef2c770085e75ddcef17f957068e0f1 \"Add FlexiViT models and weights, refactoring, push more weights\n* push all vision_transformer*.py weights to HF hub\n* finalize more pretrained tags for pushed weights\n* refactor pos_embed files and module locations, move some pos embed modules to layers\n* tweak hf hub helpers to aid bulk uploading and updating\")| Dec 23, 2022  \n[CITATION.cff](/huggingface/pytorch-image-models/blob/main/CITATION.cff \"CITATION.cff\")| [CITATION.cff](/huggingface/pytorch-image-models/blob/main/CITATION.cff \"CITATION.cff\")| [Add CODE_OF_CONDUCT.md and CITATION.cff files](/huggingface/pytorch-image-models/commit/165c3dea988f0e88feb82164b9e4de017cddc0bc \"Add CODE_OF_CONDUCT.md and CITATION.cff files\")| Nov 17, 2024  \n[CODE_OF_CONDUCT.md](/huggingface/pytorch-image-models/blob/main/CODE_OF_CONDUCT.md \"CODE_OF_CONDUCT.md\")| [CODE_OF_CONDUCT.md](/huggingface/pytorch-image-models/blob/main/CODE_OF_CONDUCT.md \"CODE_OF_CONDUCT.md\")| [Update CODE_OF_CONDUCT.md](/huggingface/pytorch-image-models/commit/facae65947fb3761246820f3666dd34bf37d5a75 \"Update CODE_OF_CONDUCT.md\")| Nov 17, 2024  \n[CONTRIBUTING.md](/huggingface/pytorch-image-models/blob/main/CONTRIBUTING.md \"CONTRIBUTING.md\")| [CONTRIBUTING.md](/huggingface/pytorch-image-models/blob/main/CONTRIBUTING.md \"CONTRIBUTING.md\")| [Fix typos](/huggingface/pytorch-image-models/commit/8d81fdf3d9cedfaef12f51f52f20ac0d12cb5276 \"Fix typos\")| Jan 19, 2025  \n[LICENSE](/huggingface/pytorch-image-models/blob/main/LICENSE \"LICENSE\")| [LICENSE](/huggingface/pytorch-image-models/blob/main/LICENSE \"LICENSE\")| [Add Apache LICENSE file](/huggingface/pytorch-image-models/commit/48ab3cf0700d015a806572af846e36b70d2d3f03 \"Add Apache LICENSE file\")| May 31, 2019  \n[MANIFEST.in](/huggingface/pytorch-image-models/blob/main/MANIFEST.in \"MANIFEST.in\")| [MANIFEST.in](/huggingface/pytorch-image-models/blob/main/MANIFEST.in \"MANIFEST.in\")| [Move ImageNet metadata (aka info) files to timm/data/_info. Add helpe…](/huggingface/pytorch-image-models/commit/0f2803de7a029aab8858afbb1fafa72da62a1fbb \"Move ImageNet metadata \\(aka info\\) files to timm/data/_info. Add helper classes to make info available for labelling. Update inference.py for first use.\")| Feb 7, 2023  \n[README.md](/huggingface/pytorch-image-models/blob/main/README.md \"README.md\")| [README.md](/huggingface/pytorch-image-models/blob/main/README.md \"README.md\")| [Version 1.0.14, update README & changelog](/huggingface/pytorch-image-models/commit/5d535d7a2d4b435b1b5c1177fd8f04a12b942b9a \"Version 1.0.14, update README & changelog\")| Jan 19, 2025  \n[UPGRADING.md](/huggingface/pytorch-image-models/blob/main/UPGRADING.md \"UPGRADING.md\")| [UPGRADING.md](/huggingface/pytorch-image-models/blob/main/UPGRADING.md \"UPGRADING.md\")| [fix: minor typos in UPGRADING](/huggingface/pytorch-image-models/commit/1245b8392404d1806d82a39c23d11472be831d89 \"fix: minor typos in UPGRADING\")| Dec 31, 2024  \n[avg_checkpoints.py](/huggingface/pytorch-image-models/blob/main/avg_checkpoints.py \"avg_checkpoints.py\")| [avg_checkpoints.py](/huggingface/pytorch-image-models/blob/main/avg_checkpoints.py \"avg_checkpoints.py\")| [Make safetensor import option for now. Improve avg/clean checkpoints …](/huggingface/pytorch-image-models/commit/d0b45c9b4d6c38e5c93ede6e9b8fc676bcb9818e \"Make safetensor import option for now. Improve avg/clean checkpoints ext handling a bit \\(more consistent\\).\")| Feb 19, 2023  \n[benchmark.py](/huggingface/pytorch-image-models/blob/main/benchmark.py \"benchmark.py\")| [benchmark.py](/huggingface/pytorch-image-models/blob/main/benchmark.py \"benchmark.py\")| [Fix metavar for --input-size](/huggingface/pytorch-image-models/commit/634b68ae503e5631f0638451a5bcc393005b77e7 \"Fix metavar for --input-size\")| Jan 20, 2025  \n[bulk_runner.py](/huggingface/pytorch-image-models/blob/main/bulk_runner.py \"bulk_runner.py\")| [bulk_runner.py](/huggingface/pytorch-image-models/blob/main/bulk_runner.py \"bulk_runner.py\")| [Replace deprecated positional argument with --data-dir](/huggingface/pytorch-image-models/commit/7e5477acf5a58a9a74c73d0ee7528ef7ce1da766 \"Replace deprecated positional argument with --data-dir\")| Nov 5, 2024  \n[clean_checkpoint.py](/huggingface/pytorch-image-models/blob/main/clean_checkpoint.py \"clean_checkpoint.py\")| [clean_checkpoint.py](/huggingface/pytorch-image-models/blob/main/clean_checkpoint.py \"clean_checkpoint.py\")| [Make safetensor import option for now. Improve avg/clean checkpoints …](/huggingface/pytorch-image-models/commit/d0b45c9b4d6c38e5c93ede6e9b8fc676bcb9818e \"Make safetensor import option for now. Improve avg/clean checkpoints ext handling a bit \\(more consistent\\).\")| Feb 19, 2023  \n[distributed_train.sh](/huggingface/pytorch-image-models/blob/main/distributed_train.sh \"distributed_train.sh\")| [distributed_train.sh](/huggingface/pytorch-image-models/blob/main/distributed_train.sh \"distributed_train.sh\")| [Change torchrun args to use _ instead of -, - is the new format, but …](/huggingface/pytorch-image-models/commit/56b90317cd9db1038b42ebdfc5bd81b1a2275cc1 \"Change torchrun args to use _ instead of -, - is the new format, but looks like _ still works for backward compat with old versions. Fix #1742\")| Mar 27, 2023  \n[hubconf.py](/huggingface/pytorch-image-models/blob/main/hubconf.py \"hubconf.py\")| [hubconf.py](/huggingface/pytorch-image-models/blob/main/hubconf.py \"hubconf.py\")| [Major module / path restructure, timm.models.layers -> timm.layers, a…](/huggingface/pytorch-image-models/commit/927f031293a30afb940fff0bee34b85d9c059b0e \"Major module / path restructure, timm.models.layers -> timm.layers, add _ prefix to all non model modules in timm.models\")| Dec 7, 2022  \n[inference.py](/huggingface/pytorch-image-models/blob/main/inference.py \"inference.py\")| [inference.py](/huggingface/pytorch-image-models/blob/main/inference.py \"inference.py\")| [Fix metavar for --input-size](/huggingface/pytorch-image-models/commit/634b68ae503e5631f0638451a5bcc393005b77e7 \"Fix metavar for --input-size\")| Jan 20, 2025  \n[onnx_export.py](/huggingface/pytorch-image-models/blob/main/onnx_export.py \"onnx_export.py\")| [onnx_export.py](/huggingface/pytorch-image-models/blob/main/onnx_export.py \"onnx_export.py\")| [Add support for dynamo based onnx export](/huggingface/pytorch-image-models/commit/ba641e07aeecbe4478be7678c589b314fe777611 \"Add support for dynamo based onnx export\")| Mar 13, 2024  \n[onnx_validate.py](/huggingface/pytorch-image-models/blob/main/onnx_validate.py \"onnx_validate.py\")| [onnx_validate.py](/huggingface/pytorch-image-models/blob/main/onnx_validate.py \"onnx_validate.py\")| [Add onnx utils and export code, tweak padding and conv2d_same for bet…](/huggingface/pytorch-image-models/commit/aef6e562e443876654ba6340d8f2b43594ce3c42 \"Add onnx utils and export code, tweak padding and conv2d_same for better dynamic export with recent PyTorch\")| Apr 12, 2023  \n[pyproject.toml](/huggingface/pytorch-image-models/blob/main/pyproject.toml \"pyproject.toml\")| [pyproject.toml](/huggingface/pytorch-image-models/blob/main/pyproject.toml \"pyproject.toml\")| [Next release will be 1.0 :o](/huggingface/pytorch-image-models/commit/de15b8b828abe1c924a693ac3d750efe85545019 \"Next release will be 1.0 :o\")| Apr 11, 2024  \n[requirements-dev.txt](/huggingface/pytorch-image-models/blob/main/requirements-dev.txt \"requirements-dev.txt\")| [requirements-dev.txt](/huggingface/pytorch-image-models/blob/main/requirements-dev.txt \"requirements-dev.txt\")| [CI: Split CI tests to run them in parallel (](/huggingface/pytorch-image-models/commit/10627bbd49b5a90e07d39a3404ad3c8569105825 \"CI: Split CI tests to run them in parallel \\(#1691\\)\n* Split CI tests to run them in parallel\nThe idea of this PR is to split tests into multiple sets that can be run\nin parallel by GH. For this, all tests in test_models.py that would run\non GH get a pytest marker. The GH workflow matrix is factorized to run\nonly a single marker. That way, only a subset of tests should run per\nworker, leading to quicker results.\nThere is also a worker that runs all the tests that are not inside\ntest_models.py.\n* \\[skip ci\\] empty commit to abort ci\n* Fix typo in marker name\n* Split fx into forward and backward\n* Comment out test coverage for now\nChecking if it's responsible for regression in CI runtime.\n* Remove pytest cov completely from requirements\n* Remove cov call in pyproject.toml\nMissed that one.\")[#1691](https://github.com/huggingface/pytorch-image-models/pull/1691)[)](/huggingface/pytorch-image-models/commit/10627bbd49b5a90e07d39a3404ad3c8569105825 \"CI: Split CI tests to run them in parallel \\(#1691\\)\n* Split CI tests to run them in parallel\nThe idea of this PR is to split tests into multiple sets that can be run\nin parallel by GH. For this, all tests in test_models.py that would run\non GH get a pytest marker. The GH workflow matrix is factorized to run\nonly a single marker. That way, only a subset of tests should run per\nworker, leading to quicker results.\nThere is also a worker that runs all the tests that are not inside\ntest_models.py.\n* \\[skip ci\\] empty commit to abort ci\n* Fix typo in marker name\n* Split fx into forward and backward\n* Comment out test coverage for now\nChecking if it's responsible for regression in CI runtime.\n* Remove pytest cov completely from requirements\n* Remove cov call in pyproject.toml\nMissed that one.\")| Feb 24, 2023  \n[requirements.txt](/huggingface/pytorch-image-models/blob/main/requirements.txt \"requirements.txt\")| [requirements.txt](/huggingface/pytorch-image-models/blob/main/requirements.txt \"requirements.txt\")| [Remove numpy ver constraint, not relevant for latest PyTorch version](/huggingface/pytorch-image-models/commit/c6b74eb5bd7ad7e96addeb9bf9bdfc34d088f1ac \"Remove numpy ver constraint, not relevant for latest PyTorch version\")| Jan 19, 2025  \n[setup.cfg](/huggingface/pytorch-image-models/blob/main/setup.cfg \"setup.cfg\")| [setup.cfg](/huggingface/pytorch-image-models/blob/main/setup.cfg \"setup.cfg\")| [Remove setup.py, replace with pyproject.toml and pdm helpers](/huggingface/pytorch-image-models/commit/01616aa314272768cdab317fb2d2fee5eb4beaab \"Remove setup.py, replace with pyproject.toml and pdm helpers\")| Feb 16, 2024  \n[train.py](/huggingface/pytorch-image-models/blob/main/train.py \"train.py\")| [train.py](/huggingface/pytorch-image-models/blob/main/train.py \"train.py\")| [add arguments to the respective argument groups](/huggingface/pytorch-image-models/commit/cb4cea561a3f39bcd6a3105c72d7e0b2b928bf44 \"add arguments to the respective argument groups\")| Jan 20, 2025  \n[validate.py](/huggingface/pytorch-image-models/blob/main/validate.py \"validate.py\")| [validate.py](/huggingface/pytorch-image-models/blob/main/validate.py \"validate.py\")| [Fix metavar for --input-size](/huggingface/pytorch-image-models/commit/634b68ae503e5631f0638451a5bcc393005b77e7 \"Fix metavar for --input-size\")| Jan 20, 2025  \nView all files  \n  \n## Repository files navigation\n\n  * [README](#)\n  * [Code of conduct](#)\n  * [Apache-2.0 license](#)\n\n\n\n# PyTorch Image Models\n\n[](#pytorch-image-models)\n\n  * [What's New](#whats-new)\n  * [Introduction](#introduction)\n  * [Models](#models)\n  * [Features](#features)\n  * [Results](#results)\n  * [Getting Started (Documentation)](#getting-started-documentation)\n  * [Train, Validation, Inference Scripts](#train-validation-inference-scripts)\n  * [Awesome PyTorch Resources](#awesome-pytorch-resources)\n  * [Licenses](#licenses)\n  * [Citing](#citing)\n\n\n\n## What's New\n\n[](#whats-new)\n\n## Jan 19, 2025\n\n[](#jan-19-2025)\n\n  * Fix loading of LeViT safetensor weights, remove conversion code which should have been deactivated\n  * Add 'SO150M' ViT weights trained with SBB recipes, decent results, but not optimal shape for ImageNet-12k/1k pretrain/ft \n    * `vit_so150m_patch16_reg4_gap_256.sbb_e250_in12k_ft_in1k` - 86.7% top-1\n    * `vit_so150m_patch16_reg4_gap_384.sbb_e250_in12k_ft_in1k` - 87.4% top-1\n    * `vit_so150m_patch16_reg4_gap_256.sbb_e250_in12k`\n  * Misc typing, typo, etc. cleanup\n  * 1.0.14 release to get above LeViT fix out\n\n\n\n## Jan 9, 2025\n\n[](#jan-9-2025)\n\n  * Add support to train and validate in pure `bfloat16` or `float16`\n  * `wandb` project name arg added by <https://github.com/caojiaolong>, use arg.experiment for name\n  * Fix old issue w/ checkpoint saving not working on filesystem w/o hard-link support (e.g. FUSE fs mounts)\n  * 1.0.13 release\n\n\n\n## Jan 6, 2025\n\n[](#jan-6-2025)\n\n  * Add `torch.utils.checkpoint.checkpoint()` wrapper in `timm.models` that defaults `use_reentrant=False`, unless `TIMM_REENTRANT_CKPT=1` is set in env.\n\n\n\n## Dec 31, 2024\n\n[](#dec-31-2024)\n\n  * `convnext_nano` 384x384 ImageNet-12k pretrain & fine-tune. <https://huggingface.co/models?search=convnext_nano%20r384>\n  * Add AIM-v2 encoders from <https://github.com/apple/ml-aim>, see on Hub: <https://huggingface.co/models?search=timm%20aimv2>\n  * Add PaliGemma2 encoders from <https://github.com/google-research/big_vision> to existing PaliGemma, see on Hub: <https://huggingface.co/models?search=timm%20pali2>\n  * Add missing L/14 DFN2B 39B CLIP ViT, `vit_large_patch14_clip_224.dfn2b_s39b`\n  * Fix existing `RmsNorm` layer & fn to match standard formulation, use PT 2.5 impl when possible. Move old impl to `SimpleNorm` layer, it's LN w/o centering or bias. There were only two `timm` models using it, and they have been updated.\n  * Allow override of `cache_dir` arg for model creation\n  * Pass through `trust_remote_code` for HF datasets wrapper\n  * `inception_next_atto` model added by creator\n  * Adan optimizer caution, and Lamb decoupled weighgt decay options\n  * Some feature_info metadata fixed by <https://github.com/brianhou0208>\n  * All OpenCLIP and JAX (CLIP, SigLIP, Pali, etc) model weights that used load time remapping were given their own HF Hub instances so that they work with `hf-hub:` based loading, and thus will work with new Transformers `TimmWrapperModel`\n\n\n\n## Nov 28, 2024\n\n[](#nov-28-2024)\n\n  * More optimizers \n    * Add MARS optimizer (<https://arxiv.org/abs/2411.10438>, <https://github.com/AGI-Arena/MARS>)\n    * Add LaProp optimizer (<https://arxiv.org/abs/2002.04839>, <https://github.com/Z-T-WANG/LaProp-Optimizer>)\n    * Add masking from 'Cautious Optimizers' (<https://arxiv.org/abs/2411.16085>, <https://github.com/kyleliang919/C-Optim>) to Adafactor, Adafactor Big Vision, AdamW (legacy), Adopt, Lamb, LaProp, Lion, NadamW, RMSPropTF, SGDW\n    * Cleanup some docstrings and type annotations re optimizers and factory\n  * Add MobileNet-V4 Conv Medium models pretrained on in12k and fine-tuned in1k @ 384x384 \n    * <https://huggingface.co/timm/mobilenetv4_conv_medium.e250_r384_in12k_ft_in1k>\n    * <https://huggingface.co/timm/mobilenetv4_conv_medium.e250_r384_in12k>\n    * <https://huggingface.co/timm/mobilenetv4_conv_medium.e180_ad_r384_in12k>\n    * <https://huggingface.co/timm/mobilenetv4_conv_medium.e180_r384_in12k>\n  * Add small cs3darknet, quite good for the speed \n    * <https://huggingface.co/timm/cs3darknet_focus_s.ra4_e3600_r256_in1k>\n\n\n\n## Nov 12, 2024\n\n[](#nov-12-2024)\n\n  * Optimizer factory refactor \n    * New factory works by registering optimizers using an OptimInfo dataclass w/ some key traits\n    * Add `list_optimizers`, `get_optimizer_class`, `get_optimizer_info` to reworked `create_optimizer_v2` fn to explore optimizers, get info or class\n    * deprecate `optim.optim_factory`, move fns to `optim/_optim_factory.py` and `optim/_param_groups.py` and encourage import via `timm.optim`\n  * Add Adopt (<https://github.com/iShohei220/adopt>) optimizer\n  * Add 'Big Vision' variant of Adafactor (<https://github.com/google-research/big_vision/blob/main/big_vision/optax.py>) optimizer\n  * Fix original Adafactor to pick better factorization dims for convolutions\n  * Tweak LAMB optimizer with some improvements in torch.where functionality since original, refactor clipping a bit\n  * dynamic img size support in vit, deit, eva improved to support resize from non-square patch grids, thanks <https://github.com/wojtke>\n\n\n\n## Oct 31, 2024\n\n[](#oct-31-2024)\n\nAdd a set of new very well trained ResNet & ResNet-V2 18/34 (basic block) weights. See <https://huggingface.co/blog/rwightman/resnet-trick-or-treat>\n\n## Oct 19, 2024\n\n[](#oct-19-2024)\n\n  * Cleanup torch amp usage to avoid cuda specific calls, merge support for Ascend (NPU) devices from [MengqingCao](https://github.com/MengqingCao) that should work now in PyTorch 2.5 w/ new device extension autoloading feature. Tested Intel Arc (XPU) in Pytorch 2.5 too and it (mostly) worked.\n\n\n\n## Oct 16, 2024\n\n[](#oct-16-2024)\n\n  * Fix error on importing from deprecated path `timm.models.registry`, increased priority of existing deprecation warnings to be visible\n  * Port weights of InternViT-300M (<https://huggingface.co/OpenGVLab/InternViT-300M-448px>) to `timm` as `vit_intern300m_patch14_448`\n\n\n\n### Oct 14, 2024\n\n[](#oct-14-2024)\n\n  * Pre-activation (ResNetV2) version of 18/18d/34/34d ResNet model defs added by request (weights pending)\n  * Release 1.0.10\n\n\n\n### Oct 11, 2024\n\n[](#oct-11-2024)\n\n  * MambaOut (<https://github.com/yuweihao/MambaOut>) model & weights added. A cheeky take on SSM vision models w/o the SSM (essentially ConvNeXt w/ gating). A mix of original weights + custom variations & weights.\n\nmodel | img_size | top1 | top5 | param_count  \n---|---|---|---|---  \n[mambaout_base_plus_rw.sw_e150_r384_in12k_ft_in1k](http://huggingface.co/timm/mambaout_base_plus_rw.sw_e150_r384_in12k_ft_in1k) | 384 | 87.506 | 98.428 | 101.66  \n[mambaout_base_plus_rw.sw_e150_in12k_ft_in1k](http://huggingface.co/timm/mambaout_base_plus_rw.sw_e150_in12k_ft_in1k) | 288 | 86.912 | 98.236 | 101.66  \n[mambaout_base_plus_rw.sw_e150_in12k_ft_in1k](http://huggingface.co/timm/mambaout_base_plus_rw.sw_e150_in12k_ft_in1k) | 224 | 86.632 | 98.156 | 101.66  \n[mambaout_base_tall_rw.sw_e500_in1k](http://huggingface.co/timm/mambaout_base_tall_rw.sw_e500_in1k) | 288 | 84.974 | 97.332 | 86.48  \n[mambaout_base_wide_rw.sw_e500_in1k](http://huggingface.co/timm/mambaout_base_wide_rw.sw_e500_in1k) | 288 | 84.962 | 97.208 | 94.45  \n[mambaout_base_short_rw.sw_e500_in1k](http://huggingface.co/timm/mambaout_base_short_rw.sw_e500_in1k) | 288 | 84.832 | 97.27 | 88.83  \n[mambaout_base.in1k](http://huggingface.co/timm/mambaout_base.in1k) | 288 | 84.72 | 96.93 | 84.81  \n[mambaout_small_rw.sw_e450_in1k](http://huggingface.co/timm/mambaout_small_rw.sw_e450_in1k) | 288 | 84.598 | 97.098 | 48.5  \n[mambaout_small.in1k](http://huggingface.co/timm/mambaout_small.in1k) | 288 | 84.5 | 96.974 | 48.49  \n[mambaout_base_wide_rw.sw_e500_in1k](http://huggingface.co/timm/mambaout_base_wide_rw.sw_e500_in1k) | 224 | 84.454 | 96.864 | 94.45  \n[mambaout_base_tall_rw.sw_e500_in1k](http://huggingface.co/timm/mambaout_base_tall_rw.sw_e500_in1k) | 224 | 84.434 | 96.958 | 86.48  \n[mambaout_base_short_rw.sw_e500_in1k](http://huggingface.co/timm/mambaout_base_short_rw.sw_e500_in1k) | 224 | 84.362 | 96.952 | 88.83  \n[mambaout_base.in1k](http://huggingface.co/timm/mambaout_base.in1k) | 224 | 84.168 | 96.68 | 84.81  \n[mambaout_small.in1k](http://huggingface.co/timm/mambaout_small.in1k) | 224 | 84.086 | 96.63 | 48.49  \n[mambaout_small_rw.sw_e450_in1k](http://huggingface.co/timm/mambaout_small_rw.sw_e450_in1k) | 224 | 84.024 | 96.752 | 48.5  \n[mambaout_tiny.in1k](http://huggingface.co/timm/mambaout_tiny.in1k) | 288 | 83.448 | 96.538 | 26.55  \n[mambaout_tiny.in1k](http://huggingface.co/timm/mambaout_tiny.in1k) | 224 | 82.736 | 96.1 | 26.55  \n[mambaout_kobe.in1k](http://huggingface.co/timm/mambaout_kobe.in1k) | 288 | 81.054 | 95.718 | 9.14  \n[mambaout_kobe.in1k](http://huggingface.co/timm/mambaout_kobe.in1k) | 224 | 79.986 | 94.986 | 9.14  \n[mambaout_femto.in1k](http://huggingface.co/timm/mambaout_femto.in1k) | 288 | 79.848 | 95.14 | 7.3  \n[mambaout_femto.in1k](http://huggingface.co/timm/mambaout_femto.in1k) | 224 | 78.87 | 94.408 | 7.3  \n  \n  * SigLIP SO400M ViT fine-tunes on ImageNet-1k @ 378x378, added 378x378 option for existing SigLIP 384x384 models \n    * [vit_so400m_patch14_siglip_378.webli_ft_in1k](https://huggingface.co/timm/vit_so400m_patch14_siglip_378.webli_ft_in1k) - 89.42 top-1\n    * [vit_so400m_patch14_siglip_gap_378.webli_ft_in1k](https://huggingface.co/timm/vit_so400m_patch14_siglip_gap_378.webli_ft_in1k) - 89.03\n  * SigLIP SO400M ViT encoder from recent multi-lingual (i18n) variant, patch16 @ 256x256 (<https://huggingface.co/timm/ViT-SO400M-16-SigLIP-i18n-256>). OpenCLIP update pending.\n  * Add two ConvNeXt 'Zepto' models & weights (one w/ overlapped stem and one w/ patch stem). Uses RMSNorm, smaller than previous 'Atto', 2.2M params. \n    * [convnext_zepto_rms_ols.ra4_e3600_r224_in1k](https://huggingface.co/timm/convnext_zepto_rms_ols.ra4_e3600_r224_in1k) - 73.20 top-1 @ 224\n    * [convnext_zepto_rms.ra4_e3600_r224_in1k](https://huggingface.co/timm/convnext_zepto_rms.ra4_e3600_r224_in1k) - 72.81 @ 224\n\n\n\n### Sept 2024\n\n[](#sept-2024)\n\n  * Add a suite of tiny test models for improved unit tests and niche low-resource applications (<https://huggingface.co/blog/rwightman/timm-tiny-test>)\n  * Add MobileNetV4-Conv-Small (0.5x) model (<https://huggingface.co/posts/rwightman/793053396198664>) \n    * [mobilenetv4_conv_small_050.e3000_r224_in1k](http://hf.co/timm/mobilenetv4_conv_small_050.e3000_r224_in1k) - 65.81 top-1 @ 256, 64.76 @ 224\n  * Add MobileNetV3-Large variants trained with MNV4 Small recipe \n    * [mobilenetv3_large_150d.ra4_e3600_r256_in1k](http://hf.co/timm/mobilenetv3_large_150d.ra4_e3600_r256_in1k) - 81.81 @ 320, 80.94 @ 256\n    * [mobilenetv3_large_100.ra4_e3600_r224_in1k](http://hf.co/timm/mobilenetv3_large_100.ra4_e3600_r224_in1k) - 77.16 @ 256, 76.31 @ 224\n\n\n\n### Aug 21, 2024\n\n[](#aug-21-2024)\n\n  * Updated SBB ViT models trained on ImageNet-12k and fine-tuned on ImageNet-1k, challenging quite a number of much larger, slower models\n\nmodel | top1 | top5 | param_count | img_size  \n---|---|---|---|---  \n[vit_mediumd_patch16_reg4_gap_384.sbb2_e200_in12k_ft_in1k](https://huggingface.co/timm/vit_mediumd_patch16_reg4_gap_384.sbb2_e200_in12k_ft_in1k) | 87.438 | 98.256 | 64.11 | 384  \n[vit_mediumd_patch16_reg4_gap_256.sbb2_e200_in12k_ft_in1k](https://huggingface.co/timm/vit_mediumd_patch16_reg4_gap_256.sbb2_e200_in12k_ft_in1k) | 86.608 | 97.934 | 64.11 | 256  \n[vit_betwixt_patch16_reg4_gap_384.sbb2_e200_in12k_ft_in1k](https://huggingface.co/timm/vit_betwixt_patch16_reg4_gap_384.sbb2_e200_in12k_ft_in1k) | 86.594 | 98.02 | 60.4 | 384  \n[vit_betwixt_patch16_reg4_gap_256.sbb2_e200_in12k_ft_in1k](https://huggingface.co/timm/vit_betwixt_patch16_reg4_gap_256.sbb2_e200_in12k_ft_in1k) | 85.734 | 97.61 | 60.4 | 256  \n  \n  * MobileNet-V1 1.25, EfficientNet-B1, & ResNet50-D weights w/ MNV4 baseline challenge recipe\n\nmodel | top1 | top5 | param_count | img_size  \n---|---|---|---|---  \n[resnet50d.ra4_e3600_r224_in1k](http://hf.co/timm/resnet50d.ra4_e3600_r224_in1k) | 81.838 | 95.922 | 25.58 | 288  \n[efficientnet_b1.ra4_e3600_r240_in1k](http://hf.co/timm/efficientnet_b1.ra4_e3600_r240_in1k) | 81.440 | 95.700 | 7.79 | 288  \n[resnet50d.ra4_e3600_r224_in1k](http://hf.co/timm/resnet50d.ra4_e3600_r224_in1k) | 80.952 | 95.384 | 25.58 | 224  \n[efficientnet_b1.ra4_e3600_r240_in1k](http://hf.co/timm/efficientnet_b1.ra4_e3600_r240_in1k) | 80.406 | 95.152 | 7.79 | 240  \n[mobilenetv1_125.ra4_e3600_r224_in1k](http://hf.co/timm/mobilenetv1_125.ra4_e3600_r224_in1k) | 77.600 | 93.804 | 6.27 | 256  \n[mobilenetv1_125.ra4_e3600_r224_in1k](http://hf.co/timm/mobilenetv1_125.ra4_e3600_r224_in1k) | 76.924 | 93.234 | 6.27 | 224  \n  \n  * Add SAM2 (HieraDet) backbone arch & weight loading support\n  * Add Hiera Small weights trained w/ abswin pos embed on in12k & fine-tuned on 1k\n\nmodel | top1 | top5 | param_count  \n---|---|---|---  \nhiera_small_abswin_256.sbb2_e200_in12k_ft_in1k | 84.912 | 97.260 | 35.01  \nhiera_small_abswin_256.sbb2_pd_e200_in12k_ft_in1k | 84.560 | 97.106 | 35.01  \n  \n### Aug 8, 2024\n\n[](#aug-8-2024)\n\n  * Add RDNet ('DenseNets Reloaded', <https://arxiv.org/abs/2403.19588>), thanks [Donghyun Kim](https://github.com/dhkim0225)\n\n\n\n### July 28, 2024\n\n[](#july-28-2024)\n\n  * Add `mobilenet_edgetpu_v2_m` weights w/ `ra4` mnv4-small based recipe. 80.1% top-1 @ 224 and 80.7 @ 256.\n  * Release 1.0.8\n\n\n\n### July 26, 2024\n\n[](#july-26-2024)\n\n  * More MobileNet-v4 weights, ImageNet-12k pretrain w/ fine-tunes, and anti-aliased ConvLarge models\n\nmodel | top1 | top1_err | top5 | top5_err | param_count | img_size  \n---|---|---|---|---|---|---  \n[mobilenetv4_conv_aa_large.e230_r448_in12k_ft_in1k](http://hf.co/timm/mobilenetv4_conv_aa_large.e230_r448_in12k_ft_in1k) | 84.99 | 15.01 | 97.294 | 2.706 | 32.59 | 544  \n[mobilenetv4_conv_aa_large.e230_r384_in12k_ft_in1k](http://hf.co/timm/mobilenetv4_conv_aa_large.e230_r384_in12k_ft_in1k) | 84.772 | 15.228 | 97.344 | 2.656 | 32.59 | 480  \n[mobilenetv4_conv_aa_large.e230_r448_in12k_ft_in1k](http://hf.co/timm/mobilenetv4_conv_aa_large.e230_r448_in12k_ft_in1k) | 84.64 | 15.36 | 97.114 | 2.886 | 32.59 | 448  \n[mobilenetv4_conv_aa_large.e230_r384_in12k_ft_in1k](http://hf.co/timm/mobilenetv4_conv_aa_large.e230_r384_in12k_ft_in1k) | 84.314 | 15.686 | 97.102 | 2.898 | 32.59 | 384  \n[mobilenetv4_conv_aa_large.e600_r384_in1k](http://hf.co/timm/mobilenetv4_conv_aa_large.e600_r384_in1k) | 83.824 | 16.176 | 96.734 | 3.266 | 32.59 | 480  \n[mobilenetv4_conv_aa_large.e600_r384_in1k](http://hf.co/timm/mobilenetv4_conv_aa_large.e600_r384_in1k) | 83.244 | 16.756 | 96.392 | 3.608 | 32.59 | 384  \n[mobilenetv4_hybrid_medium.e200_r256_in12k_ft_in1k](http://hf.co/timm/mobilenetv4_hybrid_medium.e200_r256_in12k_ft_in1k) | 82.99 | 17.01 | 96.67 | 3.33 | 11.07 | 320  \n[mobilenetv4_hybrid_medium.e200_r256_in12k_ft_in1k](http://hf.co/timm/mobilenetv4_hybrid_medium.e200_r256_in12k_ft_in1k) | 82.364 | 17.636 | 96.256 | 3.744 | 11.07 | 256  \n  \n  * Impressive MobileNet-V1 and EfficientNet-B0 baseline challenges (<https://huggingface.co/blog/rwightman/mobilenet-baselines>)\n\nmodel | top1 | top1_err | top5 | top5_err | param_count | img_size  \n---|---|---|---|---|---|---  \n[efficientnet_b0.ra4_e3600_r224_in1k](http://hf.co/timm/efficientnet_b0.ra4_e3600_r224_in1k) | 79.364 | 20.636 | 94.754 | 5.246 | 5.29 | 256  \n[efficientnet_b0.ra4_e3600_r224_in1k](http://hf.co/timm/efficientnet_b0.ra4_e3600_r224_in1k) | 78.584 | 21.416 | 94.338 | 5.662 | 5.29 | 224  \n[mobilenetv1_100h.ra4_e3600_r224_in1k](http://hf.co/timm/mobilenetv1_100h.ra4_e3600_r224_in1k) | 76.596 | 23.404 | 93.272 | 6.728 | 5.28 | 256  \n[mobilenetv1_100.ra4_e3600_r224_in1k](http://hf.co/timm/mobilenetv1_100.ra4_e3600_r224_in1k) | 76.094 | 23.906 | 93.004 | 6.996 | 4.23 | 256  \n[mobilenetv1_100h.ra4_e3600_r224_in1k](http://hf.co/timm/mobilenetv1_100h.ra4_e3600_r224_in1k) | 75.662 | 24.338 | 92.504 | 7.496 | 5.28 | 224  \n[mobilenetv1_100.ra4_e3600_r224_in1k](http://hf.co/timm/mobilenetv1_100.ra4_e3600_r224_in1k) | 75.382 | 24.618 | 92.312 | 7.688 | 4.23 | 224  \n  \n  * Prototype of `set_input_size()` added to vit and swin v1/v2 models to allow changing image size, patch size, window size after model creation.\n  * Improved support in swin for different size handling, in addition to `set_input_size`, `always_partition` and `strict_img_size` args have been added to `__init__` to allow more flexible input size constraints\n  * Fix out of order indices info for intermediate 'Getter' feature wrapper, check out or range indices for same.\n  * Add several `tiny` < .5M param models for testing that are actually trained on ImageNet-1k\n\nmodel | top1 | top1_err | top5 | top5_err | param_count | img_size | crop_pct  \n---|---|---|---|---|---|---|---  \ntest_efficientnet.r160_in1k | 47.156 | 52.844 | 71.726 | 28.274 | 0.36 | 192 | 1.0  \ntest_byobnet.r160_in1k | 46.698 | 53.302 | 71.674 | 28.326 | 0.46 | 192 | 1.0  \ntest_efficientnet.r160_in1k | 46.426 | 53.574 | 70.928 | 29.072 | 0.36 | 160 | 0.875  \ntest_byobnet.r160_in1k | 45.378 | 54.622 | 70.572 | 29.428 | 0.46 | 160 | 0.875  \ntest_vit.r160_in1k | 42.0 | 58.0 | 68.664 | 31.336 | 0.37 | 192 | 1.0  \ntest_vit.r160_in1k | 40.822 | 59.178 | 67.212 | 32.788 | 0.37 | 160 | 0.875  \n  \n  * Fix vit reg token init, thanks [Promisery](https://github.com/Promisery)\n  * Other misc fixes\n\n\n\n### June 24, 2024\n\n[](#june-24-2024)\n\n  * 3 more MobileNetV4 hyrid weights with different MQA weight init scheme\n\nmodel | top1 | top1_err | top5 | top5_err | param_count | img_size  \n---|---|---|---|---|---|---  \n[mobilenetv4_hybrid_large.ix_e600_r384_in1k](http://hf.co/timm/mobilenetv4_hybrid_large.ix_e600_r384_in1k) | 84.356 | 15.644 | 96.892 | 3.108 | 37.76 | 448  \n[mobilenetv4_hybrid_large.ix_e600_r384_in1k](http://hf.co/timm/mobilenetv4_hybrid_large.ix_e600_r384_in1k) | 83.990 | 16.010 | 96.702 | 3.298 | 37.76 | 384  \n[mobilenetv4_hybrid_medium.ix_e550_r384_in1k](http://hf.co/timm/mobilenetv4_hybrid_medium.ix_e550_r384_in1k) | 83.394 | 16.606 | 96.760 | 3.240 | 11.07 | 448  \n[mobilenetv4_hybrid_medium.ix_e550_r384_in1k](http://hf.co/timm/mobilenetv4_hybrid_medium.ix_e550_r384_in1k) | 82.968 | 17.032 | 96.474 | 3.526 | 11.07 | 384  \n[mobilenetv4_hybrid_medium.ix_e550_r256_in1k](http://hf.co/timm/mobilenetv4_hybrid_medium.ix_e550_r256_in1k) | 82.492 | 17.508 | 96.278 | 3.722 | 11.07 | 320  \n[mobilenetv4_hybrid_medium.ix_e550_r256_in1k](http://hf.co/timm/mobilenetv4_hybrid_medium.ix_e550_r256_in1k) | 81.446 | 18.554 | 95.704 | 4.296 | 11.07 | 256  \n  \n  * florence2 weight loading in DaViT model\n\n\n\n### June 12, 2024\n\n[](#june-12-2024)\n\n  * MobileNetV4 models and initial set of `timm` trained weights added:\n\nmodel | top1 | top1_err | top5 | top5_err | param_count | img_size  \n---|---|---|---|---|---|---  \n[mobilenetv4_hybrid_large.e600_r384_in1k](http://hf.co/timm/mobilenetv4_hybrid_large.e600_r384_in1k) | 84.266 | 15.734 | 96.936 | 3.064 | 37.76 | 448  \n[mobilenetv4_hybrid_large.e600_r384_in1k](http://hf.co/timm/mobilenetv4_hybrid_large.e600_r384_in1k) | 83.800 | 16.200 | 96.770 | 3.230 | 37.76 | 384  \n[mobilenetv4_conv_large.e600_r384_in1k](http://hf.co/timm/mobilenetv4_conv_large.e600_r384_in1k) | 83.392 | 16.608 | 96.622 | 3.378 | 32.59 | 448  \n[mobilenetv4_conv_large.e600_r384_in1k](http://hf.co/timm/mobilenetv4_conv_large.e600_r384_in1k) | 82.952 | 17.048 | 96.266 | 3.734 | 32.59 | 384  \n[mobilenetv4_conv_large.e500_r256_in1k](http://hf.co/timm/mobilenetv4_conv_large.e500_r256_in1k) | 82.674 | 17.326 | 96.31 | 3.69 | 32.59 | 320  \n[mobilenetv4_conv_large.e500_r256_in1k](http://hf.co/timm/mobilenetv4_conv_large.e500_r256_in1k) | 81.862 | 18.138 | 95.69 | 4.31 | 32.59 | 256  \n[mobilenetv4_hybrid_medium.e500_r224_in1k](http://hf.co/timm/mobilenetv4_hybrid_medium.e500_r224_in1k) | 81.276 | 18.724 | 95.742 | 4.258 | 11.07 | 256  \n[mobilenetv4_conv_medium.e500_r256_in1k](http://hf.co/timm/mobilenetv4_conv_medium.e500_r256_in1k) | 80.858 | 19.142 | 95.768 | 4.232 | 9.72 | 320  \n[mobilenetv4_hybrid_medium.e500_r224_in1k](http://hf.co/timm/mobilenetv4_hybrid_medium.e500_r224_in1k) | 80.442 | 19.558 | 95.38 | 4.62 | 11.07 | 224  \n[mobilenetv4_conv_blur_medium.e500_r224_in1k](http://hf.co/timm/mobilenetv4_conv_blur_medium.e500_r224_in1k) | 80.142 | 19.858 | 95.298 | 4.702 | 9.72 | 256  \n[mobilenetv4_conv_medium.e500_r256_in1k](http://hf.co/timm/mobilenetv4_conv_medium.e500_r256_in1k) | 79.928 | 20.072 | 95.184 | 4.816 | 9.72 | 256  \n[mobilenetv4_conv_medium.e500_r224_in1k](http://hf.co/timm/mobilenetv4_conv_medium.e500_r224_in1k) | 79.808 | 20.192 | 95.186 | 4.814 | 9.72 | 256  \n[mobilenetv4_conv_blur_medium.e500_r224_in1k](http://hf.co/timm/mobilenetv4_conv_blur_medium.e500_r224_in1k) | 79.438 | 20.562 | 94.932 | 5.068 | 9.72 | 224  \n[mobilenetv4_conv_medium.e500_r224_in1k](http://hf.co/timm/mobilenetv4_conv_medium.e500_r224_in1k) | 79.094 | 20.906 | 94.77 | 5.23 | 9.72 | 224  \n[mobilenetv4_conv_small.e2400_r224_in1k](http://hf.co/timm/mobilenetv4_conv_small.e2400_r224_in1k) | 74.616 | 25.384 | 92.072 | 7.928 | 3.77 | 256  \n[mobilenetv4_conv_small.e1200_r224_in1k](http://hf.co/timm/mobilenetv4_conv_small.e1200_r224_in1k) | 74.292 | 25.708 | 92.116 | 7.884 | 3.77 | 256  \n[mobilenetv4_conv_small.e2400_r224_in1k](http://hf.co/timm/mobilenetv4_conv_small.e2400_r224_in1k) | 73.756 | 26.244 | 91.422 | 8.578 | 3.77 | 224  \n[mobilenetv4_conv_small.e1200_r224_in1k](http://hf.co/timm/mobilenetv4_conv_small.e1200_r224_in1k) | 73.454 | 26.546 | 91.34 | 8.66 | 3.77 | 224  \n  \n  * Apple MobileCLIP (<https://arxiv.org/pdf/2311.17049>, FastViT and ViT-B) image tower model support & weights added (part of OpenCLIP support).\n  * ViTamin (<https://arxiv.org/abs/2404.02132>) CLIP image tower model & weights added (part of OpenCLIP support).\n  * OpenAI CLIP Modified ResNet image tower modelling & weight support (via ByobNet). Refactor AttentionPool2d.\n\n\n\n### May 14, 2024\n\n[](#may-14-2024)\n\n  * Support loading PaliGemma jax weights into SigLIP ViT models with average pooling.\n  * Add Hiera models from Meta (<https://github.com/facebookresearch/hiera>).\n  * Add `normalize=` flag for transforms, return non-normalized torch.Tensor with original dytpe (for `chug`)\n  * Version 1.0.3 release\n\n\n\n### May 11, 2024\n\n[](#may-11-2024)\n\n  * `Searching for Better ViT Baselines (For the GPU Poor)` weights and vit variants released. Exploring model shapes between Tiny and Base.\n\nmodel | top1 | top5 | param_count | img_size  \n---|---|---|---|---  \n[vit_mediumd_patch16_reg4_gap_256.sbb_in12k_ft_in1k](https://huggingface.co/timm/vit_mediumd_patch16_reg4_gap_256.sbb_in12k_ft_in1k) | 86.202 | 97.874 | 64.11 | 256  \n[vit_betwixt_patch16_reg4_gap_256.sbb_in12k_ft_in1k](https://huggingface.co/timm/vit_betwixt_patch16_reg4_gap_256.sbb_in12k_ft_in1k) | 85.418 | 97.48 | 60.4 | 256  \n[vit_mediumd_patch16_rope_reg1_gap_256.sbb_in1k](https://huggingface.co/timm/vit_mediumd_patch16_rope_reg1_gap_256.sbb_in1k) | 84.322 | 96.812 | 63.95 | 256  \n[vit_betwixt_patch16_rope_reg4_gap_256.sbb_in1k](https://huggingface.co/timm/vit_betwixt_patch16_rope_reg4_gap_256.sbb_in1k) | 83.906 | 96.684 | 60.23 | 256  \n[vit_base_patch16_rope_reg1_gap_256.sbb_in1k](https://huggingface.co/timm/vit_base_patch16_rope_reg1_gap_256.sbb_in1k) | 83.866 | 96.67 | 86.43 | 256  \n[vit_medium_patch16_rope_reg1_gap_256.sbb_in1k](https://huggingface.co/timm/vit_medium_patch16_rope_reg1_gap_256.sbb_in1k) | 83.81 | 96.824 | 38.74 | 256  \n[vit_betwixt_patch16_reg4_gap_256.sbb_in1k](https://huggingface.co/timm/vit_betwixt_patch16_reg4_gap_256.sbb_in1k) | 83.706 | 96.616 | 60.4 | 256  \n[vit_betwixt_patch16_reg1_gap_256.sbb_in1k](https://huggingface.co/timm/vit_betwixt_patch16_reg1_gap_256.sbb_in1k) | 83.628 | 96.544 | 60.4 | 256  \n[vit_medium_patch16_reg4_gap_256.sbb_in1k](https://huggingface.co/timm/vit_medium_patch16_reg4_gap_256.sbb_in1k) | 83.47 | 96.622 | 38.88 | 256  \n[vit_medium_patch16_reg1_gap_256.sbb_in1k](https://huggingface.co/timm/vit_medium_patch16_reg1_gap_256.sbb_in1k) | 83.462 | 96.548 | 38.88 | 256  \n[vit_little_patch16_reg4_gap_256.sbb_in1k](https://huggingface.co/timm/vit_little_patch16_reg4_gap_256.sbb_in1k) | 82.514 | 96.262 | 22.52 | 256  \n[vit_wee_patch16_reg1_gap_256.sbb_in1k](https://huggingface.co/timm/vit_wee_patch16_reg1_gap_256.sbb_in1k) | 80.256 | 95.360 | 13.42 | 256  \n[vit_pwee_patch16_reg1_gap_256.sbb_in1k](https://huggingface.co/timm/vit_pwee_patch16_reg1_gap_256.sbb_in1k) | 80.072 | 95.136 | 15.25 | 256  \n[vit_mediumd_patch16_reg4_gap_256.sbb_in12k](https://huggingface.co/timm/vit_mediumd_patch16_reg4_gap_256.sbb_in12k) | N/A | N/A | 64.11 | 256  \n[vit_betwixt_patch16_reg4_gap_256.sbb_in12k](https://huggingface.co/timm/vit_betwixt_patch16_reg4_gap_256.sbb_in12k) | N/A | N/A | 60.4 | 256  \n  \n  * AttentionExtract helper added to extract attention maps from `timm` models. See example in [#1232 (comment)](https://github.com/huggingface/pytorch-image-models/discussions/1232#discussioncomment-9320949)\n  * `forward_intermediates()` API refined and added to more models including some ConvNets that have other extraction methods.\n  * 1017 of 1047 model architectures support `features_only=True` feature extraction. Remaining 34 architectures can be supported but based on priority requests.\n  * Remove torch.jit.script annotated functions including old JIT activations. Conflict with dynamo and dynamo does a much better job when used.\n\n\n\n### April 11, 2024\n\n[](#april-11-2024)\n\n  * Prepping for a long overdue 1.0 release, things have been stable for a while now.\n  * Significant feature that's been missing for a while, `features_only=True` support for ViT models with flat hidden states or non-std module layouts (so far covering `'vit_*', 'twins_*', 'deit*', 'beit*', 'mvitv2*', 'eva*', 'samvit_*', 'flexivit*'`)\n  * Above feature support achieved through a new `forward_intermediates()` API that can be used with a feature wrapping module or directly.\n\n\n\n```\nmodel = timm.create_model('vit_base_patch16_224') final_feat, intermediates = model.forward_intermediates(input) output = model.forward_head(final_feat) # pooling + classifier head print(final_feat.shape) torch.Size([2, 197, 768]) for f in intermediates: print(f.shape) torch.Size([2, 768, 14, 14]) torch.Size([2, 768, 14, 14]) torch.Size([2, 768, 14, 14]) torch.Size([2, 768, 14, 14]) torch.Size([2, 768, 14, 14]) torch.Size([2, 768, 14, 14]) torch.Size([2, 768, 14, 14]) torch.Size([2, 768, 14, 14]) torch.Size([2, 768, 14, 14]) torch.Size([2, 768, 14, 14]) torch.Size([2, 768, 14, 14]) torch.Size([2, 768, 14, 14]) print(output.shape) torch.Size([2, 1000])\n```\n\n```\nmodel = timm.create_model('eva02_base_patch16_clip_224', pretrained=True, img_size=512, features_only=True, out_indices=(-3, -2,)) output = model(torch.randn(2, 3, 512, 512)) for o in output: print(o.shape) torch.Size([2, 768, 32, 32]) torch.Size([2, 768, 32, 32])\n```\n\n  * TinyCLIP vision tower weights added, thx [Thien Tran](https://github.com/gau-nernst)\n\n\n\n### Feb 19, 2024\n\n[](#feb-19-2024)\n\n  * Next-ViT models added. Adapted from <https://github.com/bytedance/Next-ViT>\n  * HGNet and PP-HGNetV2 models added. Adapted from <https://github.com/PaddlePaddle/PaddleClas> by [SeeFun](https://github.com/seefun)\n  * Removed setup.py, moved to pyproject.toml based build supported by PDM\n  * Add updated model EMA impl using _for_each for less overhead\n  * Support device args in train script for non GPU devices\n  * Other misc fixes and small additions\n  * Min supported Python version increased to 3.8\n  * Release 0.9.16\n\n\n\n## Introduction\n\n[](#introduction)\n\nPy**T** orch **Im** age **M** odels (`timm`) is a collection of image models, layers, utilities, optimizers, schedulers, data-loaders / augmentations, and reference training / validation scripts that aim to pull together a wide variety of SOTA models with ability to reproduce ImageNet training results.\n\nThe work of many others is present here. I've tried to make sure all source material is acknowledged via links to github, arxiv papers, etc in the README, documentation, and code docstrings. Please let me know if I missed anything.\n\n## Features\n\n[](#features)\n\n### Models\n\n[](#models)\n\nAll model architecture families include variants with pretrained weights. There are specific model variants without any weights, it is NOT a bug. Help training new or better weights is always appreciated.\n\n  * Aggregating Nested Transformers - <https://arxiv.org/abs/2105.12723>\n  * BEiT - <https://arxiv.org/abs/2106.08254>\n  * Big Transfer ResNetV2 (BiT) - <https://arxiv.org/abs/1912.11370>\n  * Bottleneck Transformers - <https://arxiv.org/abs/2101.11605>\n  * CaiT (Class-Attention in Image Transformers) - <https://arxiv.org/abs/2103.17239>\n  * CoaT (Co-Scale Conv-Attentional Image Transformers) - <https://arxiv.org/abs/2104.06399>\n  * CoAtNet (Convolution and Attention) - <https://arxiv.org/abs/2106.04803>\n  * ConvNeXt - <https://arxiv.org/abs/2201.03545>\n  * ConvNeXt-V2 - <http://arxiv.org/abs/2301.00808>\n  * ConViT (Soft Convolutional Inductive Biases Vision Transformers)- <https://arxiv.org/abs/2103.10697>\n  * CspNet (Cross-Stage Partial Networks) - <https://arxiv.org/abs/1911.11929>\n  * DeiT - <https://arxiv.org/abs/2012.12877>\n  * DeiT-III - <https://arxiv.org/pdf/2204.07118.pdf>\n  * DenseNet - <https://arxiv.org/abs/1608.06993>\n  * DLA - <https://arxiv.org/abs/1707.06484>\n  * DPN (Dual-Path Network) - <https://arxiv.org/abs/1707.01629>\n  * EdgeNeXt - <https://arxiv.org/abs/2206.10589>\n  * EfficientFormer - <https://arxiv.org/abs/2206.01191>\n  * EfficientNet (MBConvNet Family) \n    * EfficientNet NoisyStudent (B0-B7, L2) - <https://arxiv.org/abs/1911.04252>\n    * EfficientNet AdvProp (B0-B8) - <https://arxiv.org/abs/1911.09665>\n    * EfficientNet (B0-B7) - <https://arxiv.org/abs/1905.11946>\n    * EfficientNet-EdgeTPU (S, M, L) - <https://ai.googleblog.com/2019/08/efficientnet-edgetpu-creating.html>\n    * EfficientNet V2 - <https://arxiv.org/abs/2104.00298>\n    * FBNet-C - <https://arxiv.org/abs/1812.03443>\n    * MixNet - <https://arxiv.org/abs/1907.09595>\n    * MNASNet B1, A1 (Squeeze-Excite), and Small - <https://arxiv.org/abs/1807.11626>\n    * MobileNet-V2 - <https://arxiv.org/abs/1801.04381>\n    * Single-Path NAS - <https://arxiv.org/abs/1904.02877>\n    * TinyNet - <https://arxiv.org/abs/2010.14819>\n  * EfficientViT (MIT) - <https://arxiv.org/abs/2205.14756>\n  * EfficientViT (MSRA) - <https://arxiv.org/abs/2305.07027>\n  * EVA - <https://arxiv.org/abs/2211.07636>\n  * EVA-02 - <https://arxiv.org/abs/2303.11331>\n  * FastViT - <https://arxiv.org/abs/2303.14189>\n  * FlexiViT - <https://arxiv.org/abs/2212.08013>\n  * FocalNet (Focal Modulation Networks) - <https://arxiv.org/abs/2203.11926>\n  * GCViT (Global Context Vision Transformer) - <https://arxiv.org/abs/2206.09959>\n  * GhostNet - <https://arxiv.org/abs/1911.11907>\n  * GhostNet-V2 - <https://arxiv.org/abs/2211.12905>\n  * gMLP - <https://arxiv.org/abs/2105.08050>\n  * GPU-Efficient Networks - <https://arxiv.org/abs/2006.14090>\n  * Halo Nets - <https://arxiv.org/abs/2103.12731>\n  * HGNet / HGNet-V2 - TBD\n  * HRNet - <https://arxiv.org/abs/1908.07919>\n  * InceptionNeXt - <https://arxiv.org/abs/2303.16900>\n  * Inception-V3 - <https://arxiv.org/abs/1512.00567>\n  * Inception-ResNet-V2 and Inception-V4 - <https://arxiv.org/abs/1602.07261>\n  * Lambda Networks - <https://arxiv.org/abs/2102.08602>\n  * LeViT (Vision Transformer in ConvNet's Clothing) - <https://arxiv.org/abs/2104.01136>\n  * MambaOut - <https://arxiv.org/abs/2405.07992>\n  * MaxViT (Multi-Axis Vision Transformer) - <https://arxiv.org/abs/2204.01697>\n  * MetaFormer (PoolFormer-v2, ConvFormer, CAFormer) - <https://arxiv.org/abs/2210.13452>\n  * MLP-Mixer - <https://arxiv.org/abs/2105.01601>\n  * MobileCLIP - <https://arxiv.org/abs/2311.17049>\n  * MobileNet-V3 (MBConvNet w/ Efficient Head) - <https://arxiv.org/abs/1905.02244>\n    * FBNet-V3 - <https://arxiv.org/abs/2006.02049>\n    * HardCoRe-NAS - <https://arxiv.org/abs/2102.11646>\n    * LCNet - <https://arxiv.org/abs/2109.15099>\n  * MobileNetV4 - <https://arxiv.org/abs/2404.10518>\n  * MobileOne - <https://arxiv.org/abs/2206.04040>\n  * MobileViT - <https://arxiv.org/abs/2110.02178>\n  * MobileViT-V2 - <https://arxiv.org/abs/2206.02680>\n  * MViT-V2 (Improved Multiscale Vision Transformer) - <https://arxiv.org/abs/2112.01526>\n  * NASNet-A - <https://arxiv.org/abs/1707.07012>\n  * NesT - <https://arxiv.org/abs/2105.12723>\n  * Next-ViT - <https://arxiv.org/abs/2207.05501>\n  * NFNet-F - <https://arxiv.org/abs/2102.06171>\n  * NF-RegNet / NF-ResNet - <https://arxiv.org/abs/2101.08692>\n  * PNasNet - <https://arxiv.org/abs/1712.00559>\n  * PoolFormer (MetaFormer) - <https://arxiv.org/abs/2111.11418>\n  * Pooling-based Vision Transformer (PiT) - <https://arxiv.org/abs/2103.16302>\n  * PVT-V2 (Improved Pyramid Vision Transformer) - <https://arxiv.org/abs/2106.13797>\n  * RDNet (DenseNets Reloaded) - <https://arxiv.org/abs/2403.19588>\n  * RegNet - <https://arxiv.org/abs/2003.13678>\n  * RegNetZ - <https://arxiv.org/abs/2103.06877>\n  * RepVGG - <https://arxiv.org/abs/2101.03697>\n  * RepGhostNet - <https://arxiv.org/abs/2211.06088>\n  * RepViT - <https://arxiv.org/abs/2307.09283>\n  * ResMLP - <https://arxiv.org/abs/2105.03404>\n  * ResNet/ResNeXt \n    * ResNet (v1b/v1.5) - <https://arxiv.org/abs/1512.03385>\n    * ResNeXt - <https://arxiv.org/abs/1611.05431>\n    * 'Bag of Tricks' / Gluon C, D, E, S variations - <https://arxiv.org/abs/1812.01187>\n    * Weakly-supervised (WSL) Instagram pretrained / ImageNet tuned ResNeXt101 - <https://arxiv.org/abs/1805.00932>\n    * Semi-supervised (SSL) / Semi-weakly Supervised (SWSL) ResNet/ResNeXts - <https://arxiv.org/abs/1905.00546>\n    * ECA-Net (ECAResNet) - <https://arxiv.org/abs/1910.03151v4>\n    * Squeeze-and-Excitation Networks (SEResNet) - <https://arxiv.org/abs/1709.01507>\n    * ResNet-RS - <https://arxiv.org/abs/2103.07579>\n  * Res2Net - <https://arxiv.org/abs/1904.01169>\n  * ResNeSt - <https://arxiv.org/abs/2004.08955>\n  * ReXNet - <https://arxiv.org/abs/2007.00992>\n  * SelecSLS - <https://arxiv.org/abs/1907.00837>\n  * Selective Kernel Networks - <https://arxiv.org/abs/1903.06586>\n  * Sequencer2D - <https://arxiv.org/abs/2205.01972>\n  * Swin S3 (AutoFormerV2) - <https://arxiv.org/abs/2111.14725>\n  * Swin Transformer - <https://arxiv.org/abs/2103.14030>\n  * Swin Transformer V2 - <https://arxiv.org/abs/2111.09883>\n  * Transformer-iN-Transformer (TNT) - <https://arxiv.org/abs/2103.00112>\n  * TResNet - <https://arxiv.org/abs/2003.13630>\n  * Twins (Spatial Attention in Vision Transformers) - <https://arxiv.org/pdf/2104.13840.pdf>\n  * Visformer - <https://arxiv.org/abs/2104.12533>\n  * Vision Transformer - <https://arxiv.org/abs/2010.11929>\n  * ViTamin - <https://arxiv.org/abs/2404.02132>\n  * VOLO (Vision Outlooker) - <https://arxiv.org/abs/2106.13112>\n  * VovNet V2 and V1 - <https://arxiv.org/abs/1911.06667>\n  * Xception - <https://arxiv.org/abs/1610.02357>\n  * Xception (Modified Aligned, Gluon) - <https://arxiv.org/abs/1802.02611>\n  * Xception (Modified Aligned, TF) - <https://arxiv.org/abs/1802.02611>\n  * XCiT (Cross-Covariance Image Transformers) - <https://arxiv.org/abs/2106.09681>\n\n\n\n### Optimizers\n\n[](#optimizers)\n\nTo see full list of optimizers w/ descriptions: `timm.optim.list_optimizers(with_description=True)`\n\nIncluded optimizers available via `timm.optim.create_optimizer_v2` factory method:\n\n  * `adabelief` an implementation of AdaBelief adapted from <https://github.com/juntang-zhuang/Adabelief-Optimizer> - <https://arxiv.org/abs/2010.07468>\n  * `adafactor` adapted from [FAIRSeq impl](https://github.com/pytorch/fairseq/blob/master/fairseq/optim/adafactor.py) - <https://arxiv.org/abs/1804.04235>\n  * `adafactorbv` adapted from [Big Vision](https://github.com/google-research/big_vision/blob/main/big_vision/optax.py) - <https://arxiv.org/abs/2106.04560>\n  * `adahessian` by [David Samuel](https://github.com/davda54/ada-hessian) - <https://arxiv.org/abs/2006.00719>\n  * `adamp` and `sgdp` by [Naver ClovAI](https://github.com/clovaai) - <https://arxiv.org/abs/2006.08217>\n  * `adan` an implementation of Adan adapted from <https://github.com/sail-sg/Adan> - <https://arxiv.org/abs/2208.06677>\n  * `adopt` ADOPT adapted from <https://github.com/iShohei220/adopt> - <https://arxiv.org/abs/2411.02853>\n  * `lamb` an implementation of Lamb and LambC (w/ trust-clipping) cleaned up and modified to support use with XLA - <https://arxiv.org/abs/1904.00962>\n  * `laprop` optimizer from <https://github.com/Z-T-WANG/LaProp-Optimizer> - <https://arxiv.org/abs/2002.04839>\n  * `lars` an implementation of LARS and LARC (w/ trust-clipping) - <https://arxiv.org/abs/1708.03888>\n  * `lion` and implementation of Lion adapted from <https://github.com/google/automl/tree/master/lion> - <https://arxiv.org/abs/2302.06675>\n  * `lookahead` adapted from impl by [Liam](https://github.com/alphadl/lookahead.pytorch) - <https://arxiv.org/abs/1907.08610>\n  * `madgrad` an implementation of MADGRAD adapted from <https://github.com/facebookresearch/madgrad> - <https://arxiv.org/abs/2101.11075>\n  * `mars` MARS optimizer from <https://github.com/AGI-Arena/MARS> - <https://arxiv.org/abs/2411.10438>\n  * `nadam` an implementation of Adam w/ Nesterov momentum\n  * `nadamw` an implementation of AdamW (Adam w/ decoupled weight-decay) w/ Nesterov momentum. A simplified impl based on <https://github.com/mlcommons/algorithmic-efficiency>\n  * `novograd` by [Masashi Kimura](https://github.com/convergence-lab/novograd) - <https://arxiv.org/abs/1905.11286>\n  * `radam` by [Liyuan Liu](https://github.com/LiyuanLucasLiu/RAdam) - <https://arxiv.org/abs/1908.03265>\n  * `rmsprop_tf` adapted from PyTorch RMSProp by myself. Reproduces much improved Tensorflow RMSProp behaviour\n  * `sgdw` and implementation of SGD w/ decoupled weight-decay\n  * `fused<name>` optimizers by name with [NVIDIA Apex](https://github.com/NVIDIA/apex/tree/master/apex/optimizers) installed\n  * `bnb<name>` optimizers by name with [BitsAndBytes](https://github.com/TimDettmers/bitsandbytes) installed\n  * `cadamw`, `clion`, and more 'Cautious' optimizers from <https://github.com/kyleliang919/C-Optim> - <https://arxiv.org/abs/2411.16085>\n  * `adam`, `adamw`, `rmsprop`, `adadelta`, `adagrad`, and `sgd` pass through to `torch.optim` implementations\n\n\n\n### Augmentations\n\n[](#augmentations)\n\n  * Random Erasing from [Zhun Zhong](https://github.com/zhunzhong07/Random-Erasing/blob/master/transforms.py) - <https://arxiv.org/abs/1708.04896>)\n  * Mixup - <https://arxiv.org/abs/1710.09412>\n  * CutMix - <https://arxiv.org/abs/1905.04899>\n  * AutoAugment (<https://arxiv.org/abs/1805.09501>) and RandAugment (<https://arxiv.org/abs/1909.13719>) ImageNet configurations modeled after impl for EfficientNet training (<https://github.com/tensorflow/tpu/blob/master/models/official/efficientnet/autoaugment.py>)\n  * AugMix w/ JSD loss, JSD w/ clean + augmented mixing support works with AutoAugment and RandAugment as well - <https://arxiv.org/abs/1912.02781>\n  * SplitBachNorm - allows splitting batch norm layers between clean and augmented (auxiliary batch norm) data\n\n\n\n### Regularization\n\n[](#regularization)\n\n  * DropPath aka \"Stochastic Depth\" - <https://arxiv.org/abs/1603.09382>\n  * DropBlock - <https://arxiv.org/abs/1810.12890>\n  * Blur Pooling - <https://arxiv.org/abs/1904.11486>\n\n\n\n### Other\n\n[](#other)\n\nSeveral (less common) features that I often utilize in my projects are included. Many of their additions are the reason why I maintain my own set of models, instead of using others' via PIP:\n\n  * All models have a common default configuration interface and API for \n    * accessing/changing the classifier - `get_classifier` and `reset_classifier`\n    * doing a forward pass on just the features - `forward_features` (see [documentation](https://huggingface.co/docs/timm/feature_extraction))\n    * these makes it easy to write consistent network wrappers that work with any of the models\n  * All models support multi-scale feature map extraction (feature pyramids) via create_model (see [documentation](https://huggingface.co/docs/timm/feature_extraction)) \n    * `create_model(name, features_only=True, out_indices=..., output_stride=...)`\n    * `out_indices` creation arg specifies which feature maps to return, these indices are 0 based and generally correspond to the `C(i + 1)` feature level.\n    * `output_stride` creation arg controls output stride of the network by using dilated convolutions. Most networks are stride 32 by default. Not all networks support this.\n    * feature map channel counts, reduction level (stride) can be queried AFTER model creation via the `.feature_info` member\n  * All models have a consistent pretrained weight loader that adapts last linear if necessary, and from 3 to 1 channel input if desired\n  * High performance [reference training, validation, and inference scripts](https://huggingface.co/docs/timm/training_script) that work in several process/GPU modes: \n    * NVIDIA DDP w/ a single GPU per process, multiple processes with APEX present (AMP mixed-precision optional)\n    * PyTorch DistributedDataParallel w/ multi-gpu, single process (AMP disabled as it crashes when enabled)\n    * PyTorch w/ single GPU single process (AMP optional)\n  * A dynamic global pool implementation that allows selecting from average pooling, max pooling, average + max, or concat([average, max]) at model creation. All global pooling is adaptive average by default and compatible with pretrained weights.\n  * A 'Test Time Pool' wrapper that can wrap any of the included models and usually provides improved performance doing inference with input images larger than the training size. Idea adapted from original DPN implementation when I ported (<https://github.com/cypw/DPNs>)\n  * Learning rate schedulers \n    * Ideas adopted from \n      * [AllenNLP schedulers](https://github.com/allenai/allennlp/tree/master/allennlp/training/learning_rate_schedulers)\n      * [FAIRseq lr_scheduler](https://github.com/pytorch/fairseq/tree/master/fairseq/optim/lr_scheduler)\n      * SGDR: Stochastic Gradient Descent with Warm Restarts (<https://arxiv.org/abs/1608.03983>)\n    * Schedulers include `step`, `cosine` w/ restarts, `tanh` w/ restarts, `plateau`\n  * Space-to-Depth by [mrT23](https://github.com/mrT23/TResNet/blob/master/src/models/tresnet/layers/space_to_depth.py) (<https://arxiv.org/abs/1801.04590>) -- original paper?\n  * Adaptive Gradient Clipping (<https://arxiv.org/abs/2102.06171>, <https://github.com/deepmind/deepmind-research/tree/master/nfnets>)\n  * An extensive selection of channel and/or spatial attention modules: \n    * Bottleneck Transformer - <https://arxiv.org/abs/2101.11605>\n    * CBAM - <https://arxiv.org/abs/1807.06521>\n    * Effective Squeeze-Excitation (ESE) - <https://arxiv.org/abs/1911.06667>\n    * Efficient Channel Attention (ECA) - <https://arxiv.org/abs/1910.03151>\n    * Gather-Excite (GE) - <https://arxiv.org/abs/1810.12348>\n    * Global Context (GC) - <https://arxiv.org/abs/1904.11492>\n    * Halo - <https://arxiv.org/abs/2103.12731>\n    * Involution - <https://arxiv.org/abs/2103.06255>\n    * Lambda Layer - <https://arxiv.org/abs/2102.08602>\n    * Non-Local (NL) - <https://arxiv.org/abs/1711.07971>\n    * Squeeze-and-Excitation (SE) - <https://arxiv.org/abs/1709.01507>\n    * Selective Kernel (SK) - (<https://arxiv.org/abs/1903.06586>\n    * Split (SPLAT) - <https://arxiv.org/abs/2004.08955>\n    * Shifted Window (SWIN) - <https://arxiv.org/abs/2103.14030>\n\n\n\n## Results\n\n[](#results)\n\nModel validation results can be found in the [results tables](/huggingface/pytorch-image-models/blob/main/results/README.md)\n\n## Getting Started (Documentation)\n\n[](#getting-started-documentation)\n\nThe official documentation can be found at <https://huggingface.co/docs/hub/timm>. Documentation contributions are welcome.\n\n[Getting Started with PyTorch Image Models (timm): A Practitioner’s Guide](https://towardsdatascience.com/getting-started-with-pytorch-image-models-timm-a-practitioners-guide-4e77b4bf9055) by [Chris Hughes](https://github.com/Chris-hughes10) is an extensive blog post covering many aspects of `timm` in detail.\n\n[timmdocs](http://timm.fast.ai/) is an alternate set of documentation for `timm`. A big thanks to [Aman Arora](https://github.com/amaarora) for his efforts creating timmdocs.\n\n[paperswithcode](https://paperswithcode.com/lib/timm) is a good resource for browsing the models within `timm`.\n\n## Train, Validation, Inference Scripts\n\n[](#train-validation-inference-scripts)\n\nThe root folder of the repository contains reference train, validation, and inference scripts that work with the included models and other features of this repository. They are adaptable for other datasets and use cases with a little hacking. See [documentation](https://huggingface.co/docs/timm/training_script).\n\n## Awesome PyTorch Resources\n\n[](#awesome-pytorch-resources)\n\nOne of the greatest assets of PyTorch is the community and their contributions. A few of my favourite resources that pair well with the models and components here are listed below.\n\n### Object Detection, Instance and Semantic Segmentation\n\n[](#object-detection-instance-and-semantic-segmentation)\n\n  * Detectron2 - <https://github.com/facebookresearch/detectron2>\n  * Segmentation Models (Semantic) - <https://github.com/qubvel/segmentation_models.pytorch>\n  * EfficientDet (Obj Det, Semantic soon) - <https://github.com/rwightman/efficientdet-pytorch>\n\n\n\n### Computer Vision / Image Augmentation\n\n[](#computer-vision--image-augmentation)\n\n  * Albumentations - <https://github.com/albumentations-team/albumentations>\n  * Kornia - <https://github.com/kornia/kornia>\n\n\n\n### Knowledge Distillation\n\n[](#knowledge-distillation)\n\n  * RepDistiller - <https://github.com/HobbitLong/RepDistiller>\n  * torchdistill - <https://github.com/yoshitomo-matsubara/torchdistill>\n\n\n\n### Metric Learning\n\n[](#metric-learning)\n\n  * PyTorch Metric Learning - <https://github.com/KevinMusgrave/pytorch-metric-learning>\n\n\n\n### Training / Frameworks\n\n[](#training--frameworks)\n\n  * fastai - <https://github.com/fastai/fastai>\n\n\n\n## Licenses\n\n[](#licenses)\n\n### Code\n\n[](#code)\n\nThe code here is licensed Apache 2.0. I've taken care to make sure any third party code included or adapted has compatible (permissive) licenses such as MIT, BSD, etc. I've made an effort to avoid any GPL / LGPL conflicts. That said, it is your responsibility to ensure you comply with licenses here and conditions of any dependent licenses. Where applicable, I've linked the sources/references for various components in docstrings. If you think I've missed anything please create an issue.\n\n### Pretrained Weights\n\n[](#pretrained-weights)\n\nSo far all of the pretrained weights available here are pretrained on ImageNet with a select few that have some additional pretraining (see extra note below). ImageNet was released for non-commercial research purposes only (<https://image-net.org/download>). It's not clear what the implications of that are for the use of pretrained weights from that dataset. Any models I have trained with ImageNet are done for research purposes and one should assume that the original dataset license applies to the weights. It's best to seek legal advice if you intend to use the pretrained weights in a commercial product.\n\n#### Pretrained on more than ImageNet\n\n[](#pretrained-on-more-than-imagenet)\n\nSeveral weights included or references here were pretrained with proprietary datasets that I do not have access to. These include the Facebook WSL, SSL, SWSL ResNe(Xt) and the Google Noisy Student EfficientNet models. The Facebook models have an explicit non-commercial license (CC-BY-NC 4.0, <https://github.com/facebookresearch/semi-supervised-ImageNet1K-models>, <https://github.com/facebookresearch/WSL-Images>). The Google models do not appear to have any restriction beyond the Apache 2.0 license (and ImageNet concerns). In either case, you should contact Facebook or Google with any questions.\n\n## Citing\n\n[](#citing)\n\n### BibTeX\n\n[](#bibtex)\n\n```\n@misc{rw2019timm, author = {Ross Wightman}, title = {PyTorch Image Models}, year = {2019}, publisher = {GitHub}, journal = {GitHub repository}, doi = {10.5281/zenodo.4414861}, howpublished = {\\url{https://github.com/rwightman/pytorch-image-models}} }\n```\n\n### Latest DOI\n\n[](#latest-doi)\n\n[![DOI](https://camo.githubusercontent.com/44a3c3253479a300f0d439d549c186278c8bc037ef9ac494c2cb16a8379fb648/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3136383739393532362e737667)](https://zenodo.org/badge/latestdoi/168799526)\n\n## About\n\nThe largest collection of PyTorch image encoders / backbones. Including train, eval, inference, export scripts, and pretrained weights -- ResNet, ResNeXT, EfficientNet, NFNet, Vision Transformer (ViT), MobileNetV4, MobileNet-V3 & V2, RegNet, DPN, CSPNet, Swin Transformer, MaxViT, CoAtNet, ConvNeXt, and more \n\n[huggingface.co/docs/timm](https://huggingface.co/docs/timm \"https://huggingface.co/docs/timm\")\n\n### Topics\n\n[ pytorch ](/topics/pytorch \"Topic: pytorch\") [ imagenet ](/topics/imagenet \"Topic: imagenet\") [ image-classification ](/topics/image-classification \"Topic: image-classification\") [ resnet ](/topics/resnet \"Topic: resnet\") [ pretrained-models ](/topics/pretrained-models \"Topic: pretrained-models\") [ mixnet ](/topics/mixnet \"Topic: mixnet\") [ pretrained-weights ](/topics/pretrained-weights \"Topic: pretrained-weights\") [ distributed-training ](/topics/distributed-training \"Topic: distributed-training\") [ dual-path-networks ](/topics/dual-path-networks \"Topic: dual-path-networks\") [ mobilenet-v2 ](/topics/mobilenet-v2 \"Topic: mobilenet-v2\") [ mobile-deep-learning ](/topics/mobile-deep-learning \"Topic: mobile-deep-learning\") [ mobilenetv3 ](/topics/mobilenetv3 \"Topic: mobilenetv3\") [ efficientnet ](/topics/efficientnet \"Topic: efficientnet\") [ augmix ](/topics/augmix \"Topic: augmix\") [ randaugment ](/topics/randaugment \"Topic: randaugment\") [ nfnets ](/topics/nfnets \"Topic: nfnets\") [ normalization-free-training ](/topics/normalization-free-training \"Topic: normalization-free-training\") [ vision-transformer-models ](/topics/vision-transformer-models \"Topic: vision-transformer-models\") [ convnext ](/topics/convnext \"Topic: convnext\") [ maxvit ](/topics/maxvit \"Topic: maxvit\")\n\n### Resources\n\n[ Readme ](#readme-ov-file)\n\n### License\n\n[ Apache-2.0 license ](#Apache-2.0-1-ov-file)\n\n### Code of conduct\n\n[ Code of conduct ](#coc-ov-file)\n\n### Citation\n\nCite this repository \n\nLoading\n\nSomething went wrong. \n\n[ Activity](/huggingface/pytorch-image-models/activity)\n\n[ Custom properties](/huggingface/pytorch-image-models/custom-properties)\n\n### Stars\n\n[ **33k** stars](/huggingface/pytorch-image-models/stargazers)\n\n### Watchers\n\n[ **317** watching](/huggingface/pytorch-image-models/watchers)\n\n### Forks\n\n[ **4.8k** forks](/huggingface/pytorch-image-models/forks)\n\n[ Report repository ](/contact/report-content?content_url=https%3A%2F%2Fgithub.com%2Fhuggingface%2Fpytorch-image-models&report=huggingface+%28user%29)\n\n##  [Releases 64](/huggingface/pytorch-image-models/releases)\n\n[ Release v1.0.14 Latest  Jan 19, 2025 ](/huggingface/pytorch-image-models/releases/tag/v1.0.14)\n\n[+ 63 releases](/huggingface/pytorch-image-models/releases)\n\n## Sponsor this project\n\n##  [Packages 0](/orgs/huggingface/packages?repo_name=pytorch-image-models)\n\nNo packages published \n\n##  [Used by 44.5k](/huggingface/pytorch-image-models/network/dependents)\n\n[\n\n  * ![@Kotomiya07](https://avatars.githubusercontent.com/u/115519148?s=64&v=4)\n  * ![@JeMing-creater](https://avatars.githubusercontent.com/u/86392508?s=64&v=4)\n  * ![@muzhancun](https://avatars.githubusercontent.com/u/91790440?s=64&v=4)\n  * ![@nyunAI](https://avatars.githubusercontent.com/u/135611296?s=64&v=4)\n  * ![@taufikfathonii](https://avatars.githubusercontent.com/u/194881936?s=64&v=4)\n  * ![@morfant](https://avatars.githubusercontent.com/u/959234?s=64&v=4)\n  * ![@BootCamp-Team2](https://avatars.githubusercontent.com/u/193212693?s=64&v=4)\n  * ![@ngminteck](https://avatars.githubusercontent.com/u/36160697?s=64&v=4)\n\n+ 44,483  ](/huggingface/pytorch-image-models/network/dependents)\n\n##  [Contributors 147](/huggingface/pytorch-image-models/graphs/contributors)\n\n  * [ ![@rwightman](https://avatars.githubusercontent.com/u/5702664?s=64&v=4) ](https://github.com/rwightman)\n  * [ ![@nateraw](https://avatars.githubusercontent.com/u/32437151?s=64&v=4) ](https://github.com/nateraw)\n  * [ ![@alexander-soare](https://avatars.githubusercontent.com/u/16543381?s=64&v=4) ](https://github.com/alexander-soare)\n  * [ ![@amaarora](https://avatars.githubusercontent.com/u/41290559?s=64&v=4) ](https://github.com/amaarora)\n  * [ ![@seefun](https://avatars.githubusercontent.com/u/19152032?s=64&v=4) ](https://github.com/seefun)\n  * [ ![@ChristophReich1996](https://avatars.githubusercontent.com/u/34400551?s=64&v=4) ](https://github.com/ChristophReich1996)\n  * [ ![@chris-ha458](https://avatars.githubusercontent.com/u/15088501?s=64&v=4) ](https://github.com/chris-ha458)\n  * [ ![@fffffgggg54](https://avatars.githubusercontent.com/u/13189380?s=64&v=4) ](https://github.com/fffffgggg54)\n  * [ ![@JosuaRieder](https://avatars.githubusercontent.com/u/114307199?s=64&v=4) ](https://github.com/JosuaRieder)\n  * [ ![@mrT23](https://avatars.githubusercontent.com/u/21198860?s=64&v=4) ](https://github.com/mrT23)\n  * [ ![@kaczmarj](https://avatars.githubusercontent.com/u/17690870?s=64&v=4) ](https://github.com/kaczmarj)\n  * [ ![@kozistr](https://avatars.githubusercontent.com/u/15344796?s=64&v=4) ](https://github.com/kozistr)\n  * [ ![@contrastive](https://avatars.githubusercontent.com/u/20089016?s=64&v=4) ](https://github.com/contrastive)\n  * [ ![@morizin](https://avatars.githubusercontent.com/u/50985248?s=64&v=4) ](https://github.com/morizin)\n\n\n\n[+ 133 contributors](/huggingface/pytorch-image-models/graphs/contributors)\n\n## Languages\n\n  * [ Python 84.4% ](/huggingface/pytorch-image-models/search?l=python)\n  * [ MDX 15.6% ](/huggingface/pytorch-image-models/search?l=mdx)\n\n\n\n## Footer\n\n[ ](https://github.com \"GitHub\") © 2025 GitHub, Inc. \n\n### Footer navigation\n\n  * [Terms](https://docs.github.com/site-policy/github-terms/github-terms-of-service)\n  * [Privacy](https://docs.github.com/site-policy/privacy-policies/github-privacy-statement)\n  * [Security](https://github.com/security)\n  * [Status](https://www.githubstatus.com/)\n  * [Docs](https://docs.github.com/)\n  * [Contact](https://support.github.com?tags=dotcom-footer)\n  * Manage cookies \n  * Do not share my personal information \n\n\n\nYou can’t perform that action at this time. \n",
    "content_quality_score": 0.1,
    "summary": null,
    "child_urls": [
        "https://github.com/huggingface/pytorch-image-models/#start-of-content",
        "https://github.com/",
        "https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Fhuggingface%2Fpytorch-image-models%2F",
        "https://github.com/features/copilot",
        "https://github.com/features/security",
        "https://github.com/features/actions",
        "https://github.com/features/codespaces",
        "https://github.com/features/issues",
        "https://github.com/features/code-review",
        "https://github.com/features/discussions",
        "https://github.com/features/code-search",
        "https://github.com/features",
        "https://docs.github.com",
        "https://skills.github.com",
        "https://github.com/enterprise",
        "https://github.com/team",
        "https://github.com/enterprise/startups",
        "https://github.com/solutions/industry/nonprofits",
        "https://github.com/solutions/use-case/devsecops",
        "https://github.com/solutions/use-case/devops",
        "https://github.com/solutions/use-case/ci-cd",
        "https://github.com/solutions/use-case",
        "https://github.com/solutions/industry/healthcare",
        "https://github.com/solutions/industry/financial-services",
        "https://github.com/solutions/industry/manufacturing",
        "https://github.com/solutions/industry/government",
        "https://github.com/solutions/industry",
        "https://github.com/solutions",
        "https://github.com/resources/articles/ai",
        "https://github.com/resources/articles/devops",
        "https://github.com/resources/articles/security",
        "https://github.com/resources/articles/software-development",
        "https://github.com/resources/articles",
        "https://resources.github.com/learn/pathways",
        "https://resources.github.com",
        "https://github.com/customer-stories",
        "https://partner.github.com",
        "https://github.com/solutions/executive-insights",
        "https://github.com/sponsors",
        "https://github.com/readme",
        "https://github.com/topics",
        "https://github.com/trending",
        "https://github.com/collections",
        "https://github.com/enterprise/advanced-security",
        "https://github.com/features/copilot#enterprise",
        "https://github.com/premium-support",
        "https://github.com/pricing",
        "https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax",
        "https://github.com/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&source=header-repo&source_repo=huggingface%2Fpytorch-image-models",
        "https://github.com/huggingface",
        "https://github.com/huggingface/pytorch-image-models",
        "https://github.com/sponsors/huggingface",
        "https://github.com/login?return_to=%2Fhuggingface%2Fpytorch-image-models",
        "https://github.com/huggingface/pytorch-image-models/blob/main/LICENSE",
        "https://github.com/huggingface/pytorch-image-models/stargazers",
        "https://github.com/huggingface/pytorch-image-models/forks",
        "https://github.com/huggingface/pytorch-image-models/branches",
        "https://github.com/huggingface/pytorch-image-models/tags",
        "https://github.com/huggingface/pytorch-image-models/activity",
        "https://github.com/huggingface/pytorch-image-models/issues",
        "https://github.com/huggingface/pytorch-image-models/pulls",
        "https://github.com/huggingface/pytorch-image-models/discussions",
        "https://github.com/huggingface/pytorch-image-models/actions",
        "https://github.com/huggingface/pytorch-image-models/projects",
        "https://github.com/huggingface/pytorch-image-models/security",
        "https://github.com/huggingface/pytorch-image-models/pulse",
        "https://github.com/huggingface/pytorch-image-models/commits?author=brianhou0208",
        "https://github.com/huggingface/pytorch-image-models/commits?author=rwightman",
        "https://github.com/huggingface/pytorch-image-models/commit/bda46f8e6f4bd6463317b6402b8d63c107ceb09a",
        "https://github.com/huggingface/pytorch-image-models/commits/main/",
        "https://github.com/huggingface/pytorch-image-models/tree/main/.github",
        "https://github.com/huggingface/pytorch-image-models/commit/1a2d8bb5a082e63bd08ea7ed45670f7f46b190f6",
        "https://github.com/huggingface/pytorch-image-models/tree/main/convert",
        "https://github.com/huggingface/pytorch-image-models/commit/81cd6863c8c9515de8884e8a8ea0445ec08b4486",
        "https://github.com/huggingface/pytorch-image-models/tree/main/hfdocs",
        "https://github.com/huggingface/pytorch-image-models/commit/5d535d7a2d4b435b1b5c1177fd8f04a12b942b9a",
        "https://github.com/huggingface/pytorch-image-models/tree/main/results",
        "https://github.com/huggingface/pytorch-image-models/commit/ee5b1e8217134e9f016a0086b793c34abb721216",
        "https://github.com/huggingface/pytorch-image-models/tree/main/tests",
        "https://github.com/huggingface/pytorch-image-models/tree/main/timm",
        "https://github.com/huggingface/pytorch-image-models/commit/17eabaad174db0a3d509aff06b175c302db3967d",
        "https://github.com/huggingface/pytorch-image-models/blob/main/.gitattributes",
        "https://github.com/huggingface/pytorch-image-models/commit/f632190fd902e23a06df17cc1da09b15fa3a515e",
        "https://github.com/huggingface/pytorch-image-models/blob/main/.gitignore",
        "https://github.com/huggingface/pytorch-image-models/commit/9a51e4ea2ef2c770085e75ddcef17f957068e0f1",
        "https://github.com/huggingface/pytorch-image-models/blob/main/CITATION.cff",
        "https://github.com/huggingface/pytorch-image-models/commit/165c3dea988f0e88feb82164b9e4de017cddc0bc",
        "https://github.com/huggingface/pytorch-image-models/blob/main/CODE_OF_CONDUCT.md",
        "https://github.com/huggingface/pytorch-image-models/commit/facae65947fb3761246820f3666dd34bf37d5a75",
        "https://github.com/huggingface/pytorch-image-models/blob/main/CONTRIBUTING.md",
        "https://github.com/huggingface/pytorch-image-models/commit/8d81fdf3d9cedfaef12f51f52f20ac0d12cb5276",
        "https://github.com/huggingface/pytorch-image-models/commit/48ab3cf0700d015a806572af846e36b70d2d3f03",
        "https://github.com/huggingface/pytorch-image-models/blob/main/MANIFEST.in",
        "https://github.com/huggingface/pytorch-image-models/commit/0f2803de7a029aab8858afbb1fafa72da62a1fbb",
        "https://github.com/huggingface/pytorch-image-models/blob/main/README.md",
        "https://github.com/huggingface/pytorch-image-models/blob/main/UPGRADING.md",
        "https://github.com/huggingface/pytorch-image-models/commit/1245b8392404d1806d82a39c23d11472be831d89",
        "https://github.com/huggingface/pytorch-image-models/blob/main/avg_checkpoints.py",
        "https://github.com/huggingface/pytorch-image-models/commit/d0b45c9b4d6c38e5c93ede6e9b8fc676bcb9818e",
        "https://github.com/huggingface/pytorch-image-models/blob/main/benchmark.py",
        "https://github.com/huggingface/pytorch-image-models/commit/634b68ae503e5631f0638451a5bcc393005b77e7",
        "https://github.com/huggingface/pytorch-image-models/blob/main/bulk_runner.py",
        "https://github.com/huggingface/pytorch-image-models/commit/7e5477acf5a58a9a74c73d0ee7528ef7ce1da766",
        "https://github.com/huggingface/pytorch-image-models/blob/main/clean_checkpoint.py",
        "https://github.com/huggingface/pytorch-image-models/blob/main/distributed_train.sh",
        "https://github.com/huggingface/pytorch-image-models/commit/56b90317cd9db1038b42ebdfc5bd81b1a2275cc1",
        "https://github.com/huggingface/pytorch-image-models/blob/main/hubconf.py",
        "https://github.com/huggingface/pytorch-image-models/commit/927f031293a30afb940fff0bee34b85d9c059b0e",
        "https://github.com/huggingface/pytorch-image-models/blob/main/inference.py",
        "https://github.com/huggingface/pytorch-image-models/blob/main/onnx_export.py",
        "https://github.com/huggingface/pytorch-image-models/commit/ba641e07aeecbe4478be7678c589b314fe777611",
        "https://github.com/huggingface/pytorch-image-models/blob/main/onnx_validate.py",
        "https://github.com/huggingface/pytorch-image-models/commit/aef6e562e443876654ba6340d8f2b43594ce3c42",
        "https://github.com/huggingface/pytorch-image-models/blob/main/pyproject.toml",
        "https://github.com/huggingface/pytorch-image-models/commit/de15b8b828abe1c924a693ac3d750efe85545019",
        "https://github.com/huggingface/pytorch-image-models/blob/main/requirements-dev.txt",
        "https://github.com/huggingface/pytorch-image-models/commit/10627bbd49b5a90e07d39a3404ad3c8569105825",
        "https://github.com/huggingface/pytorch-image-models/pull/1691",
        "https://github.com/huggingface/pytorch-image-models/blob/main/requirements.txt",
        "https://github.com/huggingface/pytorch-image-models/commit/c6b74eb5bd7ad7e96addeb9bf9bdfc34d088f1ac",
        "https://github.com/huggingface/pytorch-image-models/blob/main/setup.cfg",
        "https://github.com/huggingface/pytorch-image-models/commit/01616aa314272768cdab317fb2d2fee5eb4beaab",
        "https://github.com/huggingface/pytorch-image-models/blob/main/train.py",
        "https://github.com/huggingface/pytorch-image-models/commit/cb4cea561a3f39bcd6a3105c72d7e0b2b928bf44",
        "https://github.com/huggingface/pytorch-image-models/blob/main/validate.py",
        "https://github.com/huggingface/pytorch-image-models/",
        "https://github.com/huggingface/pytorch-image-models/#pytorch-image-models",
        "https://github.com/huggingface/pytorch-image-models/#whats-new",
        "https://github.com/huggingface/pytorch-image-models/#introduction",
        "https://github.com/huggingface/pytorch-image-models/#models",
        "https://github.com/huggingface/pytorch-image-models/#features",
        "https://github.com/huggingface/pytorch-image-models/#results",
        "https://github.com/huggingface/pytorch-image-models/#getting-started-documentation",
        "https://github.com/huggingface/pytorch-image-models/#train-validation-inference-scripts",
        "https://github.com/huggingface/pytorch-image-models/#awesome-pytorch-resources",
        "https://github.com/huggingface/pytorch-image-models/#licenses",
        "https://github.com/huggingface/pytorch-image-models/#citing",
        "https://github.com/huggingface/pytorch-image-models/#jan-19-2025",
        "https://github.com/huggingface/pytorch-image-models/#jan-9-2025",
        "https://github.com/caojiaolong",
        "https://github.com/huggingface/pytorch-image-models/#jan-6-2025",
        "https://github.com/huggingface/pytorch-image-models/#dec-31-2024",
        "https://github.com/apple/ml-aim",
        "https://github.com/google-research/big_vision",
        "https://github.com/brianhou0208",
        "https://github.com/huggingface/pytorch-image-models/#nov-28-2024",
        "https://github.com/AGI-Arena/MARS",
        "https://github.com/Z-T-WANG/LaProp-Optimizer",
        "https://github.com/kyleliang919/C-Optim",
        "https://github.com/huggingface/pytorch-image-models/#nov-12-2024",
        "https://github.com/iShohei220/adopt",
        "https://github.com/google-research/big_vision/blob/main/big_vision/optax.py",
        "https://github.com/wojtke",
        "https://github.com/huggingface/pytorch-image-models/#oct-31-2024",
        "https://github.com/huggingface/pytorch-image-models/#oct-19-2024",
        "https://github.com/MengqingCao",
        "https://github.com/huggingface/pytorch-image-models/#oct-16-2024",
        "https://github.com/huggingface/pytorch-image-models/#oct-14-2024",
        "https://github.com/huggingface/pytorch-image-models/#oct-11-2024",
        "https://github.com/yuweihao/MambaOut",
        "https://github.com/huggingface/pytorch-image-models/#sept-2024",
        "https://github.com/huggingface/pytorch-image-models/#aug-21-2024",
        "https://github.com/huggingface/pytorch-image-models/#aug-8-2024",
        "https://github.com/dhkim0225",
        "https://github.com/huggingface/pytorch-image-models/#july-28-2024",
        "https://github.com/huggingface/pytorch-image-models/#july-26-2024",
        "https://github.com/Promisery",
        "https://github.com/huggingface/pytorch-image-models/#june-24-2024",
        "https://github.com/huggingface/pytorch-image-models/#june-12-2024",
        "https://github.com/huggingface/pytorch-image-models/#may-14-2024",
        "https://github.com/facebookresearch/hiera",
        "https://github.com/huggingface/pytorch-image-models/#may-11-2024",
        "https://github.com/huggingface/pytorch-image-models/discussions/1232#discussioncomment-9320949",
        "https://github.com/huggingface/pytorch-image-models/#april-11-2024",
        "https://github.com/gau-nernst",
        "https://github.com/huggingface/pytorch-image-models/#feb-19-2024",
        "https://github.com/bytedance/Next-ViT",
        "https://github.com/PaddlePaddle/PaddleClas",
        "https://github.com/seefun",
        "https://github.com/huggingface/pytorch-image-models/#optimizers",
        "https://github.com/juntang-zhuang/Adabelief-Optimizer",
        "https://github.com/pytorch/fairseq/blob/master/fairseq/optim/adafactor.py",
        "https://github.com/davda54/ada-hessian",
        "https://github.com/clovaai",
        "https://github.com/sail-sg/Adan",
        "https://github.com/google/automl/tree/master/lion",
        "https://github.com/alphadl/lookahead.pytorch",
        "https://github.com/facebookresearch/madgrad",
        "https://github.com/mlcommons/algorithmic-efficiency",
        "https://github.com/convergence-lab/novograd",
        "https://github.com/LiyuanLucasLiu/RAdam",
        "https://github.com/NVIDIA/apex/tree/master/apex/optimizers",
        "https://github.com/TimDettmers/bitsandbytes",
        "https://github.com/huggingface/pytorch-image-models/#augmentations",
        "https://github.com/zhunzhong07/Random-Erasing/blob/master/transforms.py",
        "https://github.com/tensorflow/tpu/blob/master/models/official/efficientnet/autoaugment.py",
        "https://github.com/huggingface/pytorch-image-models/#regularization",
        "https://github.com/huggingface/pytorch-image-models/#other",
        "https://github.com/cypw/DPNs",
        "https://github.com/allenai/allennlp/tree/master/allennlp/training/learning_rate_schedulers",
        "https://github.com/pytorch/fairseq/tree/master/fairseq/optim/lr_scheduler",
        "https://github.com/mrT23/TResNet/blob/master/src/models/tresnet/layers/space_to_depth.py",
        "https://github.com/deepmind/deepmind-research/tree/master/nfnets",
        "https://github.com/huggingface/pytorch-image-models/blob/main/results/README.md",
        "https://github.com/Chris-hughes10",
        "https://github.com/amaarora",
        "https://github.com/huggingface/pytorch-image-models/#object-detection-instance-and-semantic-segmentation",
        "https://github.com/facebookresearch/detectron2",
        "https://github.com/qubvel/segmentation_models.pytorch",
        "https://github.com/rwightman/efficientdet-pytorch",
        "https://github.com/huggingface/pytorch-image-models/#computer-vision--image-augmentation",
        "https://github.com/albumentations-team/albumentations",
        "https://github.com/kornia/kornia",
        "https://github.com/huggingface/pytorch-image-models/#knowledge-distillation",
        "https://github.com/HobbitLong/RepDistiller",
        "https://github.com/yoshitomo-matsubara/torchdistill",
        "https://github.com/huggingface/pytorch-image-models/#metric-learning",
        "https://github.com/KevinMusgrave/pytorch-metric-learning",
        "https://github.com/huggingface/pytorch-image-models/#training--frameworks",
        "https://github.com/fastai/fastai",
        "https://github.com/huggingface/pytorch-image-models/#code",
        "https://github.com/huggingface/pytorch-image-models/#pretrained-weights",
        "https://github.com/huggingface/pytorch-image-models/#pretrained-on-more-than-imagenet",
        "https://github.com/facebookresearch/semi-supervised-ImageNet1K-models",
        "https://github.com/facebookresearch/WSL-Images",
        "https://github.com/huggingface/pytorch-image-models/#bibtex",
        "https://github.com/huggingface/pytorch-image-models/#latest-doi",
        "https://github.com/topics/pytorch",
        "https://github.com/topics/imagenet",
        "https://github.com/topics/image-classification",
        "https://github.com/topics/resnet",
        "https://github.com/topics/pretrained-models",
        "https://github.com/topics/mixnet",
        "https://github.com/topics/pretrained-weights",
        "https://github.com/topics/distributed-training",
        "https://github.com/topics/dual-path-networks",
        "https://github.com/topics/mobilenet-v2",
        "https://github.com/topics/mobile-deep-learning",
        "https://github.com/topics/mobilenetv3",
        "https://github.com/topics/efficientnet",
        "https://github.com/topics/augmix",
        "https://github.com/topics/randaugment",
        "https://github.com/topics/nfnets",
        "https://github.com/topics/normalization-free-training",
        "https://github.com/topics/vision-transformer-models",
        "https://github.com/topics/convnext",
        "https://github.com/topics/maxvit",
        "https://github.com/huggingface/pytorch-image-models/#readme-ov-file",
        "https://github.com/huggingface/pytorch-image-models/#Apache-2.0-1-ov-file",
        "https://github.com/huggingface/pytorch-image-models/#coc-ov-file",
        "https://github.com/huggingface/pytorch-image-models/custom-properties",
        "https://github.com/huggingface/pytorch-image-models/watchers",
        "https://github.com/contact/report-content?content_url=https%3A%2F%2Fgithub.com%2Fhuggingface%2Fpytorch-image-models&report=huggingface+%28user%29",
        "https://github.com/huggingface/pytorch-image-models/releases",
        "https://github.com/huggingface/pytorch-image-models/releases/tag/v1.0.14",
        "https://github.com/orgs/huggingface/packages?repo_name=pytorch-image-models",
        "https://github.com/huggingface/pytorch-image-models/network/dependents",
        "https://github.com/huggingface/pytorch-image-models/graphs/contributors",
        "https://github.com/rwightman",
        "https://github.com/nateraw",
        "https://github.com/alexander-soare",
        "https://github.com/ChristophReich1996",
        "https://github.com/chris-ha458",
        "https://github.com/fffffgggg54",
        "https://github.com/JosuaRieder",
        "https://github.com/mrT23",
        "https://github.com/kaczmarj",
        "https://github.com/kozistr",
        "https://github.com/contrastive",
        "https://github.com/morizin",
        "https://github.com/huggingface/pytorch-image-models/search?l=python",
        "https://github.com/huggingface/pytorch-image-models/search?l=mdx",
        "https://github.com",
        "https://docs.github.com/site-policy/github-terms/github-terms-of-service",
        "https://docs.github.com/site-policy/privacy-policies/github-privacy-statement",
        "https://github.com/security",
        "https://docs.github.com/",
        "https://support.github.com?tags=dotcom-footer",
        "https://github.blog",
        "https://huggingface.co/docs/timm",
        "https://huggingface.co/models?search=convnext_nano%20r384",
        "https://huggingface.co/models?search=timm%20aimv2",
        "https://huggingface.co/models?search=timm%20pali2",
        "https://arxiv.org/abs/2411.10438",
        "https://arxiv.org/abs/2002.04839",
        "https://arxiv.org/abs/2411.16085",
        "https://huggingface.co/timm/mobilenetv4_conv_medium.e250_r384_in12k_ft_in1k",
        "https://huggingface.co/timm/mobilenetv4_conv_medium.e250_r384_in12k",
        "https://huggingface.co/timm/mobilenetv4_conv_medium.e180_ad_r384_in12k",
        "https://huggingface.co/timm/mobilenetv4_conv_medium.e180_r384_in12k",
        "https://huggingface.co/timm/cs3darknet_focus_s.ra4_e3600_r256_in1k",
        "https://huggingface.co/blog/rwightman/resnet-trick-or-treat",
        "https://huggingface.co/OpenGVLab/InternViT-300M-448px",
        "http://huggingface.co/timm/mambaout_base_plus_rw.sw_e150_r384_in12k_ft_in1k",
        "http://huggingface.co/timm/mambaout_base_plus_rw.sw_e150_in12k_ft_in1k",
        "http://huggingface.co/timm/mambaout_base_tall_rw.sw_e500_in1k",
        "http://huggingface.co/timm/mambaout_base_wide_rw.sw_e500_in1k",
        "http://huggingface.co/timm/mambaout_base_short_rw.sw_e500_in1k",
        "http://huggingface.co/timm/mambaout_base.in1k",
        "http://huggingface.co/timm/mambaout_small_rw.sw_e450_in1k",
        "http://huggingface.co/timm/mambaout_small.in1k",
        "http://huggingface.co/timm/mambaout_tiny.in1k",
        "http://huggingface.co/timm/mambaout_kobe.in1k",
        "http://huggingface.co/timm/mambaout_femto.in1k",
        "https://huggingface.co/timm/vit_so400m_patch14_siglip_378.webli_ft_in1k",
        "https://huggingface.co/timm/vit_so400m_patch14_siglip_gap_378.webli_ft_in1k",
        "https://huggingface.co/timm/ViT-SO400M-16-SigLIP-i18n-256",
        "https://huggingface.co/timm/convnext_zepto_rms_ols.ra4_e3600_r224_in1k",
        "https://huggingface.co/timm/convnext_zepto_rms.ra4_e3600_r224_in1k",
        "https://huggingface.co/blog/rwightman/timm-tiny-test",
        "https://huggingface.co/posts/rwightman/793053396198664",
        "http://hf.co/timm/mobilenetv4_conv_small_050.e3000_r224_in1k",
        "http://hf.co/timm/mobilenetv3_large_150d.ra4_e3600_r256_in1k",
        "http://hf.co/timm/mobilenetv3_large_100.ra4_e3600_r224_in1k",
        "https://huggingface.co/timm/vit_mediumd_patch16_reg4_gap_384.sbb2_e200_in12k_ft_in1k",
        "https://huggingface.co/timm/vit_mediumd_patch16_reg4_gap_256.sbb2_e200_in12k_ft_in1k",
        "https://huggingface.co/timm/vit_betwixt_patch16_reg4_gap_384.sbb2_e200_in12k_ft_in1k",
        "https://huggingface.co/timm/vit_betwixt_patch16_reg4_gap_256.sbb2_e200_in12k_ft_in1k",
        "http://hf.co/timm/resnet50d.ra4_e3600_r224_in1k",
        "http://hf.co/timm/efficientnet_b1.ra4_e3600_r240_in1k",
        "http://hf.co/timm/mobilenetv1_125.ra4_e3600_r224_in1k",
        "https://arxiv.org/abs/2403.19588",
        "http://hf.co/timm/mobilenetv4_conv_aa_large.e230_r448_in12k_ft_in1k",
        "http://hf.co/timm/mobilenetv4_conv_aa_large.e230_r384_in12k_ft_in1k",
        "http://hf.co/timm/mobilenetv4_conv_aa_large.e600_r384_in1k",
        "http://hf.co/timm/mobilenetv4_hybrid_medium.e200_r256_in12k_ft_in1k",
        "https://huggingface.co/blog/rwightman/mobilenet-baselines",
        "http://hf.co/timm/efficientnet_b0.ra4_e3600_r224_in1k",
        "http://hf.co/timm/mobilenetv1_100h.ra4_e3600_r224_in1k",
        "http://hf.co/timm/mobilenetv1_100.ra4_e3600_r224_in1k",
        "http://hf.co/timm/mobilenetv4_hybrid_large.ix_e600_r384_in1k",
        "http://hf.co/timm/mobilenetv4_hybrid_medium.ix_e550_r384_in1k",
        "http://hf.co/timm/mobilenetv4_hybrid_medium.ix_e550_r256_in1k",
        "http://hf.co/timm/mobilenetv4_hybrid_large.e600_r384_in1k",
        "http://hf.co/timm/mobilenetv4_conv_large.e600_r384_in1k",
        "http://hf.co/timm/mobilenetv4_conv_large.e500_r256_in1k",
        "http://hf.co/timm/mobilenetv4_hybrid_medium.e500_r224_in1k",
        "http://hf.co/timm/mobilenetv4_conv_medium.e500_r256_in1k",
        "http://hf.co/timm/mobilenetv4_conv_blur_medium.e500_r224_in1k",
        "http://hf.co/timm/mobilenetv4_conv_medium.e500_r224_in1k",
        "http://hf.co/timm/mobilenetv4_conv_small.e2400_r224_in1k",
        "http://hf.co/timm/mobilenetv4_conv_small.e1200_r224_in1k",
        "https://arxiv.org/pdf/2311.17049",
        "https://arxiv.org/abs/2404.02132",
        "https://huggingface.co/timm/vit_mediumd_patch16_reg4_gap_256.sbb_in12k_ft_in1k",
        "https://huggingface.co/timm/vit_betwixt_patch16_reg4_gap_256.sbb_in12k_ft_in1k",
        "https://huggingface.co/timm/vit_mediumd_patch16_rope_reg1_gap_256.sbb_in1k",
        "https://huggingface.co/timm/vit_betwixt_patch16_rope_reg4_gap_256.sbb_in1k",
        "https://huggingface.co/timm/vit_base_patch16_rope_reg1_gap_256.sbb_in1k",
        "https://huggingface.co/timm/vit_medium_patch16_rope_reg1_gap_256.sbb_in1k",
        "https://huggingface.co/timm/vit_betwixt_patch16_reg4_gap_256.sbb_in1k",
        "https://huggingface.co/timm/vit_betwixt_patch16_reg1_gap_256.sbb_in1k",
        "https://huggingface.co/timm/vit_medium_patch16_reg4_gap_256.sbb_in1k",
        "https://huggingface.co/timm/vit_medium_patch16_reg1_gap_256.sbb_in1k",
        "https://huggingface.co/timm/vit_little_patch16_reg4_gap_256.sbb_in1k",
        "https://huggingface.co/timm/vit_wee_patch16_reg1_gap_256.sbb_in1k",
        "https://huggingface.co/timm/vit_pwee_patch16_reg1_gap_256.sbb_in1k",
        "https://huggingface.co/timm/vit_mediumd_patch16_reg4_gap_256.sbb_in12k",
        "https://huggingface.co/timm/vit_betwixt_patch16_reg4_gap_256.sbb_in12k",
        "https://arxiv.org/abs/2105.12723",
        "https://arxiv.org/abs/2106.08254",
        "https://arxiv.org/abs/1912.11370",
        "https://arxiv.org/abs/2101.11605",
        "https://arxiv.org/abs/2103.17239",
        "https://arxiv.org/abs/2104.06399",
        "https://arxiv.org/abs/2106.04803",
        "https://arxiv.org/abs/2201.03545",
        "http://arxiv.org/abs/2301.00808",
        "https://arxiv.org/abs/2103.10697",
        "https://arxiv.org/abs/1911.11929",
        "https://arxiv.org/abs/2012.12877",
        "https://arxiv.org/pdf/2204.07118.pdf",
        "https://arxiv.org/abs/1608.06993",
        "https://arxiv.org/abs/1707.06484",
        "https://arxiv.org/abs/1707.01629",
        "https://arxiv.org/abs/2206.10589",
        "https://arxiv.org/abs/2206.01191",
        "https://arxiv.org/abs/1911.04252",
        "https://arxiv.org/abs/1911.09665",
        "https://arxiv.org/abs/1905.11946",
        "https://ai.googleblog.com/2019/08/efficientnet-edgetpu-creating.html",
        "https://arxiv.org/abs/2104.00298",
        "https://arxiv.org/abs/1812.03443",
        "https://arxiv.org/abs/1907.09595",
        "https://arxiv.org/abs/1807.11626",
        "https://arxiv.org/abs/1801.04381",
        "https://arxiv.org/abs/1904.02877",
        "https://arxiv.org/abs/2010.14819",
        "https://arxiv.org/abs/2205.14756",
        "https://arxiv.org/abs/2305.07027",
        "https://arxiv.org/abs/2211.07636",
        "https://arxiv.org/abs/2303.11331",
        "https://arxiv.org/abs/2303.14189",
        "https://arxiv.org/abs/2212.08013",
        "https://arxiv.org/abs/2203.11926",
        "https://arxiv.org/abs/2206.09959",
        "https://arxiv.org/abs/1911.11907",
        "https://arxiv.org/abs/2211.12905",
        "https://arxiv.org/abs/2105.08050",
        "https://arxiv.org/abs/2006.14090",
        "https://arxiv.org/abs/2103.12731",
        "https://arxiv.org/abs/1908.07919",
        "https://arxiv.org/abs/2303.16900",
        "https://arxiv.org/abs/1512.00567",
        "https://arxiv.org/abs/1602.07261",
        "https://arxiv.org/abs/2102.08602",
        "https://arxiv.org/abs/2104.01136",
        "https://arxiv.org/abs/2405.07992",
        "https://arxiv.org/abs/2204.01697",
        "https://arxiv.org/abs/2210.13452",
        "https://arxiv.org/abs/2105.01601",
        "https://arxiv.org/abs/2311.17049",
        "https://arxiv.org/abs/1905.02244",
        "https://arxiv.org/abs/2006.02049",
        "https://arxiv.org/abs/2102.11646",
        "https://arxiv.org/abs/2109.15099",
        "https://arxiv.org/abs/2404.10518",
        "https://arxiv.org/abs/2206.04040",
        "https://arxiv.org/abs/2110.02178",
        "https://arxiv.org/abs/2206.02680",
        "https://arxiv.org/abs/2112.01526",
        "https://arxiv.org/abs/1707.07012",
        "https://arxiv.org/abs/2207.05501",
        "https://arxiv.org/abs/2102.06171",
        "https://arxiv.org/abs/2101.08692",
        "https://arxiv.org/abs/1712.00559",
        "https://arxiv.org/abs/2111.11418",
        "https://arxiv.org/abs/2103.16302",
        "https://arxiv.org/abs/2106.13797",
        "https://arxiv.org/abs/2003.13678",
        "https://arxiv.org/abs/2103.06877",
        "https://arxiv.org/abs/2101.03697",
        "https://arxiv.org/abs/2211.06088",
        "https://arxiv.org/abs/2307.09283",
        "https://arxiv.org/abs/2105.03404",
        "https://arxiv.org/abs/1512.03385",
        "https://arxiv.org/abs/1611.05431",
        "https://arxiv.org/abs/1812.01187",
        "https://arxiv.org/abs/1805.00932",
        "https://arxiv.org/abs/1905.00546",
        "https://arxiv.org/abs/1910.03151v4",
        "https://arxiv.org/abs/1709.01507",
        "https://arxiv.org/abs/2103.07579",
        "https://arxiv.org/abs/1904.01169",
        "https://arxiv.org/abs/2004.08955",
        "https://arxiv.org/abs/2007.00992",
        "https://arxiv.org/abs/1907.00837",
        "https://arxiv.org/abs/1903.06586",
        "https://arxiv.org/abs/2205.01972",
        "https://arxiv.org/abs/2111.14725",
        "https://arxiv.org/abs/2103.14030",
        "https://arxiv.org/abs/2111.09883",
        "https://arxiv.org/abs/2103.00112",
        "https://arxiv.org/abs/2003.13630",
        "https://arxiv.org/pdf/2104.13840.pdf",
        "https://arxiv.org/abs/2104.12533",
        "https://arxiv.org/abs/2010.11929",
        "https://arxiv.org/abs/2106.13112",
        "https://arxiv.org/abs/1911.06667",
        "https://arxiv.org/abs/1610.02357",
        "https://arxiv.org/abs/1802.02611",
        "https://arxiv.org/abs/2106.09681",
        "https://arxiv.org/abs/2010.07468",
        "https://arxiv.org/abs/1804.04235",
        "https://arxiv.org/abs/2106.04560",
        "https://arxiv.org/abs/2006.00719",
        "https://arxiv.org/abs/2006.08217",
        "https://arxiv.org/abs/2208.06677",
        "https://arxiv.org/abs/2411.02853",
        "https://arxiv.org/abs/1904.00962",
        "https://arxiv.org/abs/1708.03888",
        "https://arxiv.org/abs/2302.06675",
        "https://arxiv.org/abs/1907.08610",
        "https://arxiv.org/abs/2101.11075",
        "https://arxiv.org/abs/1905.11286",
        "https://arxiv.org/abs/1908.03265",
        "https://arxiv.org/abs/1708.04896",
        "https://arxiv.org/abs/1710.09412",
        "https://arxiv.org/abs/1905.04899",
        "https://arxiv.org/abs/1805.09501",
        "https://arxiv.org/abs/1909.13719",
        "https://arxiv.org/abs/1912.02781",
        "https://arxiv.org/abs/1603.09382",
        "https://arxiv.org/abs/1810.12890",
        "https://arxiv.org/abs/1904.11486",
        "https://huggingface.co/docs/timm/feature_extraction",
        "https://huggingface.co/docs/timm/training_script",
        "https://arxiv.org/abs/1608.03983",
        "https://arxiv.org/abs/1801.04590",
        "https://arxiv.org/abs/1807.06521",
        "https://arxiv.org/abs/1910.03151",
        "https://arxiv.org/abs/1810.12348",
        "https://arxiv.org/abs/1904.11492",
        "https://arxiv.org/abs/2103.06255",
        "https://arxiv.org/abs/1711.07971",
        "https://huggingface.co/docs/hub/timm",
        "https://towardsdatascience.com/getting-started-with-pytorch-image-models-timm-a-practitioners-guide-4e77b4bf9055",
        "http://timm.fast.ai/",
        "https://paperswithcode.com/lib/timm",
        "https://image-net.org/download",
        "https://zenodo.org/badge/latestdoi/168799526",
        "https://www.githubstatus.com/"
    ]
}