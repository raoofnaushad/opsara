{
    "id": "ec50e30bed7b958c51ba62a65f10c002",
    "metadata": {
        "id": "ec50e30bed7b958c51ba62a65f10c002",
        "url": "https://github.com/apache/airflow/",
        "title": "GitHub - apache/airflow: Apache Airflow - A platform to programmatically author, schedule, and monitor workflows",
        "properties": {
            "description": "Apache Airflow - A platform to programmatically author, schedule, and monitor workflows - apache/airflow",
            "keywords": null,
            "author": null,
            "og:image": "https://repository-images.githubusercontent.com/33884891/3e449402-c463-46f9-aa6c-26942a9e2bdc",
            "og:image:alt": "Apache Airflow - A platform to programmatically author, schedule, and monitor workflows - apache/airflow",
            "og:site_name": "GitHub",
            "og:type": "object",
            "og:title": "GitHub - apache/airflow: Apache Airflow - A platform to programmatically author, schedule, and monitor workflows",
            "og:url": "https://github.com/apache/airflow",
            "og:description": "Apache Airflow - A platform to programmatically author, schedule, and monitor workflows - apache/airflow",
            "twitter:image": "https://repository-images.githubusercontent.com/33884891/3e449402-c463-46f9-aa6c-26942a9e2bdc",
            "twitter:site": "@github",
            "twitter:card": "summary_large_image",
            "twitter:title": "GitHub - apache/airflow: Apache Airflow - A platform to programmatically author, schedule, and monitor workflows",
            "twitter:description": "Apache Airflow - A platform to programmatically author, schedule, and monitor workflows - apache/airflow"
        }
    },
    "parent_metadata": {
        "id": "1df53ed9d1acac235ecada2dd65f868a",
        "url": "https://www.notion.so/Orchestrators-1df53ed9d1acac235ecada2dd65f868a",
        "title": "Orchestrators",
        "properties": {
            "Type": "Leaf"
        }
    },
    "content": "[Skip to content](#start-of-content)\n\n## Navigation Menu\n\nToggle navigation\n\n[ ](/)\n\n[ Sign in ](/login?return_to=https%3A%2F%2Fgithub.com%2Fapache%2Fairflow%2F)\n\n  * Product \n\n    * [ GitHub Copilot Write better code with AI  ](https://github.com/features/copilot)\n    * [ Security Find and fix vulnerabilities  ](https://github.com/features/security)\n    * [ Actions Automate any workflow  ](https://github.com/features/actions)\n    * [ Codespaces Instant dev environments  ](https://github.com/features/codespaces)\n    * [ Issues Plan and track work  ](https://github.com/features/issues)\n    * [ Code Review Manage code changes  ](https://github.com/features/code-review)\n    * [ Discussions Collaborate outside of code  ](https://github.com/features/discussions)\n    * [ Code Search Find more, search less  ](https://github.com/features/code-search)\n\nExplore\n    * [ All features ](https://github.com/features)\n    * [ Documentation ](https://docs.github.com)\n    * [ GitHub Skills ](https://skills.github.com)\n    * [ Blog ](https://github.blog)\n\n  * Solutions \n\nBy company size\n    * [ Enterprises ](https://github.com/enterprise)\n    * [ Small and medium teams ](https://github.com/team)\n    * [ Startups ](https://github.com/enterprise/startups)\n    * [ Nonprofits ](/solutions/industry/nonprofits)\n\nBy use case\n    * [ DevSecOps ](/solutions/use-case/devsecops)\n    * [ DevOps ](/solutions/use-case/devops)\n    * [ CI/CD ](/solutions/use-case/ci-cd)\n    * [ View all use cases ](/solutions/use-case)\n\nBy industry\n    * [ Healthcare ](/solutions/industry/healthcare)\n    * [ Financial services ](/solutions/industry/financial-services)\n    * [ Manufacturing ](/solutions/industry/manufacturing)\n    * [ Government ](/solutions/industry/government)\n    * [ View all industries ](/solutions/industry)\n\n[ View all solutions ](/solutions)\n\n  * Resources \n\nTopics\n    * [ AI ](/resources/articles/ai)\n    * [ DevOps ](/resources/articles/devops)\n    * [ Security ](/resources/articles/security)\n    * [ Software Development ](/resources/articles/software-development)\n    * [ View all ](/resources/articles)\n\nExplore\n    * [ Learning Pathways ](https://resources.github.com/learn/pathways)\n    * [ White papers, Ebooks, Webinars ](https://resources.github.com)\n    * [ Customer Stories ](https://github.com/customer-stories)\n    * [ Partners ](https://partner.github.com)\n    * [ Executive Insights ](https://github.com/solutions/executive-insights)\n\n  * Open Source \n\n    * [ GitHub Sponsors Fund open source developers  ](/sponsors)\n\n    * [ The ReadME Project GitHub community articles  ](https://github.com/readme)\n\nRepositories\n    * [ Topics ](https://github.com/topics)\n    * [ Trending ](https://github.com/trending)\n    * [ Collections ](https://github.com/collections)\n\n  * Enterprise \n\n    * [ Enterprise platform AI-powered developer platform  ](/enterprise)\n\nAvailable add-ons\n    * [ Advanced Security Enterprise-grade security features  ](https://github.com/enterprise/advanced-security)\n    * [ GitHub Copilot Enterprise-grade AI features  ](/features/copilot#enterprise)\n    * [ Premium Support Enterprise-grade 24/7 support  ](/premium-support)\n\n  * [Pricing](https://github.com/pricing)\n\n\n\nSearch or jump to...\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch \n\nClear\n\n[Search syntax tips](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax)\n\n#  Provide feedback \n\nWe read every piece of feedback, and take your input very seriously.\n\nInclude my email address so I can be contacted\n\nCancel  Submit feedback \n\n#  Saved searches \n\n## Use saved searches to filter your results more quickly\n\nName\n\nQuery\n\nTo see all available qualifiers, see our [documentation](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax). \n\nCancel  Create saved search \n\n[ Sign in ](/login?return_to=https%3A%2F%2Fgithub.com%2Fapache%2Fairflow%2F)\n\n[ Sign up ](/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&source=header-repo&source_repo=apache%2Fairflow) Reseting focus\n\nYou signed in with another tab or window. [Reload]() to refresh your session. You signed out in another tab or window. [Reload]() to refresh your session. You switched accounts on another tab or window. [Reload]() to refresh your session. Dismiss alert\n\n{{ message }}\n\n[ apache ](/apache) / **[airflow](/apache/airflow) ** Public\n\n  * [ Notifications ](/login?return_to=%2Fapache%2Fairflow) You must be signed in to change notification settings\n  * [ Fork 14.5k ](/login?return_to=%2Fapache%2Fairflow)\n  * [ Star  38.4k ](/login?return_to=%2Fapache%2Fairflow)\n\n\n\n\nApache Airflow - A platform to programmatically author, schedule, and monitor workflows \n\n[airflow.apache.org/](https://airflow.apache.org/ \"https://airflow.apache.org/\")\n\n### License\n\n[ Apache-2.0 license ](/apache/airflow/blob/main/LICENSE)\n\n[ 38.4k stars ](/apache/airflow/stargazers) [ 14.5k forks ](/apache/airflow/forks) [ Branches ](/apache/airflow/branches) [ Tags ](/apache/airflow/tags) [ Activity ](/apache/airflow/activity)\n\n[ Star  ](/login?return_to=%2Fapache%2Fairflow)\n\n[ Notifications ](/login?return_to=%2Fapache%2Fairflow) You must be signed in to change notification settings\n\n  * [ Code ](/apache/airflow)\n  * [ Issues 1.1k ](/apache/airflow/issues)\n  * [ Pull requests 151 ](/apache/airflow/pulls)\n  * [ Discussions ](/apache/airflow/discussions)\n  * [ Actions ](/apache/airflow/actions)\n  * [ Projects 16 ](/apache/airflow/projects)\n  * [ Security ](/apache/airflow/security)\n  * [ Insights ](/apache/airflow/pulse)\n\n\n\nAdditional navigation options\n\n  * [ Code  ](/apache/airflow)\n  * [ Issues  ](/apache/airflow/issues)\n  * [ Pull requests  ](/apache/airflow/pulls)\n  * [ Discussions  ](/apache/airflow/discussions)\n  * [ Actions  ](/apache/airflow/actions)\n  * [ Projects  ](/apache/airflow/projects)\n  * [ Security  ](/apache/airflow/security)\n  * [ Insights  ](/apache/airflow/pulse)\n\n\n\n# apache/airflow\n\nmain\n\n[**93** Branches](/apache/airflow/branches)[**6050** Tags](/apache/airflow/tags)\n\n[](/apache/airflow/branches)[](/apache/airflow/tags)\n\nGo to file\n\nCode\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\n[![ashb](https://avatars.githubusercontent.com/u/34150?v=4&size=40)](/ashb)[ashb](/apache/airflow/commits?author=ashb)[Start porting mapped task to SDK (](/apache/airflow/commit/d1b2a4465387e9414e6c15f8df85591136a7784b)[#45627](https://github.com/apache/airflow/pull/45627)[)](/apache/airflow/commit/d1b2a4465387e9414e6c15f8df85591136a7784b)Jan 21, 2025[d1b2a44](/apache/airflow/commit/d1b2a4465387e9414e6c15f8df85591136a7784b) · Jan 21, 2025\n\n## History\n\n[27,736 Commits](/apache/airflow/commits/main/)[](/apache/airflow/commits/main/)  \n[.devcontainer](/apache/airflow/tree/main/.devcontainer \".devcontainer\")| [.devcontainer](/apache/airflow/tree/main/.devcontainer \".devcontainer\")| [Specify workspaceFolder so devcontainer will start with local docker …](/apache/airflow/commit/fe166ec03918825d0f5274fef72a1f027137fdd6 \"Specify workspaceFolder so devcontainer will start with local docker from vscode \\(#44273\\)\")| Nov 22, 2024  \n[.github](/apache/airflow/tree/main/.github \".github\")| [.github](/apache/airflow/tree/main/.github \".github\")| [Rename fail stop dag property to fail fast (](/apache/airflow/commit/a76af4f22c0f34813ec51f00cd0e2a4909c77cbf \"Rename fail stop dag property to fail fast \\(#45327\\)\n* Renamed fail_stop DAG property to fail_fast \\(#45229\\)\n* made changes to missed occurences \\(#45229\\)\n* Renamed fail_stop DAG property to fail_fast \\(#45229\\)\n* Added newsfragments for the PR #45327\n* docs\\(newsfragment\\): update change type and migraiton rule\n* ci\\(github-actions\\): fix ci typo\n---------\nCo-authored-by: Wei Lee <weilee.rx@gmail.com>\nCo-authored-by: Amogh Desai <amoghrajesh1999@gmail.com>\")[#45327](https://github.com/apache/airflow/pull/45327)[)](/apache/airflow/commit/a76af4f22c0f34813ec51f00cd0e2a4909c77cbf \"Rename fail stop dag property to fail fast \\(#45327\\)\n* Renamed fail_stop DAG property to fail_fast \\(#45229\\)\n* made changes to missed occurences \\(#45229\\)\n* Renamed fail_stop DAG property to fail_fast \\(#45229\\)\n* Added newsfragments for the PR #45327\n* docs\\(newsfragment\\): update change type and migraiton rule\n* ci\\(github-actions\\): fix ci typo\n---------\nCo-authored-by: Wei Lee <weilee.rx@gmail.com>\nCo-authored-by: Amogh Desai <amoghrajesh1999@gmail.com>\")| Jan 21, 2025  \n[3rd-party-licenses](/apache/airflow/tree/main/3rd-party-licenses \"3rd-party-licenses\")| [3rd-party-licenses](/apache/airflow/tree/main/3rd-party-licenses \"3rd-party-licenses\")| [Removed unicodecsv dependency for providers with Airflow version 2.8.…](/apache/airflow/commit/00b8452b7526166b2918976b991aff1124d1a17c \"Removed unicodecsv dependency for providers with Airflow version 2.8.0 and above \\(#42765\\)\")| Oct 7, 2024  \n[airflow](/apache/airflow/tree/main/airflow \"airflow\")| [airflow](/apache/airflow/tree/main/airflow \"airflow\")| [Start porting mapped task to SDK (](/apache/airflow/commit/d1b2a4465387e9414e6c15f8df85591136a7784b \"Start porting mapped task to SDK \\(#45627\\)\nThis PR restructures the Mapped Operator and Mapped Task Group code to live in\nthe Task SDK at definition time.\nThe big thing this change _does not do_ is make it possible to execute mapped\ntasks via the Task Execution API server etc -- that is up next.\nThere were some un-avoidable changes to the scheduler/expansion part of mapped\ntasks here. Of note:\n`BaseOperator.get_mapped_ti_count` has moved from an instance method on\nBaseOperator to be a class method. The reason for this was that with the move\nof more and more of the \"definition time\" code into the TaskSDK BaseOperator\nand AbstractOperator it is no longer possible to add DB-accessing code to a\nbase class and have it apply to the subclasses. \\(i.e.\n`airflow.models.abstractoperator.AbstractOperator` is now _not always_ in the\nMRO for tasks. Eventually that class will be deleted, but not yet\\)\nOn a similar vein XComArg's `get_task_map_length` is also moved to a single\ndispatch class method on the TaskMap model since now the definition time\nobjects live in the TaskSDK, and there is no realistic way to get a per-type\nsubclass with DB logic \\(i.e. it's very complex to end up with a\nPlainDBXComArg, a MapDBXComArg, etc. that we can attach the method too\\)\nFor those who aren't aware, singledispatch \\(and singledispatchmethod\\) are a\npart of the standard library when the type of the first argument is used to\ndetermine which implementation to call. If you are familiar with C++ or Java\nthis is very similar to method overloading, the one caveat is that it _only_\nexamines the type of the first argument, not the full signature.\")[#45627](https://github.com/apache/airflow/pull/45627)[)](/apache/airflow/commit/d1b2a4465387e9414e6c15f8df85591136a7784b \"Start porting mapped task to SDK \\(#45627\\)\nThis PR restructures the Mapped Operator and Mapped Task Group code to live in\nthe Task SDK at definition time.\nThe big thing this change _does not do_ is make it possible to execute mapped\ntasks via the Task Execution API server etc -- that is up next.\nThere were some un-avoidable changes to the scheduler/expansion part of mapped\ntasks here. Of note:\n`BaseOperator.get_mapped_ti_count` has moved from an instance method on\nBaseOperator to be a class method. The reason for this was that with the move\nof more and more of the \"definition time\" code into the TaskSDK BaseOperator\nand AbstractOperator it is no longer possible to add DB-accessing code to a\nbase class and have it apply to the subclasses. \\(i.e.\n`airflow.models.abstractoperator.AbstractOperator` is now _not always_ in the\nMRO for tasks. Eventually that class will be deleted, but not yet\\)\nOn a similar vein XComArg's `get_task_map_length` is also moved to a single\ndispatch class method on the TaskMap model since now the definition time\nobjects live in the TaskSDK, and there is no realistic way to get a per-type\nsubclass with DB logic \\(i.e. it's very complex to end up with a\nPlainDBXComArg, a MapDBXComArg, etc. that we can attach the method too\\)\nFor those who aren't aware, singledispatch \\(and singledispatchmethod\\) are a\npart of the standard library when the type of the first argument is used to\ndetermine which implementation to call. If you are familiar with C++ or Java\nthis is very similar to method overloading, the one caveat is that it _only_\nexamines the type of the first argument, not the full signature.\")| Jan 21, 2025  \n[chart](/apache/airflow/tree/main/chart \"chart\")| [chart](/apache/airflow/tree/main/chart \"chart\")| [Use standalone dag processor for AF3 in chart (](/apache/airflow/commit/9ac85c89dcc5f1defc2bb949497ed58d3fc67bef \"Use standalone dag processor for AF3 in chart \\(#45659\\)\nWe are moving to only support a standalone DAG processor in Airflow 3,\nso let's switch our chart to always use it.\")[#45659](https://github.com/apache/airflow/pull/45659)[)](/apache/airflow/commit/9ac85c89dcc5f1defc2bb949497ed58d3fc67bef \"Use standalone dag processor for AF3 in chart \\(#45659\\)\nWe are moving to only support a standalone DAG processor in Airflow 3,\nso let's switch our chart to always use it.\")| Jan 15, 2025  \n[clients](/apache/airflow/tree/main/clients \"clients\")| [clients](/apache/airflow/tree/main/clients \"clients\")| [Upgrade hatchling to fix upgrade checks (](/apache/airflow/commit/5605cde88cc5ced04a2732250d14b1fe0f411c92 \"Upgrade hatchling to fix upgrade checks \\(#44947\\)\nNew hatchling version was released.\")[#44947](https://github.com/apache/airflow/pull/44947)[)](/apache/airflow/commit/5605cde88cc5ced04a2732250d14b1fe0f411c92 \"Upgrade hatchling to fix upgrade checks \\(#44947\\)\nNew hatchling version was released.\")| Dec 16, 2024  \n[constraints](/apache/airflow/tree/main/constraints \"constraints\")| [constraints](/apache/airflow/tree/main/constraints \"constraints\")| [Drop python3.8 support core and providers (](/apache/airflow/commit/63ff22f4038f34354dc5807036d1bf10653c2ecd \"Drop python3.8 support core and providers \\(#42766\\)\n* Drop Python 3.8 support in core\nAdd newsfragment\n* Drop Python 3.8 support in provider packages\")[#42766](https://github.com/apache/airflow/pull/42766)[)](/apache/airflow/commit/63ff22f4038f34354dc5807036d1bf10653c2ecd \"Drop python3.8 support core and providers \\(#42766\\)\n* Drop Python 3.8 support in core\nAdd newsfragment\n* Drop Python 3.8 support in provider packages\")| Oct 8, 2024  \n[contributing-docs](/apache/airflow/tree/main/contributing-docs \"contributing-docs\")| [contributing-docs](/apache/airflow/tree/main/contributing-docs \"contributing-docs\")| [Update documentation about new provider structure (](/apache/airflow/commit/6d20d7b67f361029af485dce58020064bf017a71 \"Update documentation about new provider structure \\(#45804\\)\")[#45804](https://github.com/apache/airflow/pull/45804)[)](/apache/airflow/commit/6d20d7b67f361029af485dce58020064bf017a71 \"Update documentation about new provider structure \\(#45804\\)\")| Jan 20, 2025  \n[dev](/apache/airflow/tree/main/dev \"dev\")| [dev](/apache/airflow/tree/main/dev \"dev\")| [Fail if rebuilding image fails (](/apache/airflow/commit/acb1bc2b6907b91a503438395038c453c6101da1 \"Fail if rebuilding image fails \\(#45819\\)\nWe did not check if image building succeeded when \"y\" was chosen\nas answer to \"do you want to rebuild the image\".\nAdding missing return code will make the command that triggered it\nto fail.\")[#45819](https://github.com/apache/airflow/pull/45819)[)](/apache/airflow/commit/acb1bc2b6907b91a503438395038c453c6101da1 \"Fail if rebuilding image fails \\(#45819\\)\nWe did not check if image building succeeded when \"y\" was chosen\nas answer to \"do you want to rebuild the image\".\nAdding missing return code will make the command that triggered it\nto fail.\")| Jan 21, 2025  \n[docker-context-files](/apache/airflow/tree/main/docker-context-files \"docker-context-files\")| [docker-context-files](/apache/airflow/tree/main/docker-context-files \"docker-context-files\")| [Add capability of iterating locally on constraint files for CI image (](/apache/airflow/commit/53afba2ec5a186284054de2d881a334a5f493021 \"Add capability of iterating locally on constraint files for CI image \\(#30002\\)\nWhenever you want to upgrade a set of dependencies \\(for example all\ngoogle packages\\) you might deal with a set of dependencies that\nare conflicting or difficult to upgrade all-at-once. And there might\nbe multiple people working on it in parallel. This brings in the\nnecessity of building the CI image of breeze with a different set\nof constraints than the ones in \"main\" branch of Airflow and share\nit with others working with you.\nThis PR adds the capability of storing a temporary set of constraints\nin the repository \\(during PR iteration\\) and use this constraint\nfile to build the CI image, rather than constraints from the\nrepository. It also provides appropriate README.md file explaining\nhow to iterate and regenerate such constraint files - even\nmultiple times when iterating.\")[#…](https://github.com/apache/airflow/pull/30002)| Mar 15, 2023  \n[docker_tests](/apache/airflow/tree/main/docker_tests \"docker_tests\")| [docker_tests](/apache/airflow/tree/main/docker_tests \"docker_tests\")| [loop scheduler before running dag in docker tests (](/apache/airflow/commit/a22faa5921bd6b3fbb8a95f582f56da1cdf39fc5 \"loop scheduler before running dag in docker tests \\(#45262\\)\")[#45262](https://github.com/apache/airflow/pull/45262)[)](/apache/airflow/commit/a22faa5921bd6b3fbb8a95f582f56da1cdf39fc5 \"loop scheduler before running dag in docker tests \\(#45262\\)\")| Dec 28, 2024  \n[docs](/apache/airflow/tree/main/docs \"docs\")| [docs](/apache/airflow/tree/main/docs \"docs\")| [Remove dag processor from the scheduler (](/apache/airflow/commit/b081f66d52cc20ba0cd8eb37b8984ed3d9805277 \"Remove dag processor from the scheduler \\(#45729\\)\nWe will only support a standalone DAG processor. Doing so removes\ncomplexity from the scheduler, and offers better isolation between these\ntwo different workloads.\")[#45729](https://github.com/apache/airflow/pull/45729)[)](/apache/airflow/commit/b081f66d52cc20ba0cd8eb37b8984ed3d9805277 \"Remove dag processor from the scheduler \\(#45729\\)\nWe will only support a standalone DAG processor. Doing so removes\ncomplexity from the scheduler, and offers better isolation between these\ntwo different workloads.\")| Jan 20, 2025  \n[empty](/apache/airflow/tree/main/empty \"empty\")| [empty](/apache/airflow/tree/main/empty \"empty\")|  [Adding content to empty/.gitignore (](/apache/airflow/commit/a851b18953177c7a1506a796c3973e98fbca14ce \" Adding content to empty/.gitignore \\(#33468\\)\n\n---------\nCo-authored-by: Jarek Potiuk <jarek@potiuk.com>\")[#33468](https://github.com/apache/airflow/pull/33468)[)](/apache/airflow/commit/a851b18953177c7a1506a796c3973e98fbca14ce \" Adding content to empty/.gitignore \\(#33468\\)\n\n---------\nCo-authored-by: Jarek Potiuk <jarek@potiuk.com>\")| Aug 20, 2023  \n[generated](/apache/airflow/tree/main/generated \"generated\")| [generated](/apache/airflow/tree/main/generated \"generated\")| [Improve cross-provider dependency detection (](/apache/airflow/commit/d414ff941b0f378159822662dc3511fd1aace5ab \"Improve cross-provider dependency detection \\(#45784\\)\nWhen another provider is only used in example dags, we should not\nmake it \"cross-provider\" dependency - this happened to \"edge\" provider\nhaving \"common.compat\" as cross-provider dependency.\nIt has been previously only implemented for \"standard\" provider but\nthis is a universal rule that could be applied to any other provider.\")[#45784](https://github.com/apache/airflow/pull/45784)[)](/apache/airflow/commit/d414ff941b0f378159822662dc3511fd1aace5ab \"Improve cross-provider dependency detection \\(#45784\\)\nWhen another provider is only used in example dags, we should not\nmake it \"cross-provider\" dependency - this happened to \"edge\" provider\nhaving \"common.compat\" as cross-provider dependency.\nIt has been previously only implemented for \"standard\" provider but\nthis is a universal rule that could be applied to any other provider.\")| Jan 18, 2025  \n[helm_tests](/apache/airflow/tree/main/helm_tests \"helm_tests\")| [helm_tests](/apache/airflow/tree/main/helm_tests \"helm_tests\")| [Use standalone dag processor for AF3 in chart (](/apache/airflow/commit/9ac85c89dcc5f1defc2bb949497ed58d3fc67bef \"Use standalone dag processor for AF3 in chart \\(#45659\\)\nWe are moving to only support a standalone DAG processor in Airflow 3,\nso let's switch our chart to always use it.\")[#45659](https://github.com/apache/airflow/pull/45659)[)](/apache/airflow/commit/9ac85c89dcc5f1defc2bb949497ed58d3fc67bef \"Use standalone dag processor for AF3 in chart \\(#45659\\)\nWe are moving to only support a standalone DAG processor in Airflow 3,\nso let's switch our chart to always use it.\")| Jan 15, 2025  \n[kubernetes_tests](/apache/airflow/tree/main/kubernetes_tests \"kubernetes_tests\")| [kubernetes_tests](/apache/airflow/tree/main/kubernetes_tests \"kubernetes_tests\")| [AIP-72: Support better type-hinting for Context dict in SDK (](/apache/airflow/commit/f616c62209d6b51d293ecf6f5c900f89a7fdc3a3 \"AIP-72: Support better type-hinting for Context dict in SDK \\(#45583\\)\nThis PR adds a `Context` class that is used for Type hinting of the Context dictionary. It replaces Context in the Scheduler.\npart of #44481\")[#45583](https://github.com/apache/airflow/pull/45583)[)](/apache/airflow/commit/f616c62209d6b51d293ecf6f5c900f89a7fdc3a3 \"AIP-72: Support better type-hinting for Context dict in SDK \\(#45583\\)\nThis PR adds a `Context` class that is used for Type hinting of the Context dictionary. It replaces Context in the Scheduler.\npart of #44481\")| Jan 14, 2025  \n[manifests](/apache/airflow/tree/main/manifests \"manifests\")| [manifests](/apache/airflow/tree/main/manifests \"manifests\")| [Simplifies check whether the CI image should be rebuilt (](/apache/airflow/commit/167b9b9889ac5481b21cb35c6cdef5869b8ab713 \"Simplifies check whether the CI image should be rebuilt \\(#12181\\)\nRather than counting changed layers in the image \\(which was\nenigmatic, difficult and prone to some magic number\\) we rely now\non random file generated while building the image.\nWe are using the docker image caching mechanism here. The random\nfile will be regenerated only when the previous layer \\(which is\nabout installling Airflow dependencies for the first time\\) gets\nrebuild. And for us this is the indication, that the building\nthe image will take quite some time. This layer should be\nrelatively static - even if setup.py changes the CI image is\ndesigned in the way that the first time installation of Airflow\ndependencies is not invalidated.\nThis should lead to faster and less frequent rebuild for people\nusing Breeze and static checks.\")[#12181](https://github.com/apache/airflow/pull/12181)[)](/apache/airflow/commit/167b9b9889ac5481b21cb35c6cdef5869b8ab713 \"Simplifies check whether the CI image should be rebuilt \\(#12181\\)\nRather than counting changed layers in the image \\(which was\nenigmatic, difficult and prone to some magic number\\) we rely now\non random file generated while building the image.\nWe are using the docker image caching mechanism here. The random\nfile will be regenerated only when the previous layer \\(which is\nabout installling Airflow dependencies for the first time\\) gets\nrebuild. And for us this is the indication, that the building\nthe image will take quite some time. This layer should be\nrelatively static - even if setup.py changes the CI image is\ndesigned in the way that the first time installation of Airflow\ndependencies is not invalidated.\nThis should lead to faster and less frequent rebuild for people\nusing Breeze and static checks.\")| Nov 13, 2020  \n[newsfragments](/apache/airflow/tree/main/newsfragments \"newsfragments\")| [newsfragments](/apache/airflow/tree/main/newsfragments \"newsfragments\")| [Rename fail stop dag property to fail fast (](/apache/airflow/commit/a76af4f22c0f34813ec51f00cd0e2a4909c77cbf \"Rename fail stop dag property to fail fast \\(#45327\\)\n* Renamed fail_stop DAG property to fail_fast \\(#45229\\)\n* made changes to missed occurences \\(#45229\\)\n* Renamed fail_stop DAG property to fail_fast \\(#45229\\)\n* Added newsfragments for the PR #45327\n* docs\\(newsfragment\\): update change type and migraiton rule\n* ci\\(github-actions\\): fix ci typo\n---------\nCo-authored-by: Wei Lee <weilee.rx@gmail.com>\nCo-authored-by: Amogh Desai <amoghrajesh1999@gmail.com>\")[#45327](https://github.com/apache/airflow/pull/45327)[)](/apache/airflow/commit/a76af4f22c0f34813ec51f00cd0e2a4909c77cbf \"Rename fail stop dag property to fail fast \\(#45327\\)\n* Renamed fail_stop DAG property to fail_fast \\(#45229\\)\n* made changes to missed occurences \\(#45229\\)\n* Renamed fail_stop DAG property to fail_fast \\(#45229\\)\n* Added newsfragments for the PR #45327\n* docs\\(newsfragment\\): update change type and migraiton rule\n* ci\\(github-actions\\): fix ci typo\n---------\nCo-authored-by: Wei Lee <weilee.rx@gmail.com>\nCo-authored-by: Amogh Desai <amoghrajesh1999@gmail.com>\")| Jan 21, 2025  \n[performance](/apache/airflow/tree/main/performance \"performance\")| [performance](/apache/airflow/tree/main/performance \"performance\")| [Bump openlineage-airflow from 1.25.0 to 1.26.0 (](/apache/airflow/commit/5b925dc302b0fde81b610efef9a6dfef860966a2 \"Bump openlineage-airflow from 1.25.0 to 1.26.0 \\(#45118\\)\nBumps openlineage-airflow from 1.25.0 to 1.26.0.\n---\nupdated-dependencies:\n- dependency-name: openlineage-airflow\n dependency-type: direct:production\n update-type: version-update:semver-minor\n...\nSigned-off-by: dependabot\\[bot\\] <support@github.com>\nCo-authored-by: dependabot\\[bot\\] <49699333+dependabot\\[bot\\]@users.noreply.github.com>\")[#45118](https://github.com/apache/airflow/pull/45118)[)](/apache/airflow/commit/5b925dc302b0fde81b610efef9a6dfef860966a2 \"Bump openlineage-airflow from 1.25.0 to 1.26.0 \\(#45118\\)\nBumps openlineage-airflow from 1.25.0 to 1.26.0.\n---\nupdated-dependencies:\n- dependency-name: openlineage-airflow\n dependency-type: direct:production\n update-type: version-update:semver-minor\n...\nSigned-off-by: dependabot\\[bot\\] <support@github.com>\nCo-authored-by: dependabot\\[bot\\] <49699333+dependabot\\[bot\\]@users.noreply.github.com>\")| Dec 20, 2024  \n[providers](/apache/airflow/tree/main/providers \"providers\")| [providers](/apache/airflow/tree/main/providers \"providers\")| [Start porting mapped task to SDK (](/apache/airflow/commit/d1b2a4465387e9414e6c15f8df85591136a7784b \"Start porting mapped task to SDK \\(#45627\\)\nThis PR restructures the Mapped Operator and Mapped Task Group code to live in\nthe Task SDK at definition time.\nThe big thing this change _does not do_ is make it possible to execute mapped\ntasks via the Task Execution API server etc -- that is up next.\nThere were some un-avoidable changes to the scheduler/expansion part of mapped\ntasks here. Of note:\n`BaseOperator.get_mapped_ti_count` has moved from an instance method on\nBaseOperator to be a class method. The reason for this was that with the move\nof more and more of the \"definition time\" code into the TaskSDK BaseOperator\nand AbstractOperator it is no longer possible to add DB-accessing code to a\nbase class and have it apply to the subclasses. \\(i.e.\n`airflow.models.abstractoperator.AbstractOperator` is now _not always_ in the\nMRO for tasks. Eventually that class will be deleted, but not yet\\)\nOn a similar vein XComArg's `get_task_map_length` is also moved to a single\ndispatch class method on the TaskMap model since now the definition time\nobjects live in the TaskSDK, and there is no realistic way to get a per-type\nsubclass with DB logic \\(i.e. it's very complex to end up with a\nPlainDBXComArg, a MapDBXComArg, etc. that we can attach the method too\\)\nFor those who aren't aware, singledispatch \\(and singledispatchmethod\\) are a\npart of the standard library when the type of the first argument is used to\ndetermine which implementation to call. If you are familiar with C++ or Java\nthis is very similar to method overloading, the one caveat is that it _only_\nexamines the type of the first argument, not the full signature.\")[#45627](https://github.com/apache/airflow/pull/45627)[)](/apache/airflow/commit/d1b2a4465387e9414e6c15f8df85591136a7784b \"Start porting mapped task to SDK \\(#45627\\)\nThis PR restructures the Mapped Operator and Mapped Task Group code to live in\nthe Task SDK at definition time.\nThe big thing this change _does not do_ is make it possible to execute mapped\ntasks via the Task Execution API server etc -- that is up next.\nThere were some un-avoidable changes to the scheduler/expansion part of mapped\ntasks here. Of note:\n`BaseOperator.get_mapped_ti_count` has moved from an instance method on\nBaseOperator to be a class method. The reason for this was that with the move\nof more and more of the \"definition time\" code into the TaskSDK BaseOperator\nand AbstractOperator it is no longer possible to add DB-accessing code to a\nbase class and have it apply to the subclasses. \\(i.e.\n`airflow.models.abstractoperator.AbstractOperator` is now _not always_ in the\nMRO for tasks. Eventually that class will be deleted, but not yet\\)\nOn a similar vein XComArg's `get_task_map_length` is also moved to a single\ndispatch class method on the TaskMap model since now the definition time\nobjects live in the TaskSDK, and there is no realistic way to get a per-type\nsubclass with DB logic \\(i.e. it's very complex to end up with a\nPlainDBXComArg, a MapDBXComArg, etc. that we can attach the method too\\)\nFor those who aren't aware, singledispatch \\(and singledispatchmethod\\) are a\npart of the standard library when the type of the first argument is used to\ndetermine which implementation to call. If you are familiar with C++ or Java\nthis is very similar to method overloading, the one caveat is that it _only_\nexamines the type of the first argument, not the full signature.\")| Jan 21, 2025  \n[scripts](/apache/airflow/tree/main/scripts \"scripts\")| [scripts](/apache/airflow/tree/main/scripts \"scripts\")| [Start porting mapped task to SDK (](/apache/airflow/commit/d1b2a4465387e9414e6c15f8df85591136a7784b \"Start porting mapped task to SDK \\(#45627\\)\nThis PR restructures the Mapped Operator and Mapped Task Group code to live in\nthe Task SDK at definition time.\nThe big thing this change _does not do_ is make it possible to execute mapped\ntasks via the Task Execution API server etc -- that is up next.\nThere were some un-avoidable changes to the scheduler/expansion part of mapped\ntasks here. Of note:\n`BaseOperator.get_mapped_ti_count` has moved from an instance method on\nBaseOperator to be a class method. The reason for this was that with the move\nof more and more of the \"definition time\" code into the TaskSDK BaseOperator\nand AbstractOperator it is no longer possible to add DB-accessing code to a\nbase class and have it apply to the subclasses. \\(i.e.\n`airflow.models.abstractoperator.AbstractOperator` is now _not always_ in the\nMRO for tasks. Eventually that class will be deleted, but not yet\\)\nOn a similar vein XComArg's `get_task_map_length` is also moved to a single\ndispatch class method on the TaskMap model since now the definition time\nobjects live in the TaskSDK, and there is no realistic way to get a per-type\nsubclass with DB logic \\(i.e. it's very complex to end up with a\nPlainDBXComArg, a MapDBXComArg, etc. that we can attach the method too\\)\nFor those who aren't aware, singledispatch \\(and singledispatchmethod\\) are a\npart of the standard library when the type of the first argument is used to\ndetermine which implementation to call. If you are familiar with C++ or Java\nthis is very similar to method overloading, the one caveat is that it _only_\nexamines the type of the first argument, not the full signature.\")[#45627](https://github.com/apache/airflow/pull/45627)[)](/apache/airflow/commit/d1b2a4465387e9414e6c15f8df85591136a7784b \"Start porting mapped task to SDK \\(#45627\\)\nThis PR restructures the Mapped Operator and Mapped Task Group code to live in\nthe Task SDK at definition time.\nThe big thing this change _does not do_ is make it possible to execute mapped\ntasks via the Task Execution API server etc -- that is up next.\nThere were some un-avoidable changes to the scheduler/expansion part of mapped\ntasks here. Of note:\n`BaseOperator.get_mapped_ti_count` has moved from an instance method on\nBaseOperator to be a class method. The reason for this was that with the move\nof more and more of the \"definition time\" code into the TaskSDK BaseOperator\nand AbstractOperator it is no longer possible to add DB-accessing code to a\nbase class and have it apply to the subclasses. \\(i.e.\n`airflow.models.abstractoperator.AbstractOperator` is now _not always_ in the\nMRO for tasks. Eventually that class will be deleted, but not yet\\)\nOn a similar vein XComArg's `get_task_map_length` is also moved to a single\ndispatch class method on the TaskMap model since now the definition time\nobjects live in the TaskSDK, and there is no realistic way to get a per-type\nsubclass with DB logic \\(i.e. it's very complex to end up with a\nPlainDBXComArg, a MapDBXComArg, etc. that we can attach the method too\\)\nFor those who aren't aware, singledispatch \\(and singledispatchmethod\\) are a\npart of the standard library when the type of the first argument is used to\ndetermine which implementation to call. If you are familiar with C++ or Java\nthis is very similar to method overloading, the one caveat is that it _only_\nexamines the type of the first argument, not the full signature.\")| Jan 21, 2025  \n[task_sdk](/apache/airflow/tree/main/task_sdk \"task_sdk\")| [task_sdk](/apache/airflow/tree/main/task_sdk \"task_sdk\")| [Start porting mapped task to SDK (](/apache/airflow/commit/d1b2a4465387e9414e6c15f8df85591136a7784b \"Start porting mapped task to SDK \\(#45627\\)\nThis PR restructures the Mapped Operator and Mapped Task Group code to live in\nthe Task SDK at definition time.\nThe big thing this change _does not do_ is make it possible to execute mapped\ntasks via the Task Execution API server etc -- that is up next.\nThere were some un-avoidable changes to the scheduler/expansion part of mapped\ntasks here. Of note:\n`BaseOperator.get_mapped_ti_count` has moved from an instance method on\nBaseOperator to be a class method. The reason for this was that with the move\nof more and more of the \"definition time\" code into the TaskSDK BaseOperator\nand AbstractOperator it is no longer possible to add DB-accessing code to a\nbase class and have it apply to the subclasses. \\(i.e.\n`airflow.models.abstractoperator.AbstractOperator` is now _not always_ in the\nMRO for tasks. Eventually that class will be deleted, but not yet\\)\nOn a similar vein XComArg's `get_task_map_length` is also moved to a single\ndispatch class method on the TaskMap model since now the definition time\nobjects live in the TaskSDK, and there is no realistic way to get a per-type\nsubclass with DB logic \\(i.e. it's very complex to end up with a\nPlainDBXComArg, a MapDBXComArg, etc. that we can attach the method too\\)\nFor those who aren't aware, singledispatch \\(and singledispatchmethod\\) are a\npart of the standard library when the type of the first argument is used to\ndetermine which implementation to call. If you are familiar with C++ or Java\nthis is very similar to method overloading, the one caveat is that it _only_\nexamines the type of the first argument, not the full signature.\")[#45627](https://github.com/apache/airflow/pull/45627)[)](/apache/airflow/commit/d1b2a4465387e9414e6c15f8df85591136a7784b \"Start porting mapped task to SDK \\(#45627\\)\nThis PR restructures the Mapped Operator and Mapped Task Group code to live in\nthe Task SDK at definition time.\nThe big thing this change _does not do_ is make it possible to execute mapped\ntasks via the Task Execution API server etc -- that is up next.\nThere were some un-avoidable changes to the scheduler/expansion part of mapped\ntasks here. Of note:\n`BaseOperator.get_mapped_ti_count` has moved from an instance method on\nBaseOperator to be a class method. The reason for this was that with the move\nof more and more of the \"definition time\" code into the TaskSDK BaseOperator\nand AbstractOperator it is no longer possible to add DB-accessing code to a\nbase class and have it apply to the subclasses. \\(i.e.\n`airflow.models.abstractoperator.AbstractOperator` is now _not always_ in the\nMRO for tasks. Eventually that class will be deleted, but not yet\\)\nOn a similar vein XComArg's `get_task_map_length` is also moved to a single\ndispatch class method on the TaskMap model since now the definition time\nobjects live in the TaskSDK, and there is no realistic way to get a per-type\nsubclass with DB logic \\(i.e. it's very complex to end up with a\nPlainDBXComArg, a MapDBXComArg, etc. that we can attach the method too\\)\nFor those who aren't aware, singledispatch \\(and singledispatchmethod\\) are a\npart of the standard library when the type of the first argument is used to\ndetermine which implementation to call. If you are familiar with C++ or Java\nthis is very similar to method overloading, the one caveat is that it _only_\nexamines the type of the first argument, not the full signature.\")| Jan 21, 2025  \n[tests](/apache/airflow/tree/main/tests \"tests\")| [tests](/apache/airflow/tree/main/tests \"tests\")| [Start porting mapped task to SDK (](/apache/airflow/commit/d1b2a4465387e9414e6c15f8df85591136a7784b \"Start porting mapped task to SDK \\(#45627\\)\nThis PR restructures the Mapped Operator and Mapped Task Group code to live in\nthe Task SDK at definition time.\nThe big thing this change _does not do_ is make it possible to execute mapped\ntasks via the Task Execution API server etc -- that is up next.\nThere were some un-avoidable changes to the scheduler/expansion part of mapped\ntasks here. Of note:\n`BaseOperator.get_mapped_ti_count` has moved from an instance method on\nBaseOperator to be a class method. The reason for this was that with the move\nof more and more of the \"definition time\" code into the TaskSDK BaseOperator\nand AbstractOperator it is no longer possible to add DB-accessing code to a\nbase class and have it apply to the subclasses. \\(i.e.\n`airflow.models.abstractoperator.AbstractOperator` is now _not always_ in the\nMRO for tasks. Eventually that class will be deleted, but not yet\\)\nOn a similar vein XComArg's `get_task_map_length` is also moved to a single\ndispatch class method on the TaskMap model since now the definition time\nobjects live in the TaskSDK, and there is no realistic way to get a per-type\nsubclass with DB logic \\(i.e. it's very complex to end up with a\nPlainDBXComArg, a MapDBXComArg, etc. that we can attach the method too\\)\nFor those who aren't aware, singledispatch \\(and singledispatchmethod\\) are a\npart of the standard library when the type of the first argument is used to\ndetermine which implementation to call. If you are familiar with C++ or Java\nthis is very similar to method overloading, the one caveat is that it _only_\nexamines the type of the first argument, not the full signature.\")[#45627](https://github.com/apache/airflow/pull/45627)[)](/apache/airflow/commit/d1b2a4465387e9414e6c15f8df85591136a7784b \"Start porting mapped task to SDK \\(#45627\\)\nThis PR restructures the Mapped Operator and Mapped Task Group code to live in\nthe Task SDK at definition time.\nThe big thing this change _does not do_ is make it possible to execute mapped\ntasks via the Task Execution API server etc -- that is up next.\nThere were some un-avoidable changes to the scheduler/expansion part of mapped\ntasks here. Of note:\n`BaseOperator.get_mapped_ti_count` has moved from an instance method on\nBaseOperator to be a class method. The reason for this was that with the move\nof more and more of the \"definition time\" code into the TaskSDK BaseOperator\nand AbstractOperator it is no longer possible to add DB-accessing code to a\nbase class and have it apply to the subclasses. \\(i.e.\n`airflow.models.abstractoperator.AbstractOperator` is now _not always_ in the\nMRO for tasks. Eventually that class will be deleted, but not yet\\)\nOn a similar vein XComArg's `get_task_map_length` is also moved to a single\ndispatch class method on the TaskMap model since now the definition time\nobjects live in the TaskSDK, and there is no realistic way to get a per-type\nsubclass with DB logic \\(i.e. it's very complex to end up with a\nPlainDBXComArg, a MapDBXComArg, etc. that we can attach the method too\\)\nFor those who aren't aware, singledispatch \\(and singledispatchmethod\\) are a\npart of the standard library when the type of the first argument is used to\ndetermine which implementation to call. If you are familiar with C++ or Java\nthis is very similar to method overloading, the one caveat is that it _only_\nexamines the type of the first argument, not the full signature.\")| Jan 21, 2025  \n[tests_common](/apache/airflow/tree/main/tests_common \"tests_common\")| [tests_common](/apache/airflow/tree/main/tests_common \"tests_common\")| [Start porting mapped task to SDK (](/apache/airflow/commit/d1b2a4465387e9414e6c15f8df85591136a7784b \"Start porting mapped task to SDK \\(#45627\\)\nThis PR restructures the Mapped Operator and Mapped Task Group code to live in\nthe Task SDK at definition time.\nThe big thing this change _does not do_ is make it possible to execute mapped\ntasks via the Task Execution API server etc -- that is up next.\nThere were some un-avoidable changes to the scheduler/expansion part of mapped\ntasks here. Of note:\n`BaseOperator.get_mapped_ti_count` has moved from an instance method on\nBaseOperator to be a class method. The reason for this was that with the move\nof more and more of the \"definition time\" code into the TaskSDK BaseOperator\nand AbstractOperator it is no longer possible to add DB-accessing code to a\nbase class and have it apply to the subclasses. \\(i.e.\n`airflow.models.abstractoperator.AbstractOperator` is now _not always_ in the\nMRO for tasks. Eventually that class will be deleted, but not yet\\)\nOn a similar vein XComArg's `get_task_map_length` is also moved to a single\ndispatch class method on the TaskMap model since now the definition time\nobjects live in the TaskSDK, and there is no realistic way to get a per-type\nsubclass with DB logic \\(i.e. it's very complex to end up with a\nPlainDBXComArg, a MapDBXComArg, etc. that we can attach the method too\\)\nFor those who aren't aware, singledispatch \\(and singledispatchmethod\\) are a\npart of the standard library when the type of the first argument is used to\ndetermine which implementation to call. If you are familiar with C++ or Java\nthis is very similar to method overloading, the one caveat is that it _only_\nexamines the type of the first argument, not the full signature.\")[#45627](https://github.com/apache/airflow/pull/45627)[)](/apache/airflow/commit/d1b2a4465387e9414e6c15f8df85591136a7784b \"Start porting mapped task to SDK \\(#45627\\)\nThis PR restructures the Mapped Operator and Mapped Task Group code to live in\nthe Task SDK at definition time.\nThe big thing this change _does not do_ is make it possible to execute mapped\ntasks via the Task Execution API server etc -- that is up next.\nThere were some un-avoidable changes to the scheduler/expansion part of mapped\ntasks here. Of note:\n`BaseOperator.get_mapped_ti_count` has moved from an instance method on\nBaseOperator to be a class method. The reason for this was that with the move\nof more and more of the \"definition time\" code into the TaskSDK BaseOperator\nand AbstractOperator it is no longer possible to add DB-accessing code to a\nbase class and have it apply to the subclasses. \\(i.e.\n`airflow.models.abstractoperator.AbstractOperator` is now _not always_ in the\nMRO for tasks. Eventually that class will be deleted, but not yet\\)\nOn a similar vein XComArg's `get_task_map_length` is also moved to a single\ndispatch class method on the TaskMap model since now the definition time\nobjects live in the TaskSDK, and there is no realistic way to get a per-type\nsubclass with DB logic \\(i.e. it's very complex to end up with a\nPlainDBXComArg, a MapDBXComArg, etc. that we can attach the method too\\)\nFor those who aren't aware, singledispatch \\(and singledispatchmethod\\) are a\npart of the standard library when the type of the first argument is used to\ndetermine which implementation to call. If you are familiar with C++ or Java\nthis is very similar to method overloading, the one caveat is that it _only_\nexamines the type of the first argument, not the full signature.\")| Jan 21, 2025  \n[.asf.yaml](/apache/airflow/blob/main/.asf.yaml \".asf.yaml\")| [.asf.yaml](/apache/airflow/blob/main/.asf.yaml \".asf.yaml\")| [Revert \"Disable branch protection for old, inactive releases temporar…](/apache/airflow/commit/001dca31c6de8636cd8047f7931737e52f26d292 \"Revert \"Disable branch protection for old, inactive releases temporarily \\(#45592\\)\" \\(#45594\\)\nThis reverts commit a1fab3d69552d8cdf18ce33ee5ba2f57addb8a31.\")| Jan 12, 2025  \n[.bash_completion](/apache/airflow/blob/main/.bash_completion \".bash_completion\")| [.bash_completion](/apache/airflow/blob/main/.bash_completion \".bash_completion\")| [[](/apache/airflow/commit/286aa7a5817372a19c8e0be8c447021eb66dac6c \"\\[AIRFLOW-3611\\] Simplified development environment \\(#4932\\)\")[AIRFLOW-3611](https://issues.apache.org/jira/browse/AIRFLOW-3611)[] Simplified development environment (](/apache/airflow/commit/286aa7a5817372a19c8e0be8c447021eb66dac6c \"\\[AIRFLOW-3611\\] Simplified development environment \\(#4932\\)\")[#4932](https://github.com/apache/airflow/pull/4932)[)](/apache/airflow/commit/286aa7a5817372a19c8e0be8c447021eb66dac6c \"\\[AIRFLOW-3611\\] Simplified development environment \\(#4932\\)\")| Aug 27, 2019  \n[.cherry_picker.toml](/apache/airflow/blob/main/.cherry_picker.toml \".cherry_picker.toml\")| [.cherry_picker.toml](/apache/airflow/blob/main/.cherry_picker.toml \".cherry_picker.toml\")| [Enable draft_pr config for backport pr's (](/apache/airflow/commit/6c4eb3cb3365204fc8df82d60f83037c1cab893b \"Enable draft_pr config for backport pr's \\(#45778\\)\")[#45778](https://github.com/apache/airflow/pull/45778)[)](/apache/airflow/commit/6c4eb3cb3365204fc8df82d60f83037c1cab893b \"Enable draft_pr config for backport pr's \\(#45778\\)\")| Jan 18, 2025  \n[.codespellignorelines](/apache/airflow/blob/main/.codespellignorelines \".codespellignorelines\")| [.codespellignorelines](/apache/airflow/blob/main/.codespellignorelines \".codespellignorelines\")| [Add prettier formatting for www (](/apache/airflow/commit/0db38ad1a2cf403eb546f027f2e5673610626f47 \"Add prettier formatting for www \\(#29768\\)\n* Add prettier formatter for www\n* Ignore markdown as formatted by eslint\n* Fix CI\n* Update CONTRIBUTING.rst\")[#29768](https://github.com/apache/airflow/pull/29768)[)](/apache/airflow/commit/0db38ad1a2cf403eb546f027f2e5673610626f47 \"Add prettier formatting for www \\(#29768\\)\n* Add prettier formatter for www\n* Ignore markdown as formatted by eslint\n* Fix CI\n* Update CONTRIBUTING.rst\")| Feb 27, 2023  \n[.dockerignore](/apache/airflow/blob/main/.dockerignore \".dockerignore\")| [.dockerignore](/apache/airflow/blob/main/.dockerignore \".dockerignore\")| [Move first provider (airbyte) to a separate project (](/apache/airflow/commit/1cf1d628404ab62f979d2b0d9936ca5af001f44f \"Move first provider \\(airbyte\\) to a separate project \\(#45259\\)\nThis is the first step to move providers to separate\nprojects inside our monorepo.\nAirbyte is a first provider that is separated out to a\nproject under \"providers/<PROVIDER_ID>\" directory. This has\nthe nice property that all files belonging to the same provider\nare under a single directory that is part of the Airflow\nworkspace. For now the code is more complex because we are\nhandling providers being in either \"old\" or \"new\" structure, but\nonce we move old providers to the new structure, a lot of code\ncould be removed and simplified.\nThe new structure for provider code is:\n```\nproviders\n    |- PROVIDER_ID\n    |      |- src\n    |      |  |-airflow\n    |      |      |- providers\n    |      |            |- PROVIDER_ID\n    |      |- tests\n    |      |   |- providers\n    |      |         |- PROVIDER_ID\n    |      |- docs\n    |      |   |- .latest-doc-only-changes.txt\n    |      |- pyproject.toml\n    |      |- CHANGELOG.rst\n    |      |- provider.yaml\n    |      |- README.rst\n    |- PROVIDER_ID2\n    ...\n```\")[#45259](https://github.com/apache/airflow/pull/45259)[)](/apache/airflow/commit/1cf1d628404ab62f979d2b0d9936ca5af001f44f \"Move first provider \\(airbyte\\) to a separate project \\(#45259\\)\nThis is the first step to move providers to separate\nprojects inside our monorepo.\nAirbyte is a first provider that is separated out to a\nproject under \"providers/<PROVIDER_ID>\" directory. This has\nthe nice property that all files belonging to the same provider\nare under a single directory that is part of the Airflow\nworkspace. For now the code is more complex because we are\nhandling providers being in either \"old\" or \"new\" structure, but\nonce we move old providers to the new structure, a lot of code\ncould be removed and simplified.\nThe new structure for provider code is:\n```\nproviders\n    |- PROVIDER_ID\n    |      |- src\n    |      |  |-airflow\n    |      |      |- providers\n    |      |            |- PROVIDER_ID\n    |      |- tests\n    |      |   |- providers\n    |      |         |- PROVIDER_ID\n    |      |- docs\n    |      |   |- .latest-doc-only-changes.txt\n    |      |- pyproject.toml\n    |      |- CHANGELOG.rst\n    |      |- provider.yaml\n    |      |- README.rst\n    |- PROVIDER_ID2\n    ...\n```\")| Jan 14, 2025  \n[.editorconfig](/apache/airflow/blob/main/.editorconfig \".editorconfig\")| [.editorconfig](/apache/airflow/blob/main/.editorconfig \".editorconfig\")| [Add error handling for encoding the dag runs (](/apache/airflow/commit/a10b98e8eaf068922b705fba28db79ff00508b39 \"Add error handling for encoding the dag runs \\(#40222\\)\")[#40222](https://github.com/apache/airflow/pull/40222)[)](/apache/airflow/commit/a10b98e8eaf068922b705fba28db79ff00508b39 \"Add error handling for encoding the dag runs \\(#40222\\)\")| Jul 16, 2024  \n[.git-blame-ignore-revs](/apache/airflow/blob/main/.git-blame-ignore-revs \".git-blame-ignore-revs\")| [.git-blame-ignore-revs](/apache/airflow/blob/main/.git-blame-ignore-revs \".git-blame-ignore-revs\")| [Ignore](/apache/airflow/commit/8831db299c20c5f8fe8122fda2acfb4ee68730b7 \"Ignore #38240 from git blame \\(#38256\\)\") [#38240](https://github.com/apache/airflow/pull/38240) [from git blame (](/apache/airflow/commit/8831db299c20c5f8fe8122fda2acfb4ee68730b7 \"Ignore #38240 from git blame \\(#38256\\)\")[#38256](https://github.com/apache/airflow/pull/38256)[)](/apache/airflow/commit/8831db299c20c5f8fe8122fda2acfb4ee68730b7 \"Ignore #38240 from git blame \\(#38256\\)\")| Mar 18, 2024  \n[.gitattributes](/apache/airflow/blob/main/.gitattributes \".gitattributes\")| [.gitattributes](/apache/airflow/blob/main/.gitattributes \".gitattributes\")| [Move CI documentation to inside Breeze docs (](/apache/airflow/commit/6daceb844c53a4e6c94b516d4f77e684a7de5b7f \"Move CI documentation to inside Breeze docs \\(#37039\\)\nThis PR moves the documentation of CI of ours to inside Breeze\ndoc folder and splits the documentation in separate docs / chapters\nfollowing similar changes done for Breeze docs #36936 and the\ncontributing docs #36969.\")[#37039](https://github.com/apache/airflow/pull/37039)[)](/apache/airflow/commit/6daceb844c53a4e6c94b516d4f77e684a7de5b7f \"Move CI documentation to inside Breeze docs \\(#37039\\)\nThis PR moves the documentation of CI of ours to inside Breeze\ndoc folder and splits the documentation in separate docs / chapters\nfollowing similar changes done for Breeze docs #36936 and the\ncontributing docs #36969.\")| Jan 27, 2024  \n[.gitignore](/apache/airflow/blob/main/.gitignore \".gitignore\")| [.gitignore](/apache/airflow/blob/main/.gitignore \".gitignore\")| [Explain how to use uv with airflow virtualenv and make it works (](/apache/airflow/commit/229c6a3e4673db03119c78828e546ebae272ef75 \"Explain how to use uv with airflow virtualenv and make it works \\(#43604\\)\nSince we are switching to ``uv`` as our main development tooling,\nwe should explain how to use ``uv`` with airflow and explain some\nbasic commands that should be used to have a workign uv-manaaged venv.\nThis documentation explains some why's and initial hows with uv,\nalso it fixes uv to work on macos with some default extras - such\nas devel, devel-tests and --all-extras, so that it works on a wider\nrange of systems \\(includin MacOS\\). This includes making plyvel not\ninstalled on MacOS, because it's next to impossible to compile\nlevelDB on a modern MacOS Operating system and it is anyway an\noptional component of google provider.\nFixes: #43200\")[#43604](https://github.com/apache/airflow/pull/43604)[)](/apache/airflow/commit/229c6a3e4673db03119c78828e546ebae272ef75 \"Explain how to use uv with airflow virtualenv and make it works \\(#43604\\)\nSince we are switching to ``uv`` as our main development tooling,\nwe should explain how to use ``uv`` with airflow and explain some\nbasic commands that should be used to have a workign uv-manaaged venv.\nThis documentation explains some why's and initial hows with uv,\nalso it fixes uv to work on macos with some default extras - such\nas devel, devel-tests and --all-extras, so that it works on a wider\nrange of systems \\(includin MacOS\\). This includes making plyvel not\ninstalled on MacOS, because it's next to impossible to compile\nlevelDB on a modern MacOS Operating system and it is anyway an\noptional component of google provider.\nFixes: #43200\")| Nov 2, 2024  \n[.gitpod.yml](/apache/airflow/blob/main/.gitpod.yml \".gitpod.yml\")| [.gitpod.yml](/apache/airflow/blob/main/.gitpod.yml \".gitpod.yml\")| [Add Gitpod workspace with a Breeze compatible python (](/apache/airflow/commit/ab6e623cb1a75f54fc419cee66a16e3d8ff1adc2 \"Add Gitpod workspace with a Breeze compatible python \\(#35531\\)\n* Add Gitpod workspace with Breeze compatible python\")[#35531](https://github.com/apache/airflow/pull/35531)[)](/apache/airflow/commit/ab6e623cb1a75f54fc419cee66a16e3d8ff1adc2 \"Add Gitpod workspace with a Breeze compatible python \\(#35531\\)\n* Add Gitpod workspace with Breeze compatible python\")| Nov 8, 2023  \n[.hadolint.yaml](/apache/airflow/blob/main/.hadolint.yaml \".hadolint.yaml\")| [.hadolint.yaml](/apache/airflow/blob/main/.hadolint.yaml \".hadolint.yaml\")| [Allow to switch easily between Bullseye and Buster debian versions (](/apache/airflow/commit/c1abd638ad70e3e325748308a9aeef92b5e79ccd \"Allow to switch easily between Bullseye and Buster debian versions \\(#21546\\)\nWe are preparing to switch from Buster to Bullseye and this is\nthe second change that is needed \\(following #21522\\). This change\nallows to choose whether we want to use Buster or Bullseye images\nas a base. We need to be able to choose, because:\n1\\) we want to keep backwards compatibility and continue our\n  users to build Buster-base images\n2\\) we cannot yet fully switch to Bullseye because MsSQL's odbc\n  driver does not yet support Bullseye and we reached out to\n  mysql maintainers to learn about their plans to make the\n  decision on when and how we are going to support Bullseye and\n  MSSQL.\n  Details of this discussion are in:\n  https://github.com/MicrosoftDocs/sql-docs/issues/7255#issuecomment-1037097131\nThis PR adds the capability of choosing the DEBIAN_VERSION in\nBreeze when building images but does not yet switch from Buster to\nBullseye\")[#…](https://github.com/apache/airflow/pull/21546)| Feb 28, 2022  \n[.mailmap](/apache/airflow/blob/main/.mailmap \".mailmap\")| [.mailmap](/apache/airflow/blob/main/.mailmap \".mailmap\")| [Correct mailmap for Jarek Potiuk (](/apache/airflow/commit/53c01228d350dff1348bd9576a75febaae7473a9 \"Correct mailmap for Jarek Potiuk \\(#26586\\)\nI've noticed that mailmap for myself \\(set a long time ago by Ry\\)\nhas the old address of mine \\(alread non-functional\\) and despite\nall commits being done as primary address, they were showing up\nwith the mail-mapped one.\")[#26586](https://github.com/apache/airflow/pull/26586)[)](/apache/airflow/commit/53c01228d350dff1348bd9576a75febaae7473a9 \"Correct mailmap for Jarek Potiuk \\(#26586\\)\nI've noticed that mailmap for myself \\(set a long time ago by Ry\\)\nhas the old address of mine \\(alread non-functional\\) and despite\nall commits being done as primary address, they were showing up\nwith the mail-mapped one.\")| Sep 22, 2022  \n[.markdownlint.yml](/apache/airflow/blob/main/.markdownlint.yml \".markdownlint.yml\")| [.markdownlint.yml](/apache/airflow/blob/main/.markdownlint.yml \".markdownlint.yml\")| [Add docs to the markdownlint and yamllint config files (](/apache/airflow/commit/b7b17641d0c17bfa5e1f8c77b9c232da73bbedcd \"Add docs to the markdownlint and yamllint config files \\(#15682\\)\")[#15682](https://github.com/apache/airflow/pull/15682)[)](/apache/airflow/commit/b7b17641d0c17bfa5e1f8c77b9c232da73bbedcd \"Add docs to the markdownlint and yamllint config files \\(#15682\\)\")| May 6, 2021  \n[.pre-commit-config.yaml](/apache/airflow/blob/main/.pre-commit-config.yaml \".pre-commit-config.yaml\")| [.pre-commit-config.yaml](/apache/airflow/blob/main/.pre-commit-config.yaml \".pre-commit-config.yaml\")| [Bring back mypy checks for new-structure providers (](/apache/airflow/commit/2f3601de8a8b30bc7c4033af97a50c7c55add2bf \"Bring back mypy checks for new-structure providers \\(#45815\\)\nThe providers moved to the news structure have not been chedked\nby mypy checks when run in \"canary\" or \"full tests needed\" builds. This\nchange adds possibility to pass multiple folders to mypy check and adds\nspecial \"all_new_providers\" special argument that gets automatically\nresolved to all new provider folders.\nAlso few mypy checks started to appear and they are fixed now.\")[#45815](https://github.com/apache/airflow/pull/45815)[)](/apache/airflow/commit/2f3601de8a8b30bc7c4033af97a50c7c55add2bf \"Bring back mypy checks for new-structure providers \\(#45815\\)\nThe providers moved to the news structure have not been chedked\nby mypy checks when run in \"canary\" or \"full tests needed\" builds. This\nchange adds possibility to pass multiple folders to mypy check and adds\nspecial \"all_new_providers\" special argument that gets automatically\nresolved to all new provider folders.\nAlso few mypy checks started to appear and they are fixed now.\")| Jan 20, 2025  \n[.rat-excludes](/apache/airflow/blob/main/.rat-excludes \".rat-excludes\")| [.rat-excludes](/apache/airflow/blob/main/.rat-excludes \".rat-excludes\")| [UI ESLint (](/apache/airflow/commit/30925c739b60d8a54d84c7c58a3ab854c167f2c1 \"UI ESLint \\(#42184\\)\n* 🚨 new ESLint rules and configuration.\n* 🚨 fix all linting errors.\n* 🚚 fix component casing.\n* 🔧 add new import sorting for prettier.\n* 🚨 apply new sorting of imports.\n* 🔧 add missing `noUncheckedIndexedAccess` setting to avoid potential mistakes with index access.\n* 📄 add license to `prettier.config.js`\n* 🎨 format code examples to use spaces instead of tabs.\n* 🎨 format openapi-gen files.\n* 🔧 exclude `pnpm-lock.yaml` from adding a license.\n* 🔧 add ignore of `pnpm-lock.yaml` in more places.\n🌐 add statics word.\n* 🔧 add `.vscode/settings.json`\n* 🔧 add `*.tsbuildinfo` to `.gitignore`.\n⬇️ downgrade typescript.\n* 🔧 revert `.vscode` files ignore in gitignore.\n🔥 remove `settings.json` for now.\n* ⏪ revert formatting in .pre-commit-config.yaml\n* 🚚 change casing of files to match main.\n* 🔀 fix main merge issues -_-\n* 🚚 fix incorrect main file casing change.\n* 🔥 delete duplicated files that were moved in main.\n* 🎨 add missing space in pre-commit-config\n* ✏️ fix pnpm-lock.yaml\n* 🔧 fix dist ignoring.\n* 🤔 Lint and fox vite.config.ts.\")[#42184](https://github.com/apache/airflow/pull/42184)[)](/apache/airflow/commit/30925c739b60d8a54d84c7c58a3ab854c167f2c1 \"UI ESLint \\(#42184\\)\n* 🚨 new ESLint rules and configuration.\n* 🚨 fix all linting errors.\n* 🚚 fix component casing.\n* 🔧 add new import sorting for prettier.\n* 🚨 apply new sorting of imports.\n* 🔧 add missing `noUncheckedIndexedAccess` setting to avoid potential mistakes with index access.\n* 📄 add license to `prettier.config.js`\n* 🎨 format code examples to use spaces instead of tabs.\n* 🎨 format openapi-gen files.\n* 🔧 exclude `pnpm-lock.yaml` from adding a license.\n* 🔧 add ignore of `pnpm-lock.yaml` in more places.\n🌐 add statics word.\n* 🔧 add `.vscode/settings.json`\n* 🔧 add `*.tsbuildinfo` to `.gitignore`.\n⬇️ downgrade typescript.\n* 🔧 revert `.vscode` files ignore in gitignore.\n🔥 remove `settings.json` for now.\n* ⏪ revert formatting in .pre-commit-config.yaml\n* 🚚 change casing of files to match main.\n* 🔀 fix main merge issues -_-\n* 🚚 fix incorrect main file casing change.\n* 🔥 delete duplicated files that were moved in main.\n* 🎨 add missing space in pre-commit-config\n* ✏️ fix pnpm-lock.yaml\n* 🔧 fix dist ignoring.\n* 🤔 Lint and fox vite.config.ts.\")| Sep 16, 2024  \n[.readthedocs.yml](/apache/airflow/blob/main/.readthedocs.yml \".readthedocs.yml\")| [.readthedocs.yml](/apache/airflow/blob/main/.readthedocs.yml \".readthedocs.yml\")| [Drop python3.8 support core and providers (](/apache/airflow/commit/63ff22f4038f34354dc5807036d1bf10653c2ecd \"Drop python3.8 support core and providers \\(#42766\\)\n* Drop Python 3.8 support in core\nAdd newsfragment\n* Drop Python 3.8 support in provider packages\")[#42766](https://github.com/apache/airflow/pull/42766)[)](/apache/airflow/commit/63ff22f4038f34354dc5807036d1bf10653c2ecd \"Drop python3.8 support core and providers \\(#42766\\)\n* Drop Python 3.8 support in core\nAdd newsfragment\n* Drop Python 3.8 support in provider packages\")| Oct 8, 2024  \n[BREEZE.rst](/apache/airflow/blob/main/BREEZE.rst \"BREEZE.rst\")| [BREEZE.rst](/apache/airflow/blob/main/BREEZE.rst \"BREEZE.rst\")| [Split contributing docs to multiple files (](/apache/airflow/commit/8708bffa879e57a3c9379376fee5d6186027412d \"Split contributing docs to multiple files \\(#36969\\)\nFollowing #36936 and the fact that GitHub stopped rendering big .rst\nfiles, we also split CONTRIBUTING.rst into multiplet files. It will be\nmuch easier to follow and it will render in GitHub.\")[#36969](https://github.com/apache/airflow/pull/36969)[)](/apache/airflow/commit/8708bffa879e57a3c9379376fee5d6186027412d \"Split contributing docs to multiple files \\(#36969\\)\nFollowing #36936 and the fact that GitHub stopped rendering big .rst\nfiles, we also split CONTRIBUTING.rst into multiplet files. It will be\nmuch easier to follow and it will render in GitHub.\")| Jan 26, 2024  \n[CODE_OF_CONDUCT.md](/apache/airflow/blob/main/CODE_OF_CONDUCT.md \"CODE_OF_CONDUCT.md\")| [CODE_OF_CONDUCT.md](/apache/airflow/blob/main/CODE_OF_CONDUCT.md \"CODE_OF_CONDUCT.md\")| [Add Apache Airflow CODE_OF_CONDUCT.md (](/apache/airflow/commit/d8205676495319f51bfe6b45a3f99e59e5dbe504 \"Add Apache Airflow CODE_OF_CONDUCT.md \\(#9715\\)\")[#9715](https://github.com/apache/airflow/pull/9715)[)](/apache/airflow/commit/d8205676495319f51bfe6b45a3f99e59e5dbe504 \"Add Apache Airflow CODE_OF_CONDUCT.md \\(#9715\\)\")| Aug 5, 2020  \n[COMMITTERS.rst](/apache/airflow/blob/main/COMMITTERS.rst \"COMMITTERS.rst\")| [COMMITTERS.rst](/apache/airflow/blob/main/COMMITTERS.rst \"COMMITTERS.rst\")| [Clarify instructions for adding committers in `airflow-site` in COMMI…](/apache/airflow/commit/031444dc02e451269d9dfec8875f8fed3d98bfff \"Clarify instructions for adding committers in `airflow-site` in COMMITTERS.rst \\(#40877\\)\")| Jul 19, 2024  \n[CONTRIBUTING.rst](/apache/airflow/blob/main/CONTRIBUTING.rst \"CONTRIBUTING.rst\")| [CONTRIBUTING.rst](/apache/airflow/blob/main/CONTRIBUTING.rst \"CONTRIBUTING.rst\")| [Replace non-functional TOC directive with explanation where to look (](/apache/airflow/commit/1c7fe71fb8356b07be481d9fc10d098730b72190 \"Replace non-functional TOC directive with explanation where to look \\(#39901\\)\nGitHub stopped rendering .. contents:: :local: in their UI and instead\nopt for expandable table of content that can be shown by clicking\nan \"index\" button at the top-right of the page. It's really nice\nwhen you know it but it's not easily discoverable. Seems that this\nis a deliberate choice and there is no going back, so best approach\nwe can do is to explain it to the users by replacing the index with\nexplanation where to look for it.\nMore details here: https://github.com/github/markup/issues/1798\")[#…](https://github.com/apache/airflow/pull/39901)| May 28, 2024  \n[Dockerfile](/apache/airflow/blob/main/Dockerfile \"Dockerfile\")| [Dockerfile](/apache/airflow/blob/main/Dockerfile \"Dockerfile\")| [Bump UV to 0.5.20 (](/apache/airflow/commit/3da6796728df04419d153a36557b38b77c40de14 \"Bump UV to 0.5.20 \\(#45750\\)\")[#45750](https://github.com/apache/airflow/pull/45750)[)](/apache/airflow/commit/3da6796728df04419d153a36557b38b77c40de14 \"Bump UV to 0.5.20 \\(#45750\\)\")| Jan 17, 2025  \n[Dockerfile.ci](/apache/airflow/blob/main/Dockerfile.ci \"Dockerfile.ci\")| [Dockerfile.ci](/apache/airflow/blob/main/Dockerfile.ci \"Dockerfile.ci\")| [Bump UV to 0.5.20 (](/apache/airflow/commit/3da6796728df04419d153a36557b38b77c40de14 \"Bump UV to 0.5.20 \\(#45750\\)\")[#45750](https://github.com/apache/airflow/pull/45750)[)](/apache/airflow/commit/3da6796728df04419d153a36557b38b77c40de14 \"Bump UV to 0.5.20 \\(#45750\\)\")| Jan 17, 2025  \n[INSTALL](/apache/airflow/blob/main/INSTALL \"INSTALL\")| [INSTALL](/apache/airflow/blob/main/INSTALL \"INSTALL\")| [Recommend and use `uv` instead of `pipx` in a few remaining places (](/apache/airflow/commit/c89ab99aced32c854a7806f3a2e00f8eaeb0764a \"Recommend and use ``uv`` instead of ``pipx`` in a few remaining places \\(#43866\\)\nThe ``pipx`` has still been used and recommended in a few places\nin our documentation and in a few scripts/github actions.\nWe also installed pipx in the container image to be able to run\nmmsql-cli, but this is not needed any more as mssql is not\nsupported as metadata backend.\nThis PR updates the remaining parts.\")| Nov 11, 2024  \n[INTHEWILD.md](/apache/airflow/blob/main/INTHEWILD.md \"INTHEWILD.md\")| [INTHEWILD.md](/apache/airflow/blob/main/INTHEWILD.md \"INTHEWILD.md\")| [Added Appier to the list of companies using Apache Airflow (](/apache/airflow/commit/916ca469c8f040ac68771afdf4c8ef1f20e9da07 \"Added Appier to the list of companies using Apache Airflow \\(#45822\\)\")[#45822](https://github.com/apache/airflow/pull/45822)[)](/apache/airflow/commit/916ca469c8f040ac68771afdf4c8ef1f20e9da07 \"Added Appier to the list of companies using Apache Airflow \\(#45822\\)\")| Jan 21, 2025  \n[ISSUE_TRIAGE_PROCESS.rst](/apache/airflow/blob/main/ISSUE_TRIAGE_PROCESS.rst \"ISSUE_TRIAGE_PROCESS.rst\")| [ISSUE_TRIAGE_PROCESS.rst](/apache/airflow/blob/main/ISSUE_TRIAGE_PROCESS.rst \"ISSUE_TRIAGE_PROCESS.rst\")| [update issue triage process to improve Dosu bot quality (](/apache/airflow/commit/dc59212b8522a33c42ab57c7d256d2c6c76e92f0 \"update issue triage process to improve Dosu bot quality \\(#43511\\)\")[#43511](https://github.com/apache/airflow/pull/43511)[)](/apache/airflow/commit/dc59212b8522a33c42ab57c7d256d2c6c76e92f0 \"update issue triage process to improve Dosu bot quality \\(#43511\\)\")| Oct 30, 2024  \n[LICENSE](/apache/airflow/blob/main/LICENSE \"LICENSE\")| [LICENSE](/apache/airflow/blob/main/LICENSE \"LICENSE\")| [fix typo and path to licences folder (](/apache/airflow/commit/fcb9f87c55a30da2c727881ff6cf47aca25dae78 \"fix typo and path to licences folder \\(#40067\\)\")[#40067](https://github.com/apache/airflow/pull/40067)[)](/apache/airflow/commit/fcb9f87c55a30da2c727881ff6cf47aca25dae78 \"fix typo and path to licences folder \\(#40067\\)\")| Jun 5, 2024  \n[NOTICE](/apache/airflow/blob/main/NOTICE \"NOTICE\")| [NOTICE](/apache/airflow/blob/main/NOTICE \"NOTICE\")| [Updated year in NOTICE (](/apache/airflow/commit/1f0bd6d7a3c1f6ab6503c76637a64c02c55b433a \"Updated year in NOTICE \\(#45333\\)\")[#45333](https://github.com/apache/airflow/pull/45333)[)](/apache/airflow/commit/1f0bd6d7a3c1f6ab6503c76637a64c02c55b433a \"Updated year in NOTICE \\(#45333\\)\")| Jan 2, 2025  \n[PROVIDERS.rst](/apache/airflow/blob/main/PROVIDERS.rst \"PROVIDERS.rst\")| [PROVIDERS.rst](/apache/airflow/blob/main/PROVIDERS.rst \"PROVIDERS.rst\")| [Update link to provider life cycle doc (](/apache/airflow/commit/59520efd2a527cfa253e4b23727c0851ef9f4269 \"Update link to provider life cycle doc \\(#45153\\)\")[#45153](https://github.com/apache/airflow/pull/45153)[)](/apache/airflow/commit/59520efd2a527cfa253e4b23727c0851ef9f4269 \"Update link to provider life cycle doc \\(#45153\\)\")| Dec 22, 2024  \n[README.md](/apache/airflow/blob/main/README.md \"README.md\")| [README.md](/apache/airflow/blob/main/README.md \"README.md\")| [Airflow 2.10.4 has been released (](/apache/airflow/commit/6b554301fce4a52dd648be95a5124c9ae3d08670 \"Airflow 2.10.4 has been released \\(#44958\\)\")[#44958](https://github.com/apache/airflow/pull/44958)[)](/apache/airflow/commit/6b554301fce4a52dd648be95a5124c9ae3d08670 \"Airflow 2.10.4 has been released \\(#44958\\)\")| Dec 16, 2024  \n[RELEASE_NOTES.rst](/apache/airflow/blob/main/RELEASE_NOTES.rst \"RELEASE_NOTES.rst\")| [RELEASE_NOTES.rst](/apache/airflow/blob/main/RELEASE_NOTES.rst \"RELEASE_NOTES.rst\")| [Airflow 2.10.4 has been released (](/apache/airflow/commit/6b554301fce4a52dd648be95a5124c9ae3d08670 \"Airflow 2.10.4 has been released \\(#44958\\)\")[#44958](https://github.com/apache/airflow/pull/44958)[)](/apache/airflow/commit/6b554301fce4a52dd648be95a5124c9ae3d08670 \"Airflow 2.10.4 has been released \\(#44958\\)\")| Dec 16, 2024  \n[codecov.yml](/apache/airflow/blob/main/codecov.yml \"codecov.yml\")| [codecov.yml](/apache/airflow/blob/main/codecov.yml \"codecov.yml\")| [Initialize new airflow/ui directory (](/apache/airflow/commit/b8a25b980265b26282f3414f1fdf5dab01fd5185 \"Initialize new airflow/ui directory \\(#41846\\)\n* Initialize new airflow/ui directory\nconfigure flask blueprint and render real dags list\nAdd banner to switch back and forth between UIs\nAdd readme\nbasic test setup, chakra not working\nMove Flask blueprint, build navbar\nSwitch to react with working tests\nBasic hot refresh\nadd prettier\ndo not render the new UI banner on loggin page\nadd pre-commits to ui\nadd CI integration\nupdate doc accordingly\nredirect to login page on 401+403 errors\nupdate lint command\nupdate lint, lint:fix command\nAdd codegen to pre-commit\nAdd ui to breeze\nUpdate build commands\n* Fix dev favicon and table strip css bleedover\n* breeze and CI fixes\n* Fix github actions\n* Try fixing selective checks and github actions again\n* set pnpm cache-dependency-path\n* Fix breeze static checks\n* fix ci\n* Update CONTRIBUTING.md\n---------\nCo-authored-by: pierrejeambrun <pierrejbrun@gmail.com>\")[#41846](https://github.com/apache/airflow/pull/41846)[)](/apache/airflow/commit/b8a25b980265b26282f3414f1fdf5dab01fd5185 \"Initialize new airflow/ui directory \\(#41846\\)\n* Initialize new airflow/ui directory\nconfigure flask blueprint and render real dags list\nAdd banner to switch back and forth between UIs\nAdd readme\nbasic test setup, chakra not working\nMove Flask blueprint, build navbar\nSwitch to react with working tests\nBasic hot refresh\nadd prettier\ndo not render the new UI banner on loggin page\nadd pre-commits to ui\nadd CI integration\nupdate doc accordingly\nredirect to login page on 401+403 errors\nupdate lint command\nupdate lint, lint:fix command\nAdd codegen to pre-commit\nAdd ui to breeze\nUpdate build commands\n* Fix dev favicon and table strip css bleedover\n* breeze and CI fixes\n* Fix github actions\n* Try fixing selective checks and github actions again\n* set pnpm cache-dependency-path\n* Fix breeze static checks\n* fix ci\n* Update CONTRIBUTING.md\n---------\nCo-authored-by: pierrejeambrun <pierrejbrun@gmail.com>\")| Aug 30, 2024  \n[doap_airflow.rdf](/apache/airflow/blob/main/doap_airflow.rdf \"doap_airflow.rdf\")| [doap_airflow.rdf](/apache/airflow/blob/main/doap_airflow.rdf \"doap_airflow.rdf\")| [Update mailing list information in DOAP (](/apache/airflow/commit/e5dd577a03405f0b84dda821030800ecd7852a02 \"Update mailing list information in DOAP \\(#34131\\)\nThe mailing list link in DOAP is rendered as \"mailto:\" link at\nthe https://projects.apache.org/project.html?airflow page so\nwe should change it to regular email address.\")[#34131](https://github.com/apache/airflow/pull/34131)[)](/apache/airflow/commit/e5dd577a03405f0b84dda821030800ecd7852a02 \"Update mailing list information in DOAP \\(#34131\\)\nThe mailing list link in DOAP is rendered as \"mailto:\" link at\nthe https://projects.apache.org/project.html?airflow page so\nwe should change it to regular email address.\")| Sep 6, 2023  \n[hatch_build.py](/apache/airflow/blob/main/hatch_build.py \"hatch_build.py\")| [hatch_build.py](/apache/airflow/blob/main/hatch_build.py \"hatch_build.py\")| [Upgrade sphinx and related dependencies (](/apache/airflow/commit/a51ebe43780afc7ba95453a46fd3b8bfae450540 \"Upgrade sphinx and related dependencies \\(#45563\\)\n* Upgrade sphinx and related dependencies\n* TEST COMMIT - DO NOT MERGE: modify airflow-site layout.html via Dockerfile.ci\n* fixup! TEST COMMIT - DO NOT MERGE: modify airflow-site layout.html via Dockerfile.ci\n* fixup! fixup! TEST COMMIT - DO NOT MERGE: modify airflow-site layout.html via Dockerfile.ci\n* Apply changes to css\n* Revert changes to Dockerfile.ci\n* Pull new Theme\n* Further CSS Patches to get closer\n* Remove duplicates\n---------\nCo-authored-by: Jarek Potiuk <jarek@potiuk.com>\nCo-authored-by: Jens Scheffler <95105677+jscheffl@users.noreply.github.com>\nCo-authored-by: Epstein, Shahar <shahar.epstein@ncrvoyix.com>\")[#45563](https://github.com/apache/airflow/pull/45563)[)](/apache/airflow/commit/a51ebe43780afc7ba95453a46fd3b8bfae450540 \"Upgrade sphinx and related dependencies \\(#45563\\)\n* Upgrade sphinx and related dependencies\n* TEST COMMIT - DO NOT MERGE: modify airflow-site layout.html via Dockerfile.ci\n* fixup! TEST COMMIT - DO NOT MERGE: modify airflow-site layout.html via Dockerfile.ci\n* fixup! fixup! TEST COMMIT - DO NOT MERGE: modify airflow-site layout.html via Dockerfile.ci\n* Apply changes to css\n* Revert changes to Dockerfile.ci\n* Pull new Theme\n* Further CSS Patches to get closer\n* Remove duplicates\n---------\nCo-authored-by: Jarek Potiuk <jarek@potiuk.com>\nCo-authored-by: Jens Scheffler <95105677+jscheffl@users.noreply.github.com>\nCo-authored-by: Epstein, Shahar <shahar.epstein@ncrvoyix.com>\")| Jan 12, 2025  \n[prod_image_installed_providers.txt](/apache/airflow/blob/main/prod_image_installed_providers.txt \"prod_image_installed_providers.txt\")| [prod_image_installed_providers.txt](/apache/airflow/blob/main/prod_image_installed_providers.txt \"prod_image_installed_providers.txt\")| [Add standard provider to chicken-egg-providers (](/apache/airflow/commit/e46006b25b025eee2feb5aedcb3bb01069a4b730 \"Add standard provider to chicken-egg-providers \\(#42760\\)\nStandard provider should be added to chicken-egg-providers as it\nhas not yet been officially released, so we need to add it.\nThis can only be done via \"apache\" PR as it is needed in build-images\nworkflow. This is needed to unblock #42252\")[#42760](https://github.com/apache/airflow/pull/42760)[)](/apache/airflow/commit/e46006b25b025eee2feb5aedcb3bb01069a4b730 \"Add standard provider to chicken-egg-providers \\(#42760\\)\nStandard provider should be added to chicken-egg-providers as it\nhas not yet been officially released, so we need to add it.\nThis can only be done via \"apache\" PR as it is needed in build-images\nworkflow. This is needed to unblock #42252\")| Oct 7, 2024  \n[pyproject.toml](/apache/airflow/blob/main/pyproject.toml \"pyproject.toml\")| [pyproject.toml](/apache/airflow/blob/main/pyproject.toml \"pyproject.toml\")| [move Celery provider to new provider code structure (](/apache/airflow/commit/25aeb1166e6e8d093892ad3a7b1a341375b0cf51 \"move Celery provider to new provider code structure \\(#45786\\)\nThis also solves quite a few teething issues with providers move:\n* Boring-Cyborg only needs only one-liner now for new providers\n* Additional-Extras in new provider is moved to \"optional-dependencies\"\n in pyproject.toml\n* generated pyproject.toml in new providers has better comments now\n explaining that dependencies can be edited in-place even if the file\n is generated\n* comments in dependencies are preserved when regenerating the\n pyproject.toml files\n* missing cross-project dependencies are added as optional-extras\n automatically when regenerating pyproject.toml\n* LICENSE file for providers does not contain additional projects\n that are included in Airflow LICENCE\n* Provider package tests do not have `__init__.py` in `providers`\n package - this way `celery` import is not importing the celery\n package from tests.providers\n* When preparing package with --version-suffix-for-pypi - the\n pyproject.toml is updated temporarily with suffix added to airflow\n dependencies\n* various constants in breeze code refering to providers were moved\n to path_utils and made consistent\n* in case generated pyproject.toml file with pypi suffix has an error,\n content of it is printed when generating package. Also the content of\n pyproject.toml is printed when --verbose flag is used.\")[#45786](https://github.com/apache/airflow/pull/45786)[)](/apache/airflow/commit/25aeb1166e6e8d093892ad3a7b1a341375b0cf51 \"move Celery provider to new provider code structure \\(#45786\\)\nThis also solves quite a few teething issues with providers move:\n* Boring-Cyborg only needs only one-liner now for new providers\n* Additional-Extras in new provider is moved to \"optional-dependencies\"\n in pyproject.toml\n* generated pyproject.toml in new providers has better comments now\n explaining that dependencies can be edited in-place even if the file\n is generated\n* comments in dependencies are preserved when regenerating the\n pyproject.toml files\n* missing cross-project dependencies are added as optional-extras\n automatically when regenerating pyproject.toml\n* LICENSE file for providers does not contain additional projects\n that are included in Airflow LICENCE\n* Provider package tests do not have `__init__.py` in `providers`\n package - this way `celery` import is not importing the celery\n package from tests.providers\n* When preparing package with --version-suffix-for-pypi - the\n pyproject.toml is updated temporarily with suffix added to airflow\n dependencies\n* various constants in breeze code refering to providers were moved\n to path_utils and made consistent\n* in case generated pyproject.toml file with pypi suffix has an error,\n content of it is printed when generating package. Also the content of\n pyproject.toml is printed when --verbose flag is used.\")| Jan 20, 2025  \n[yamllint-config.yml](/apache/airflow/blob/main/yamllint-config.yml \"yamllint-config.yml\")| [yamllint-config.yml](/apache/airflow/blob/main/yamllint-config.yml \"yamllint-config.yml\")| [Add docs to the markdownlint and yamllint config files (](/apache/airflow/commit/b7b17641d0c17bfa5e1f8c77b9c232da73bbedcd \"Add docs to the markdownlint and yamllint config files \\(#15682\\)\")[#15682](https://github.com/apache/airflow/pull/15682)[)](/apache/airflow/commit/b7b17641d0c17bfa5e1f8c77b9c232da73bbedcd \"Add docs to the markdownlint and yamllint config files \\(#15682\\)\")| May 6, 2021  \nView all files  \n  \n## Repository files navigation\n\n  * [README](#)\n  * [Code of conduct](#)\n  * [Apache-2.0 license](#)\n  * [Security](#)\n\n\n\n# Apache Airflow\n\n[](#apache-airflow)\n\n[![PyPI version](https://camo.githubusercontent.com/a6711b21a8ddfb2a3d68482156b6c566e486416dc724eda8dcc4f42455a5b1bf/68747470733a2f2f62616467652e667572792e696f2f70792f6170616368652d616972666c6f772e737667)](https://badge.fury.io/py/apache-airflow) [![GitHub Build](https://github.com/apache/airflow/actions/workflows/ci.yml/badge.svg)](https://github.com/apache/airflow/actions) [![Coverage Status](https://camo.githubusercontent.com/360912d178edf081f3f2c16520bfbf98d99f3f8db0482afff2227d03bfe81900/68747470733a2f2f636f6465636f762e696f2f67682f6170616368652f616972666c6f772f67726170682f62616467652e7376673f746f6b656e3d57644c4b6c4b484f4155)](https://codecov.io/gh/apache/airflow) [![License](https://camo.githubusercontent.com/34402eb0c5d5011594d3678d0e49dbd4accfaffe7e9b7f87f437617879ef4dd7/68747470733a2f2f696d672e736869656c64732e696f2f3a6c6963656e73652d417061636865253230322d626c75652e737667)](https://www.apache.org/licenses/LICENSE-2.0.txt) [![PyPI - Python Version](https://camo.githubusercontent.com/685551fcf590dafa561d49597259fe6379350b2197362eaa3c6621ed8e492ae9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6170616368652d616972666c6f772e737667)](https://pypi.org/project/apache-airflow/) [![Docker Pulls](https://camo.githubusercontent.com/23f76c7e187e3ce5326ca4d62b97b4b586381b3d0ec80d091523b84fffb5f7a2/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f6170616368652f616972666c6f772e737667)](https://hub.docker.com/r/apache/airflow) [![Docker Stars](https://camo.githubusercontent.com/5f62a5efadd9529bd7938dda341ea0f0bdc09fcded6b05a4a11943ca16d24868/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f73746172732f6170616368652f616972666c6f772e737667)](https://hub.docker.com/r/apache/airflow) [![PyPI - Downloads](https://camo.githubusercontent.com/7fa21c7c1055c47ac22aee996b574752139f00b93057a8d121f67a65664c224a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f6170616368652d616972666c6f77)](https://pypi.org/project/apache-airflow/) [![Artifact HUB](https://camo.githubusercontent.com/d0bd0f9ac07a52a7e3a89cf59722e247cc48d1dcef4af23360a1665661ba2e02/68747470733a2f2f696d672e736869656c64732e696f2f656e64706f696e743f75726c3d68747470733a2f2f61727469666163746875622e696f2f62616467652f7265706f7369746f72792f6170616368652d616972666c6f77)](https://artifacthub.io/packages/search?repo=apache-airflow) [![Code style: black](https://camo.githubusercontent.com/5bf9e9fa18966df7cb5fac7715bef6b72df15e01a6efa9d616c83f9fcb527fe2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667)](https://github.com/psf/black) [![Twitter Follow](https://camo.githubusercontent.com/6ef32a8a2d365bbe69076480143010e6f257ae15e5b5a9c895428a24e30cb4ad/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f417061636865416972666c6f772e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f77)](https://x.com/ApacheAirflow) [![Slack Status](https://camo.githubusercontent.com/c41dad444795ae0c93c987b19ad34ce396605cc24b978384546ae38020aa0194/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736c61636b2d6a6f696e5f636861742d77686974652e7376673f6c6f676f3d736c61636b267374796c653d736f6369616c)](https://s.apache.org/airflow-slack) [![Contributors](https://camo.githubusercontent.com/9f11b03030a79ec73022943b86df14eeb1fa9af80d2a31f559b765b702dea1c8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f6170616368652f616972666c6f77)](https://github.com/apache/airflow/graphs/contributors) [![OSSRank](https://camo.githubusercontent.com/07d520298c14ac6bc8dddade17afafaed0d60e240425ef5a7404cd209ae9b940/68747470733a2f2f736869656c64732e696f2f656e64706f696e743f75726c3d68747470733a2f2f6f737372616e6b2e636f6d2f736869656c642f36)](https://ossrank.com/p/6)\n\n![Apache Airflow logo](https://github.com/apache/airflow/raw/19ebcac2395ef9a6b6ded3a2faa29dc960c1e635/docs/apache-airflow/img/logos/wordmark_1.png?raw=true)\n\n[Apache Airflow](https://airflow.apache.org/docs/apache-airflow/stable/) (or simply Airflow) is a platform to programmatically author, schedule, and monitor workflows.\n\nWhen workflows are defined as code, they become more maintainable, versionable, testable, and collaborative.\n\nUse Airflow to author workflows as directed acyclic graphs (DAGs) of tasks. The Airflow scheduler executes your tasks on an array of workers while following the specified dependencies. Rich command line utilities make performing complex surgeries on DAGs a snap. The rich user interface makes it easy to visualize pipelines running in production, monitor progress, and troubleshoot issues when needed.\n\n**Table of contents**\n\n  * [Project Focus](#project-focus)\n  * [Principles](#principles)\n  * [Requirements](#requirements)\n  * [Getting started](#getting-started)\n  * [Installing from PyPI](#installing-from-pypi)\n  * [Official source code](#official-source-code)\n  * [Convenience packages](#convenience-packages)\n  * [User Interface](#user-interface)\n  * [Semantic versioning](#semantic-versioning)\n  * [Version Life Cycle](#version-life-cycle)\n  * [Support for Python and Kubernetes versions](#support-for-python-and-kubernetes-versions)\n  * [Base OS support for reference Airflow images](#base-os-support-for-reference-airflow-images)\n  * [Approach to dependencies of Airflow](#approach-to-dependencies-of-airflow)\n  * [Contributing](#contributing)\n  * [Voting Policy](#voting-policy)\n  * [Who uses Apache Airflow?](#who-uses-apache-airflow)\n  * [Who maintains Apache Airflow?](#who-maintains-apache-airflow)\n  * [What goes into the next release?](#what-goes-into-the-next-release)\n  * [Can I use the Apache Airflow logo in my presentation?](#can-i-use-the-apache-airflow-logo-in-my-presentation)\n  * [Links](#links)\n  * [Sponsors](#sponsors)\n\n\n\n## Project Focus\n\n[](#project-focus)\n\nAirflow works best with workflows that are mostly static and slowly changing. When the DAG structure is similar from one run to the next, it clarifies the unit of work and continuity. Other similar projects include [Luigi](https://github.com/spotify/luigi), [Oozie](https://oozie.apache.org/) and [Azkaban](https://azkaban.github.io/).\n\nAirflow is commonly used to process data, but has the opinion that tasks should ideally be idempotent (i.e., results of the task will be the same, and will not create duplicated data in a destination system), and should not pass large quantities of data from one task to the next (though tasks can pass metadata using Airflow's [XCom feature](https://airflow.apache.org/docs/apache-airflow/stable/concepts/xcoms.html)). For high-volume, data-intensive tasks, a best practice is to delegate to external services specializing in that type of work.\n\nAirflow is not a streaming solution, but it is often used to process real-time data, pulling data off streams in batches.\n\n## Principles\n\n[](#principles)\n\n  * **Dynamic** : Airflow pipelines are configuration as code (Python), allowing for dynamic pipeline generation. This allows for writing code that instantiates pipelines dynamically.\n  * **Extensible** : Easily define your own operators, executors and extend the library so that it fits the level of abstraction that suits your environment.\n  * **Elegant** : Airflow pipelines are lean and explicit. Parameterizing your scripts is built into the core of Airflow using the powerful **Jinja** templating engine.\n  * **Scalable** : Airflow has a modular architecture and uses a message queue to orchestrate an arbitrary number of workers.\n\n\n\n## Requirements\n\n[](#requirements)\n\nApache Airflow is tested with:\n\nMain version (dev) | Stable version (2.10.4)  \n---|---  \nPython | 3.9, 3.10, 3.11, 3.12 | 3.8, 3.9, 3.10, 3.11, 3.12  \nPlatform | AMD64/ARM64(*) | AMD64/ARM64(*)  \nKubernetes | 1.28, 1.29, 1.30, 1.31 | 1.27, 1.28, 1.29, 1.30  \nPostgreSQL | 13, 14, 15, 16, 17 | 12, 13, 14, 15, 16  \nMySQL | 8.0, 8.4, Innovation | 8.0, 8.4, Innovation  \nSQLite | 3.15.0+ | 3.15.0+  \n  \n* Experimental\n\n**Note** : MariaDB is not tested/recommended.\n\n**Note** : SQLite is used in Airflow tests. Do not use it in production. We recommend using the latest stable version of SQLite for local development.\n\n**Note** : Airflow currently can be run on POSIX-compliant Operating Systems. For development, it is regularly tested on fairly modern Linux Distros and recent versions of macOS. On Windows you can run it via WSL2 (Windows Subsystem for Linux 2) or via Linux Containers. The work to add Windows support is tracked via [#10388](https://github.com/apache/airflow/issues/10388), but it is not a high priority. You should only use Linux-based distros as \"Production\" execution environment as this is the only environment that is supported. The only distro that is used in our CI tests and that is used in the [Community managed DockerHub image](https://hub.docker.com/p/apache/airflow) is `Debian Bookworm`.\n\n## Getting started\n\n[](#getting-started)\n\nVisit the official Airflow website documentation (latest **stable** release) for help with [installing Airflow](https://airflow.apache.org/docs/apache-airflow/stable/installation/), [getting started](https://airflow.apache.org/docs/apache-airflow/stable/start.html), or walking through a more complete [tutorial](https://airflow.apache.org/docs/apache-airflow/stable/tutorial/).\n\n> Note: If you're looking for documentation for the main branch (latest development branch): you can find it on [s.apache.org/airflow-docs](https://s.apache.org/airflow-docs/).\n\nFor more information on Airflow Improvement Proposals (AIPs), visit the [Airflow Wiki](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals).\n\nDocumentation for dependent projects like provider packages, Docker image, Helm Chart, you'll find it in [the documentation index](https://airflow.apache.org/docs/).\n\n## Installing from PyPI\n\n[](#installing-from-pypi)\n\nWe publish Apache Airflow as `apache-airflow` package in PyPI. Installing it however might be sometimes tricky because Airflow is a bit of both a library and application. Libraries usually keep their dependencies open, and applications usually pin them, but we should do neither and both simultaneously. We decided to keep our dependencies as open as possible (in `pyproject.toml`) so users can install different versions of libraries if needed. This means that `pip install apache-airflow` will not work from time to time or will produce unusable Airflow installation.\n\nTo have repeatable installation, however, we keep a set of \"known-to-be-working\" constraint files in the orphan `constraints-main` and `constraints-2-0` branches. We keep those \"known-to-be-working\" constraints files separately per major/minor Python version. You can use them as constraint files when installing Airflow from PyPI. Note that you have to specify correct Airflow tag/version/branch and Python versions in the URL.\n\n  1. Installing just Airflow:\n\n\n\n> Note: Only `pip` installation is currently officially supported.\n\nWhile it is possible to install Airflow with tools like [Poetry](https://python-poetry.org) or [pip-tools](https://pypi.org/project/pip-tools), they do not share the same workflow as `pip` - especially when it comes to constraint vs. requirements management. Installing via `Poetry` or `pip-tools` is not currently supported.\n\nThere are known issues with `bazel` that might lead to circular dependencies when using it to install Airflow. Please switch to `pip` if you encounter such problems. `Bazel` community works on fixing the problem in `this PR <https://github.com/bazelbuild/rules_python/pull/1166>`_ so it might be that newer versions of `bazel` will handle it.\n\nIf you wish to install Airflow using those tools, you should use the constraint files and convert them to the appropriate format and workflow that your tool requires.\n\n```\npip install 'apache-airflow==2.10.4' \\ --constraint \"https://raw.githubusercontent.com/apache/airflow/constraints-2.10.4/constraints-3.9.txt\"\n```\n\n  1. Installing with extras (i.e., postgres, google)\n\n\n\n```\npip install 'apache-airflow[postgres,google]==2.10.4' \\ --constraint \"https://raw.githubusercontent.com/apache/airflow/constraints-2.10.4/constraints-3.9.txt\"\n```\n\nFor information on installing provider packages, check [providers](http://airflow.apache.org/docs/apache-airflow-providers/index.html).\n\n## Official source code\n\n[](#official-source-code)\n\nApache Airflow is an [Apache Software Foundation](https://www.apache.org) (ASF) project, and our official source code releases:\n\n  * Follow the [ASF Release Policy](https://www.apache.org/legal/release-policy.html)\n  * Can be downloaded from [the ASF Distribution Directory](https://downloads.apache.org/airflow)\n  * Are cryptographically signed by the release manager\n  * Are officially voted on by the PMC members during the [Release Approval Process](https://www.apache.org/legal/release-policy.html#release-approval)\n\n\n\nFollowing the ASF rules, the source packages released must be sufficient for a user to build and test the release provided they have access to the appropriate platform and tools.\n\n## Convenience packages\n\n[](#convenience-packages)\n\nThere are other ways of installing and using Airflow. Those are \"convenience\" methods - they are not \"official releases\" as stated by the `ASF Release Policy`, but they can be used by the users who do not want to build the software themselves.\n\nThose are - in the order of most common ways people install Airflow:\n\n  * [PyPI releases](https://pypi.org/project/apache-airflow/) to install Airflow using standard `pip` tool\n  * [Docker Images](https://hub.docker.com/r/apache/airflow) to install airflow via `docker` tool, use them in Kubernetes, Helm Charts, `docker-compose`, `docker swarm`, etc. You can read more about using, customizing, and extending the images in the [Latest docs](https://airflow.apache.org/docs/docker-stack/index.html), and learn details on the internals in the [images](https://airflow.apache.org/docs/docker-stack/index.html) document.\n  * [Tags in GitHub](https://github.com/apache/airflow/tags) to retrieve the git project sources that were used to generate official source packages via git\n\n\n\nAll those artifacts are not official releases, but they are prepared using officially released sources. Some of those artifacts are \"development\" or \"pre-release\" ones, and they are clearly marked as such following the ASF Policy.\n\n## User Interface\n\n[](#user-interface)\n\n  * **DAGs** : Overview of all DAGs in your environment.\n\n[![DAGs](https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/dags.png)](https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/dags.png)\n\n  * **Grid** : Grid representation of a DAG that spans across time.\n\n[![Grid](https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/grid.png)](https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/grid.png)\n\n  * **Graph** : Visualization of a DAG's dependencies and their current status for a specific run.\n\n[![Graph](https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/graph.png)](https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/graph.png)\n\n  * **Task Duration** : Total time spent on different tasks over time.\n\n[![Task Duration](https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/duration.png)](https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/duration.png)\n\n  * **Gantt** : Duration and overlap of a DAG.\n\n[![Gantt](https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/gantt.png)](https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/gantt.png)\n\n  * **Code** : Quick way to view source code of a DAG.\n\n[![Code](https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/code.png)](https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/code.png)\n\n\n\n\n## Semantic versioning\n\n[](#semantic-versioning)\n\nAs of Airflow 2.0.0, we support a strict [SemVer](https://semver.org/) approach for all packages released.\n\nThere are few specific rules that we agreed to that define details of versioning of the different packages:\n\n  * **Airflow** : SemVer rules apply to core airflow only (excludes any changes to providers). Changing limits for versions of Airflow dependencies is not a breaking change on its own.\n  * **Airflow Providers** : SemVer rules apply to changes in the particular provider's code only. SemVer MAJOR and MINOR versions for the packages are independent of the Airflow version. For example, `google 4.1.0` and `amazon 3.0.3` providers can happily be installed with `Airflow 2.1.2`. If there are limits of cross-dependencies between providers and Airflow packages, they are present in providers as `install_requires` limitations. We aim to keep backwards compatibility of providers with all previously released Airflow 2 versions but there will sometimes be breaking changes that might make some, or all providers, have minimum Airflow version specified.\n  * **Airflow Helm Chart** : SemVer rules apply to changes in the chart only. SemVer MAJOR and MINOR versions for the chart are independent of the Airflow version. We aim to keep backwards compatibility of the Helm Chart with all released Airflow 2 versions, but some new features might only work starting from specific Airflow releases. We might however limit the Helm Chart to depend on minimal Airflow version.\n  * **Airflow API clients** : Their versioning is independent from Airflow versions. They follow their own SemVer rules for breaking changes and new features - which for example allows to change the way we generate the clients.\n\n\n\n## Version Life Cycle\n\n[](#version-life-cycle)\n\nApache Airflow version life cycle:\n\nVersion | Current Patch/Minor | State | First Release | Limited Support | EOL/Terminated  \n---|---|---|---|---|---  \n2 | 2.10.4 | Supported | Dec 17, 2020 | TBD | TBD  \n1.10 | 1.10.15 | EOL | Aug 27, 2018 | Dec 17, 2020 | June 17, 2021  \n1.9 | 1.9.0 | EOL | Jan 03, 2018 | Aug 27, 2018 | Aug 27, 2018  \n1.8 | 1.8.2 | EOL | Mar 19, 2017 | Jan 03, 2018 | Jan 03, 2018  \n1.7 | 1.7.1.2 | EOL | Mar 28, 2016 | Mar 19, 2017 | Mar 19, 2017  \n  \nLimited support versions will be supported with security and critical bug fix only. EOL versions will not get any fixes nor support. We always recommend that all users run the latest available minor release for whatever major version is in use. We **highly** recommend upgrading to the latest Airflow major release at the earliest convenient time and before the EOL date.\n\n## Support for Python and Kubernetes versions\n\n[](#support-for-python-and-kubernetes-versions)\n\nAs of Airflow 2.0, we agreed to certain rules we follow for Python and Kubernetes support. They are based on the official release schedule of Python and Kubernetes, nicely summarized in the [Python Developer's Guide](https://devguide.python.org/#status-of-python-branches) and [Kubernetes version skew policy](https://kubernetes.io/docs/setup/release/version-skew-policy/).\n\n  1. We drop support for Python and Kubernetes versions when they reach EOL. Except for Kubernetes, a version stays supported by Airflow if two major cloud providers still provide support for it. We drop support for those EOL versions in main right after EOL date, and it is effectively removed when we release the first new MINOR (Or MAJOR if there is no new MINOR version) of Airflow. For example, for Python 3.9 it means that we will drop support in main right after 27.06.2023, and the first MAJOR or MINOR version of Airflow released after will not have it.\n\n  2. We support a new version of Python/Kubernetes in main after they are officially released, as soon as we make them work in our CI pipeline (which might not be immediate due to dependencies catching up with new versions of Python mostly) we release new images/support in Airflow based on the working CI setup.\n\n  3. This policy is best-effort which means there may be situations where we might terminate support earlier if circumstances require it.\n\n\n\n\n## Base OS support for reference Airflow images\n\n[](#base-os-support-for-reference-airflow-images)\n\nThe Airflow Community provides conveniently packaged container images that are published whenever we publish an Apache Airflow release. Those images contain:\n\n  * Base OS with necessary packages to install Airflow (stable Debian OS)\n  * Base Python installation in versions supported at the time of release for the MINOR version of Airflow released (so there could be different versions for 2.3 and 2.2 line for example)\n  * Libraries required to connect to supported Databases (again the set of databases supported depends on the MINOR version of Airflow)\n  * Predefined set of popular providers (for details see the [Dockerfile](https://raw.githubusercontent.com/apache/airflow/main/Dockerfile)).\n  * Possibility of building your own, custom image where the user can choose their own set of providers and libraries (see [Building the image](https://airflow.apache.org/docs/docker-stack/build.html))\n  * In the future Airflow might also support a \"slim\" version without providers nor database clients installed\n\n\n\nThe version of the base OS image is the stable version of Debian. Airflow supports using all currently active stable versions - as soon as all Airflow dependencies support building, and we set up the CI pipeline for building and testing the OS version. Approximately 6 months before the end-of-regular support of a previous stable version of the OS, Airflow switches the images released to use the latest supported version of the OS.\n\nFor example switch from `Debian Bullseye` to `Debian Bookworm` has been implemented before 2.8.0 release in October 2023 and `Debian Bookworm` will be the only option supported as of Airflow 2.10.0.\n\nUsers will continue to be able to build their images using stable Debian releases until the end of regular support and building and verifying of the images happens in our CI but no unit tests were executed using this image in the `main` branch.\n\n## Approach to dependencies of Airflow\n\n[](#approach-to-dependencies-of-airflow)\n\nAirflow has a lot of dependencies - direct and transitive, also Airflow is both - library and application, therefore our policies to dependencies has to include both - stability of installation of application, but also ability to install newer version of dependencies for those users who develop DAGs. We developed the approach where `constraints` are used to make sure airflow can be installed in a repeatable way, while we do not limit our users to upgrade most of the dependencies. As a result we decided not to upper-bound version of Airflow dependencies by default, unless we have good reasons to believe upper-bounding them is needed because of importance of the dependency as well as risk it involves to upgrade specific dependency. We also upper-bound the dependencies that we know cause problems.\n\nThe constraint mechanism of ours takes care about finding and upgrading all the non-upper bound dependencies automatically (providing that all the tests pass). Our `main` build failures will indicate in case there are versions of dependencies that break our tests - indicating that we should either upper-bind them or that we should fix our code/tests to account for the upstream changes from those dependencies.\n\nWhenever we upper-bound such a dependency, we should always comment why we are doing it - i.e. we should have a good reason why dependency is upper-bound. And we should also mention what is the condition to remove the binding.\n\n### Approach for dependencies for Airflow Core\n\n[](#approach-for-dependencies-for-airflow-core)\n\nThose dependencies are maintained in `pyproject.toml`.\n\nThere are few dependencies that we decided are important enough to upper-bound them by default, as they are known to follow predictable versioning scheme, and we know that new versions of those are very likely to bring breaking changes. We commit to regularly review and attempt to upgrade to the newer versions of the dependencies as they are released, but this is manual process.\n\nThe important dependencies are:\n\n  * `SQLAlchemy`: upper-bound to specific MINOR version (SQLAlchemy is known to remove deprecations and introduce breaking changes especially that support for different Databases varies and changes at various speed)\n  * `Alembic`: it is important to handle our migrations in predictable and performant way. It is developed together with SQLAlchemy. Our experience with Alembic is that it very stable in MINOR version\n  * `Flask`: We are using Flask as the back-bone of our web UI and API. We know major version of Flask are very likely to introduce breaking changes across those so limiting it to MAJOR version makes sense\n  * `werkzeug`: the library is known to cause problems in new versions. It is tightly coupled with Flask libraries, and we should update them together\n  * `celery`: Celery is a crucial component of Airflow as it used for CeleryExecutor (and similar). Celery [follows SemVer](https://docs.celeryq.dev/en/stable/contributing.html?highlight=semver#versions), so we should upper-bound it to the next MAJOR version. Also, when we bump the upper version of the library, we should make sure Celery Provider minimum Airflow version is updated.\n  * `kubernetes`: Kubernetes is a crucial component of Airflow as it is used for the KubernetesExecutor (and similar). Kubernetes Python library [follows SemVer](https://github.com/kubernetes-client/python#compatibility), so we should upper-bound it to the next MAJOR version. Also, when we bump the upper version of the library, we should make sure Kubernetes Provider minimum Airflow version is updated.\n\n\n\n### Approach for dependencies in Airflow Providers and extras\n\n[](#approach-for-dependencies-in-airflow-providers-and-extras)\n\nThe main part of the Airflow is the Airflow Core, but the power of Airflow also comes from a number of providers that extend the core functionality and are released separately, even if we keep them (for now) in the same monorepo for convenience. You can read more about the providers in the [Providers documentation](https://airflow.apache.org/docs/apache-airflow-providers/index.html). We also have set of policies implemented for maintaining and releasing community-managed providers as well as the approach for community vs. 3rd party providers in the [providers](https://github.com/apache/airflow/blob/main/PROVIDERS.rst) document.\n\nThose `extras` and `providers` dependencies are maintained in `provider.yaml` of each provider.\n\nBy default, we should not upper-bound dependencies for providers, however each provider's maintainer might decide to add additional limits (and justify them with comment).\n\n## Contributing\n\n[](#contributing)\n\nWant to help build Apache Airflow? Check out our [contributors' guide](https://github.com/apache/airflow/blob/main/contributing-docs/README.rst) for a comprehensive overview of how to contribute, including setup instructions, coding standards, and pull request guidelines.\n\nIf you can't wait to contribute, and want to get started asap, check out the [contribution quickstart](https://github.com/apache/airflow/blob/main/contributing-docs/03_contributors_quick_start.rst) here!\n\nOfficial Docker (container) images for Apache Airflow are described in [images](/apache/airflow/blob/main/dev/breeze/doc/ci/02_images.md).\n\n## Voting Policy\n\n[](#voting-policy)\n\n  * Commits need a +1 vote from a committer who is not the author\n  * When we do AIP voting, both PMC member's and committer's `+1s` are considered a binding vote.\n\n\n\n## Who uses Apache Airflow?\n\n[](#who-uses-apache-airflow)\n\nWe know about around 500 organizations that are using Apache Airflow (but there are likely many more) [in the wild](https://github.com/apache/airflow/blob/main/INTHEWILD.md).\n\nIf you use Airflow - feel free to make a PR to add your organisation to the list.\n\n## Who maintains Apache Airflow?\n\n[](#who-maintains-apache-airflow)\n\nAirflow is the work of the [community](https://github.com/apache/airflow/graphs/contributors), but the [core committers/maintainers](https://people.apache.org/committers-by-project.html#airflow) are responsible for reviewing and merging PRs as well as steering conversations around new feature requests. If you would like to become a maintainer, please review the Apache Airflow [committer requirements](https://github.com/apache/airflow/blob/main/COMMITTERS.rst#guidelines-to-become-an-airflow-committer).\n\n## What goes into the next release?\n\n[](#what-goes-into-the-next-release)\n\nOften you will see an issue that is assigned to specific milestone with Airflow version, or a PR that gets merged to the main branch and you might wonder which release the merged PR(s) will be released in or which release the fixed issues will be in. The answer to this is as usual - it depends on various scenarios. The answer is different for PRs and Issues.\n\nTo add a bit of context, we are following the [Semver](https://semver.org/) versioning scheme as described in [Airflow release process](https://airflow.apache.org/docs/apache-airflow/stable/release-process.html). More details are explained in detail in this README under the [Semantic versioning](#semantic-versioning) chapter, but in short, we have `MAJOR.MINOR.PATCH` versions of Airflow.\n\n  * `MAJOR` version is incremented in case of breaking changes\n  * `MINOR` version is incremented when there are new features added\n  * `PATCH` version is incremented when there are only bug-fixes and doc-only changes\n\n\n\nGenerally we release `MINOR` versions of Airflow from a branch that is named after the MINOR version. For example `2.7.*` releases are released from `v2-7-stable` branch, `2.8.*` releases are released from `v2-8-stable` branch, etc.\n\n  1. Most of the time in our release cycle, when the branch for next `MINOR` branch is not yet created, all PRs merged to `main` (unless they get reverted), will find their way to the next `MINOR` release. For example if the last release is `2.7.3` and `v2-8-stable` branch is not created yet, the next `MINOR` release is `2.8.0` and all PRs merged to main will be released in `2.8.0`. However, some PRs (bug-fixes and doc-only changes) when merged, can be cherry-picked to current `MINOR` branch and released in the next `PATCHLEVEL` release. For example, if `2.8.1` is already released and we are working on `2.9.0dev`, then marking a PR with `2.8.2` milestone means that it will be cherry-picked to `v2-8-test` branch and released in `2.8.2rc1`, and eventually in `2.8.2`.\n\n  2. When we prepare for the next `MINOR` release, we cut new `v2-*-test` and `v2-*-stable` branch and prepare `alpha`, `beta` releases for the next `MINOR` version, the PRs merged to main will still be released in the next `MINOR` release until `rc` version is cut. This is happening because the `v2-*-test` and `v2-*-stable` branches are rebased on top of main when next `beta` and `rc` releases are prepared. For example, when we cut `2.10.0beta1` version, anything merged to main before `2.10.0rc1` is released, will find its way to 2.10.0rc1.\n\n  3. Then, once we prepare the first RC candidate for the MINOR release, we stop moving the `v2-*-test` and `v2-*-stable` branches and the PRs merged to main will be released in the next `MINOR` release. However, some PRs (bug-fixes and doc-only changes) when merged, can be cherry-picked to current `MINOR` branch and released in the next `PATCHLEVEL` release - for example when the last released version from `v2-10-stable` branch is `2.10.0rc1`, some of the PRs from main can be marked as `2.10.0` milestone by committers, the release manager will try to cherry-pick them into the release branch. If successful, they will be released in `2.10.0rc2` and subsequently in `2.10.0`. This also applies to subsequent `PATCHLEVEL` versions. When for example `2.10.1` is already released, marking a PR with `2.10.2` milestone will mean that it will be cherry-picked to `v2-10-stable` branch and released in `2.10.2rc1` and eventually in `2.10.2`.\n\n\n\n\nThe final decision about cherry-picking is made by the release manager.\n\nMarking issues with a milestone is a bit different. Maintainers do not mark issues with a milestone usually, normally they are only marked in PRs. If PR linked to the issue (and \"fixing it\") gets merged and released in a specific version following the process described above, the issue will be automatically closed, no milestone will be set for the issue, you need to check the PR that fixed the issue to see which version it was released in.\n\nHowever, sometimes maintainers mark issues with specific milestone, which means that the issue is important to become a candidate to take a look when the release is being prepared. Since this is an Open-Source project, where basically all contributors volunteer their time, there is no guarantee that specific issue will be fixed in specific version. We do not want to hold the release because some issue is not fixed, so in such case release manager will reassign such unfixed issues to the next milestone in case they are not fixed in time for the current release. Therefore, the milestone for issue is more of an intent that it should be looked at, than promise it will be fixed in the version.\n\nMore context and **FAQ** about the patchlevel release can be found in the [What goes into the next release](/apache/airflow/blob/main/dev/WHAT_GOES_INTO_THE_NEXT_RELEASE.md) document in the `dev` folder of the repository.\n\n## Can I use the Apache Airflow logo in my presentation?\n\n[](#can-i-use-the-apache-airflow-logo-in-my-presentation)\n\nYes! Be sure to abide by the Apache Foundation [trademark policies](https://www.apache.org/foundation/marks/#books) and the Apache Airflow [Brandbook](https://cwiki.apache.org/confluence/display/AIRFLOW/Brandbook). The most up-to-date logos are found in [this repo](https://github.com/apache/airflow/tree/main/docs/apache-airflow/img/logos/) and on the Apache Software Foundation [website](https://www.apache.org/logos/about.html).\n\n## Links\n\n[](#links)\n\n  * [Documentation](https://airflow.apache.org/docs/apache-airflow/stable/)\n  * [Chat](https://s.apache.org/airflow-slack)\n  * [Community Information](https://airflow.apache.org/community/)\n\n\n\n## Sponsors\n\n[](#sponsors)\n\nThe CI infrastructure for Apache Airflow has been sponsored by:\n\n[![astronomer.io](https://camo.githubusercontent.com/c3f83988277c185ad55d57e4d563c0133e775df83f10b75d1c928527778be983/68747470733a2f2f617373657473322e617374726f6e6f6d65722e696f2f6c6f676f732f6c6f676f466f724c494748546261636b67726f756e642e706e67)](https://astronomer.io) [![AWS OpenSource](/apache/airflow/raw/main/docs/integration-logos/aws/AWS-Cloud-alt_light-bg@4x.png)](https://aws.amazon.com/opensource/)\n\n[![Tracking Pixel](https://camo.githubusercontent.com/78f1264a64793301d1615a117fbfb36dc4ac3c1f5ef9be6104895273ae224d24/68747470733a2f2f7374617469632e73636172662e73682f612e706e673f782d707869643d31623561356533632d646138312d343266352d626566612d343264383336626631623534)](https://camo.githubusercontent.com/78f1264a64793301d1615a117fbfb36dc4ac3c1f5ef9be6104895273ae224d24/68747470733a2f2f7374617469632e73636172662e73682f612e706e673f782d707869643d31623561356533632d646138312d343266352d626566612d343264383336626631623534)\n\n## About\n\nApache Airflow - A platform to programmatically author, schedule, and monitor workflows \n\n[airflow.apache.org/](https://airflow.apache.org/ \"https://airflow.apache.org/\")\n\n### Topics\n\n[ python ](/topics/python \"Topic: python\") [ workflow ](/topics/workflow \"Topic: workflow\") [ data-science ](/topics/data-science \"Topic: data-science\") [ machine-learning ](/topics/machine-learning \"Topic: machine-learning\") [ airflow ](/topics/airflow \"Topic: airflow\") [ automation ](/topics/automation \"Topic: automation\") [ etl ](/topics/etl \"Topic: etl\") [ workflow-engine ](/topics/workflow-engine \"Topic: workflow-engine\") [ scheduler ](/topics/scheduler \"Topic: scheduler\") [ apache ](/topics/apache \"Topic: apache\") [ orchestration ](/topics/orchestration \"Topic: orchestration\") [ data-engineering ](/topics/data-engineering \"Topic: data-engineering\") [ data-integration ](/topics/data-integration \"Topic: data-integration\") [ elt ](/topics/elt \"Topic: elt\") [ data-pipelines ](/topics/data-pipelines \"Topic: data-pipelines\") [ dag ](/topics/dag \"Topic: dag\") [ apache-airflow ](/topics/apache-airflow \"Topic: apache-airflow\") [ mlops ](/topics/mlops \"Topic: mlops\") [ workflow-orchestration ](/topics/workflow-orchestration \"Topic: workflow-orchestration\") [ data-orchestrator ](/topics/data-orchestrator \"Topic: data-orchestrator\")\n\n### Resources\n\n[ Readme ](#readme-ov-file)\n\n### License\n\n[ Apache-2.0 license ](#Apache-2.0-1-ov-file)\n\n### Code of conduct\n\n[ Code of conduct ](#coc-ov-file)\n\n### Security policy\n\n[ Security policy ](#security-ov-file)\n\n[ Activity](/apache/airflow/activity)\n\n[ Custom properties](/apache/airflow/custom-properties)\n\n### Stars\n\n[ **38.4k** stars](/apache/airflow/stargazers)\n\n### Watchers\n\n[ **768** watching](/apache/airflow/watchers)\n\n### Forks\n\n[ **14.5k** forks](/apache/airflow/forks)\n\n[ Report repository ](/contact/report-content?content_url=https%3A%2F%2Fgithub.com%2Fapache%2Fairflow&report=apache+%28user%29)\n\n##  [Releases 92](/apache/airflow/releases)\n\n[ Apache Airflow 2.10.4 Latest  Dec 16, 2024 ](/apache/airflow/releases/tag/2.10.4)\n\n[+ 91 releases](/apache/airflow/releases)\n\n##  [Packages 116](/orgs/apache/packages?repo_name=airflow)\n\n  * [ airflow/main/ci/python3.7 ](/orgs/apache/packages/container/package/airflow%2Fmain%2Fci%2Fpython3.7)\n  * [ airflow/main/prod/python3.7 ](/orgs/apache/packages/container/package/airflow%2Fmain%2Fprod%2Fpython3.7)\n  * [ airflow/main/ci/python3.8 ](/orgs/apache/packages/container/package/airflow%2Fmain%2Fci%2Fpython3.8)\n\n\n\n[+ 113 packages](/orgs/apache/packages?repo_name=airflow)\n\n##  [Used by 14.1k](/apache/airflow/network/dependents)\n\n[\n\n  * ![@1nsaneYMD](https://avatars.githubusercontent.com/u/194418367?s=64&v=4)\n  * ![@thibtd](https://avatars.githubusercontent.com/u/35340842?s=64&v=4)\n  * ![@odpi](https://avatars.githubusercontent.com/u/14320221?s=64&v=4)\n  * ![@dinreddi](https://avatars.githubusercontent.com/u/73735700?s=64&v=4)\n  * ![@dev-andersonsena](https://avatars.githubusercontent.com/u/137720575?s=64&v=4)\n  * ![@PJATK-ASI-2024](https://avatars.githubusercontent.com/u/183432842?s=64&v=4)\n  * ![@SaeifEdd](https://avatars.githubusercontent.com/u/109415607?s=64&v=4)\n  * ![@LeivaLinnase](https://avatars.githubusercontent.com/u/102084848?s=64&v=4)\n\n+ 14,069  ](/apache/airflow/network/dependents)\n\n##  [Contributors 3,183](/apache/airflow/graphs/contributors)\n\n  * [ ![@potiuk](https://avatars.githubusercontent.com/u/595491?s=64&v=4) ](https://github.com/potiuk)\n  * [ ![@mistercrunch](https://avatars.githubusercontent.com/u/487433?s=64&v=4) ](https://github.com/mistercrunch)\n  * [ ![@kaxil](https://avatars.githubusercontent.com/u/8811558?s=64&v=4) ](https://github.com/kaxil)\n  * [ ![@ashb](https://avatars.githubusercontent.com/u/34150?s=64&v=4) ](https://github.com/ashb)\n  * [ ![@mik-laj](https://avatars.githubusercontent.com/u/12058428?s=64&v=4) ](https://github.com/mik-laj)\n  * [ ![@uranusjr](https://avatars.githubusercontent.com/u/605277?s=64&v=4) ](https://github.com/uranusjr)\n  * [ ![@jedcunningham](https://avatars.githubusercontent.com/u/66968678?s=64&v=4) ](https://github.com/jedcunningham)\n  * [ ![@dstandish](https://avatars.githubusercontent.com/u/15932138?s=64&v=4) ](https://github.com/dstandish)\n  * [ ![@Taragolis](https://avatars.githubusercontent.com/u/3998685?s=64&v=4) ](https://github.com/Taragolis)\n  * [ ![@eladkal](https://avatars.githubusercontent.com/u/45845474?s=64&v=4) ](https://github.com/eladkal)\n  * [ ![@ephraimbuddy](https://avatars.githubusercontent.com/u/4122866?s=64&v=4) ](https://github.com/ephraimbuddy)\n  * [ ![@bolkedebruin](https://avatars.githubusercontent.com/u/4282712?s=64&v=4) ](https://github.com/bolkedebruin)\n  * [ ![@bbovenzi](https://avatars.githubusercontent.com/u/4600967?s=64&v=4) ](https://github.com/bbovenzi)\n  * [ ![@hussein-awala](https://avatars.githubusercontent.com/u/21311487?s=64&v=4) ](https://github.com/hussein-awala)\n\n\n\n[+ 3,169 contributors](/apache/airflow/graphs/contributors)\n\n## Languages\n\n  * [ Python 93.0% ](/apache/airflow/search?l=python)\n  * [ TypeScript 4.9% ](/apache/airflow/search?l=typescript)\n  * [ JavaScript 0.7% ](/apache/airflow/search?l=javascript)\n  * [ Shell 0.5% ](/apache/airflow/search?l=shell)\n  * [ HTML 0.5% ](/apache/airflow/search?l=html)\n  * [ Dockerfile 0.2% ](/apache/airflow/search?l=dockerfile)\n  * Other 0.2%\n\n\n\n## Footer\n\n[ ](https://github.com \"GitHub\") © 2025 GitHub, Inc. \n\n### Footer navigation\n\n  * [Terms](https://docs.github.com/site-policy/github-terms/github-terms-of-service)\n  * [Privacy](https://docs.github.com/site-policy/privacy-policies/github-privacy-statement)\n  * [Security](https://github.com/security)\n  * [Status](https://www.githubstatus.com/)\n  * [Docs](https://docs.github.com/)\n  * [Contact](https://support.github.com?tags=dotcom-footer)\n  * Manage cookies \n  * Do not share my personal information \n\n\n\nYou can’t perform that action at this time. \n",
    "content_quality_score": 0.0,
    "summary": null,
    "child_urls": [
        "https://github.com/apache/airflow/#start-of-content",
        "https://github.com/",
        "https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Fapache%2Fairflow%2F",
        "https://github.com/features/copilot",
        "https://github.com/features/security",
        "https://github.com/features/actions",
        "https://github.com/features/codespaces",
        "https://github.com/features/issues",
        "https://github.com/features/code-review",
        "https://github.com/features/discussions",
        "https://github.com/features/code-search",
        "https://github.com/features",
        "https://docs.github.com",
        "https://skills.github.com",
        "https://github.com/enterprise",
        "https://github.com/team",
        "https://github.com/enterprise/startups",
        "https://github.com/solutions/industry/nonprofits",
        "https://github.com/solutions/use-case/devsecops",
        "https://github.com/solutions/use-case/devops",
        "https://github.com/solutions/use-case/ci-cd",
        "https://github.com/solutions/use-case",
        "https://github.com/solutions/industry/healthcare",
        "https://github.com/solutions/industry/financial-services",
        "https://github.com/solutions/industry/manufacturing",
        "https://github.com/solutions/industry/government",
        "https://github.com/solutions/industry",
        "https://github.com/solutions",
        "https://github.com/resources/articles/ai",
        "https://github.com/resources/articles/devops",
        "https://github.com/resources/articles/security",
        "https://github.com/resources/articles/software-development",
        "https://github.com/resources/articles",
        "https://resources.github.com/learn/pathways",
        "https://resources.github.com",
        "https://github.com/customer-stories",
        "https://partner.github.com",
        "https://github.com/solutions/executive-insights",
        "https://github.com/sponsors",
        "https://github.com/readme",
        "https://github.com/topics",
        "https://github.com/trending",
        "https://github.com/collections",
        "https://github.com/enterprise/advanced-security",
        "https://github.com/features/copilot#enterprise",
        "https://github.com/premium-support",
        "https://github.com/pricing",
        "https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax",
        "https://github.com/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&source=header-repo&source_repo=apache%2Fairflow",
        "https://github.com/apache",
        "https://github.com/apache/airflow",
        "https://github.com/login?return_to=%2Fapache%2Fairflow",
        "https://github.com/apache/airflow/blob/main/LICENSE",
        "https://github.com/apache/airflow/stargazers",
        "https://github.com/apache/airflow/forks",
        "https://github.com/apache/airflow/branches",
        "https://github.com/apache/airflow/tags",
        "https://github.com/apache/airflow/activity",
        "https://github.com/apache/airflow/issues",
        "https://github.com/apache/airflow/pulls",
        "https://github.com/apache/airflow/discussions",
        "https://github.com/apache/airflow/actions",
        "https://github.com/apache/airflow/projects",
        "https://github.com/apache/airflow/security",
        "https://github.com/apache/airflow/pulse",
        "https://github.com/ashb",
        "https://github.com/apache/airflow/commits?author=ashb",
        "https://github.com/apache/airflow/commit/d1b2a4465387e9414e6c15f8df85591136a7784b",
        "https://github.com/apache/airflow/pull/45627",
        "https://github.com/apache/airflow/commits/main/",
        "https://github.com/apache/airflow/tree/main/.devcontainer",
        "https://github.com/apache/airflow/commit/fe166ec03918825d0f5274fef72a1f027137fdd6",
        "https://github.com/apache/airflow/tree/main/.github",
        "https://github.com/apache/airflow/commit/a76af4f22c0f34813ec51f00cd0e2a4909c77cbf",
        "https://github.com/apache/airflow/pull/45327",
        "https://github.com/apache/airflow/tree/main/3rd-party-licenses",
        "https://github.com/apache/airflow/commit/00b8452b7526166b2918976b991aff1124d1a17c",
        "https://github.com/apache/airflow/tree/main/airflow",
        "https://github.com/apache/airflow/tree/main/chart",
        "https://github.com/apache/airflow/commit/9ac85c89dcc5f1defc2bb949497ed58d3fc67bef",
        "https://github.com/apache/airflow/pull/45659",
        "https://github.com/apache/airflow/tree/main/clients",
        "https://github.com/apache/airflow/commit/5605cde88cc5ced04a2732250d14b1fe0f411c92",
        "https://github.com/apache/airflow/pull/44947",
        "https://github.com/apache/airflow/tree/main/constraints",
        "https://github.com/apache/airflow/commit/63ff22f4038f34354dc5807036d1bf10653c2ecd",
        "https://github.com/apache/airflow/pull/42766",
        "https://github.com/apache/airflow/tree/main/contributing-docs",
        "https://github.com/apache/airflow/commit/6d20d7b67f361029af485dce58020064bf017a71",
        "https://github.com/apache/airflow/pull/45804",
        "https://github.com/apache/airflow/tree/main/dev",
        "https://github.com/apache/airflow/commit/acb1bc2b6907b91a503438395038c453c6101da1",
        "https://github.com/apache/airflow/pull/45819",
        "https://github.com/apache/airflow/tree/main/docker-context-files",
        "https://github.com/apache/airflow/commit/53afba2ec5a186284054de2d881a334a5f493021",
        "https://github.com/apache/airflow/pull/30002",
        "https://github.com/apache/airflow/tree/main/docker_tests",
        "https://github.com/apache/airflow/commit/a22faa5921bd6b3fbb8a95f582f56da1cdf39fc5",
        "https://github.com/apache/airflow/pull/45262",
        "https://github.com/apache/airflow/tree/main/docs",
        "https://github.com/apache/airflow/commit/b081f66d52cc20ba0cd8eb37b8984ed3d9805277",
        "https://github.com/apache/airflow/pull/45729",
        "https://github.com/apache/airflow/tree/main/empty",
        "https://github.com/apache/airflow/commit/a851b18953177c7a1506a796c3973e98fbca14ce",
        "https://github.com/apache/airflow/pull/33468",
        "https://github.com/apache/airflow/tree/main/generated",
        "https://github.com/apache/airflow/commit/d414ff941b0f378159822662dc3511fd1aace5ab",
        "https://github.com/apache/airflow/pull/45784",
        "https://github.com/apache/airflow/tree/main/helm_tests",
        "https://github.com/apache/airflow/tree/main/kubernetes_tests",
        "https://github.com/apache/airflow/commit/f616c62209d6b51d293ecf6f5c900f89a7fdc3a3",
        "https://github.com/apache/airflow/pull/45583",
        "https://github.com/apache/airflow/tree/main/manifests",
        "https://github.com/apache/airflow/commit/167b9b9889ac5481b21cb35c6cdef5869b8ab713",
        "https://github.com/apache/airflow/pull/12181",
        "https://github.com/apache/airflow/tree/main/newsfragments",
        "https://github.com/apache/airflow/tree/main/performance",
        "https://github.com/apache/airflow/commit/5b925dc302b0fde81b610efef9a6dfef860966a2",
        "https://github.com/apache/airflow/pull/45118",
        "https://github.com/apache/airflow/tree/main/providers",
        "https://github.com/apache/airflow/tree/main/scripts",
        "https://github.com/apache/airflow/tree/main/task_sdk",
        "https://github.com/apache/airflow/tree/main/tests",
        "https://github.com/apache/airflow/tree/main/tests_common",
        "https://github.com/apache/airflow/blob/main/.asf.yaml",
        "https://github.com/apache/airflow/commit/001dca31c6de8636cd8047f7931737e52f26d292",
        "https://github.com/apache/airflow/blob/main/.bash_completion",
        "https://github.com/apache/airflow/commit/286aa7a5817372a19c8e0be8c447021eb66dac6c",
        "https://github.com/apache/airflow/pull/4932",
        "https://github.com/apache/airflow/blob/main/.cherry_picker.toml",
        "https://github.com/apache/airflow/commit/6c4eb3cb3365204fc8df82d60f83037c1cab893b",
        "https://github.com/apache/airflow/pull/45778",
        "https://github.com/apache/airflow/blob/main/.codespellignorelines",
        "https://github.com/apache/airflow/commit/0db38ad1a2cf403eb546f027f2e5673610626f47",
        "https://github.com/apache/airflow/pull/29768",
        "https://github.com/apache/airflow/blob/main/.dockerignore",
        "https://github.com/apache/airflow/commit/1cf1d628404ab62f979d2b0d9936ca5af001f44f",
        "https://github.com/apache/airflow/pull/45259",
        "https://github.com/apache/airflow/blob/main/.editorconfig",
        "https://github.com/apache/airflow/commit/a10b98e8eaf068922b705fba28db79ff00508b39",
        "https://github.com/apache/airflow/pull/40222",
        "https://github.com/apache/airflow/blob/main/.git-blame-ignore-revs",
        "https://github.com/apache/airflow/commit/8831db299c20c5f8fe8122fda2acfb4ee68730b7",
        "https://github.com/apache/airflow/pull/38240",
        "https://github.com/apache/airflow/pull/38256",
        "https://github.com/apache/airflow/blob/main/.gitattributes",
        "https://github.com/apache/airflow/commit/6daceb844c53a4e6c94b516d4f77e684a7de5b7f",
        "https://github.com/apache/airflow/pull/37039",
        "https://github.com/apache/airflow/blob/main/.gitignore",
        "https://github.com/apache/airflow/commit/229c6a3e4673db03119c78828e546ebae272ef75",
        "https://github.com/apache/airflow/pull/43604",
        "https://github.com/apache/airflow/blob/main/.gitpod.yml",
        "https://github.com/apache/airflow/commit/ab6e623cb1a75f54fc419cee66a16e3d8ff1adc2",
        "https://github.com/apache/airflow/pull/35531",
        "https://github.com/apache/airflow/blob/main/.hadolint.yaml",
        "https://github.com/apache/airflow/commit/c1abd638ad70e3e325748308a9aeef92b5e79ccd",
        "https://github.com/apache/airflow/pull/21546",
        "https://github.com/apache/airflow/blob/main/.mailmap",
        "https://github.com/apache/airflow/commit/53c01228d350dff1348bd9576a75febaae7473a9",
        "https://github.com/apache/airflow/pull/26586",
        "https://github.com/apache/airflow/blob/main/.markdownlint.yml",
        "https://github.com/apache/airflow/commit/b7b17641d0c17bfa5e1f8c77b9c232da73bbedcd",
        "https://github.com/apache/airflow/pull/15682",
        "https://github.com/apache/airflow/blob/main/.pre-commit-config.yaml",
        "https://github.com/apache/airflow/commit/2f3601de8a8b30bc7c4033af97a50c7c55add2bf",
        "https://github.com/apache/airflow/pull/45815",
        "https://github.com/apache/airflow/blob/main/.rat-excludes",
        "https://github.com/apache/airflow/commit/30925c739b60d8a54d84c7c58a3ab854c167f2c1",
        "https://github.com/apache/airflow/pull/42184",
        "https://github.com/apache/airflow/blob/main/.readthedocs.yml",
        "https://github.com/apache/airflow/blob/main/BREEZE.rst",
        "https://github.com/apache/airflow/commit/8708bffa879e57a3c9379376fee5d6186027412d",
        "https://github.com/apache/airflow/pull/36969",
        "https://github.com/apache/airflow/blob/main/CODE_OF_CONDUCT.md",
        "https://github.com/apache/airflow/commit/d8205676495319f51bfe6b45a3f99e59e5dbe504",
        "https://github.com/apache/airflow/pull/9715",
        "https://github.com/apache/airflow/blob/main/COMMITTERS.rst",
        "https://github.com/apache/airflow/commit/031444dc02e451269d9dfec8875f8fed3d98bfff",
        "https://github.com/apache/airflow/blob/main/CONTRIBUTING.rst",
        "https://github.com/apache/airflow/commit/1c7fe71fb8356b07be481d9fc10d098730b72190",
        "https://github.com/apache/airflow/pull/39901",
        "https://github.com/apache/airflow/blob/main/Dockerfile",
        "https://github.com/apache/airflow/commit/3da6796728df04419d153a36557b38b77c40de14",
        "https://github.com/apache/airflow/pull/45750",
        "https://github.com/apache/airflow/blob/main/Dockerfile.ci",
        "https://github.com/apache/airflow/blob/main/INSTALL",
        "https://github.com/apache/airflow/commit/c89ab99aced32c854a7806f3a2e00f8eaeb0764a",
        "https://github.com/apache/airflow/blob/main/INTHEWILD.md",
        "https://github.com/apache/airflow/commit/916ca469c8f040ac68771afdf4c8ef1f20e9da07",
        "https://github.com/apache/airflow/pull/45822",
        "https://github.com/apache/airflow/blob/main/ISSUE_TRIAGE_PROCESS.rst",
        "https://github.com/apache/airflow/commit/dc59212b8522a33c42ab57c7d256d2c6c76e92f0",
        "https://github.com/apache/airflow/pull/43511",
        "https://github.com/apache/airflow/commit/fcb9f87c55a30da2c727881ff6cf47aca25dae78",
        "https://github.com/apache/airflow/pull/40067",
        "https://github.com/apache/airflow/blob/main/NOTICE",
        "https://github.com/apache/airflow/commit/1f0bd6d7a3c1f6ab6503c76637a64c02c55b433a",
        "https://github.com/apache/airflow/pull/45333",
        "https://github.com/apache/airflow/blob/main/PROVIDERS.rst",
        "https://github.com/apache/airflow/commit/59520efd2a527cfa253e4b23727c0851ef9f4269",
        "https://github.com/apache/airflow/pull/45153",
        "https://github.com/apache/airflow/blob/main/README.md",
        "https://github.com/apache/airflow/commit/6b554301fce4a52dd648be95a5124c9ae3d08670",
        "https://github.com/apache/airflow/pull/44958",
        "https://github.com/apache/airflow/blob/main/RELEASE_NOTES.rst",
        "https://github.com/apache/airflow/blob/main/codecov.yml",
        "https://github.com/apache/airflow/commit/b8a25b980265b26282f3414f1fdf5dab01fd5185",
        "https://github.com/apache/airflow/pull/41846",
        "https://github.com/apache/airflow/blob/main/doap_airflow.rdf",
        "https://github.com/apache/airflow/commit/e5dd577a03405f0b84dda821030800ecd7852a02",
        "https://github.com/apache/airflow/pull/34131",
        "https://github.com/apache/airflow/blob/main/hatch_build.py",
        "https://github.com/apache/airflow/commit/a51ebe43780afc7ba95453a46fd3b8bfae450540",
        "https://github.com/apache/airflow/pull/45563",
        "https://github.com/apache/airflow/blob/main/prod_image_installed_providers.txt",
        "https://github.com/apache/airflow/commit/e46006b25b025eee2feb5aedcb3bb01069a4b730",
        "https://github.com/apache/airflow/pull/42760",
        "https://github.com/apache/airflow/blob/main/pyproject.toml",
        "https://github.com/apache/airflow/commit/25aeb1166e6e8d093892ad3a7b1a341375b0cf51",
        "https://github.com/apache/airflow/pull/45786",
        "https://github.com/apache/airflow/blob/main/yamllint-config.yml",
        "https://github.com/apache/airflow/",
        "https://github.com/apache/airflow/#apache-airflow",
        "https://github.com/psf/black",
        "https://github.com/apache/airflow/graphs/contributors",
        "https://github.com/apache/airflow/#project-focus",
        "https://github.com/apache/airflow/#principles",
        "https://github.com/apache/airflow/#requirements",
        "https://github.com/apache/airflow/#getting-started",
        "https://github.com/apache/airflow/#installing-from-pypi",
        "https://github.com/apache/airflow/#official-source-code",
        "https://github.com/apache/airflow/#convenience-packages",
        "https://github.com/apache/airflow/#user-interface",
        "https://github.com/apache/airflow/#semantic-versioning",
        "https://github.com/apache/airflow/#version-life-cycle",
        "https://github.com/apache/airflow/#support-for-python-and-kubernetes-versions",
        "https://github.com/apache/airflow/#base-os-support-for-reference-airflow-images",
        "https://github.com/apache/airflow/#approach-to-dependencies-of-airflow",
        "https://github.com/apache/airflow/#contributing",
        "https://github.com/apache/airflow/#voting-policy",
        "https://github.com/apache/airflow/#who-uses-apache-airflow",
        "https://github.com/apache/airflow/#who-maintains-apache-airflow",
        "https://github.com/apache/airflow/#what-goes-into-the-next-release",
        "https://github.com/apache/airflow/#can-i-use-the-apache-airflow-logo-in-my-presentation",
        "https://github.com/apache/airflow/#links",
        "https://github.com/apache/airflow/#sponsors",
        "https://github.com/spotify/luigi",
        "https://github.com/apache/airflow/issues/10388",
        "https://github.com/apache/airflow/#approach-for-dependencies-for-airflow-core",
        "https://github.com/kubernetes-client/python#compatibility",
        "https://github.com/apache/airflow/#approach-for-dependencies-in-airflow-providers-and-extras",
        "https://github.com/apache/airflow/blob/main/contributing-docs/README.rst",
        "https://github.com/apache/airflow/blob/main/contributing-docs/03_contributors_quick_start.rst",
        "https://github.com/apache/airflow/blob/main/dev/breeze/doc/ci/02_images.md",
        "https://github.com/apache/airflow/blob/main/COMMITTERS.rst#guidelines-to-become-an-airflow-committer",
        "https://github.com/apache/airflow/blob/main/dev/WHAT_GOES_INTO_THE_NEXT_RELEASE.md",
        "https://github.com/apache/airflow/tree/main/docs/apache-airflow/img/logos/",
        "https://github.com/topics/python",
        "https://github.com/topics/workflow",
        "https://github.com/topics/data-science",
        "https://github.com/topics/machine-learning",
        "https://github.com/topics/airflow",
        "https://github.com/topics/automation",
        "https://github.com/topics/etl",
        "https://github.com/topics/workflow-engine",
        "https://github.com/topics/scheduler",
        "https://github.com/topics/apache",
        "https://github.com/topics/orchestration",
        "https://github.com/topics/data-engineering",
        "https://github.com/topics/data-integration",
        "https://github.com/topics/elt",
        "https://github.com/topics/data-pipelines",
        "https://github.com/topics/dag",
        "https://github.com/topics/apache-airflow",
        "https://github.com/topics/mlops",
        "https://github.com/topics/workflow-orchestration",
        "https://github.com/topics/data-orchestrator",
        "https://github.com/apache/airflow/#readme-ov-file",
        "https://github.com/apache/airflow/#Apache-2.0-1-ov-file",
        "https://github.com/apache/airflow/#coc-ov-file",
        "https://github.com/apache/airflow/#security-ov-file",
        "https://github.com/apache/airflow/custom-properties",
        "https://github.com/apache/airflow/watchers",
        "https://github.com/contact/report-content?content_url=https%3A%2F%2Fgithub.com%2Fapache%2Fairflow&report=apache+%28user%29",
        "https://github.com/apache/airflow/releases",
        "https://github.com/apache/airflow/releases/tag/2.10.4",
        "https://github.com/orgs/apache/packages?repo_name=airflow",
        "https://github.com/orgs/apache/packages/container/package/airflow%2Fmain%2Fci%2Fpython3.7",
        "https://github.com/orgs/apache/packages/container/package/airflow%2Fmain%2Fprod%2Fpython3.7",
        "https://github.com/orgs/apache/packages/container/package/airflow%2Fmain%2Fci%2Fpython3.8",
        "https://github.com/apache/airflow/network/dependents",
        "https://github.com/potiuk",
        "https://github.com/mistercrunch",
        "https://github.com/kaxil",
        "https://github.com/mik-laj",
        "https://github.com/uranusjr",
        "https://github.com/jedcunningham",
        "https://github.com/dstandish",
        "https://github.com/Taragolis",
        "https://github.com/eladkal",
        "https://github.com/ephraimbuddy",
        "https://github.com/bolkedebruin",
        "https://github.com/bbovenzi",
        "https://github.com/hussein-awala",
        "https://github.com/apache/airflow/search?l=python",
        "https://github.com/apache/airflow/search?l=typescript",
        "https://github.com/apache/airflow/search?l=javascript",
        "https://github.com/apache/airflow/search?l=shell",
        "https://github.com/apache/airflow/search?l=html",
        "https://github.com/apache/airflow/search?l=dockerfile",
        "https://github.com",
        "https://docs.github.com/site-policy/github-terms/github-terms-of-service",
        "https://docs.github.com/site-policy/privacy-policies/github-privacy-statement",
        "https://github.com/security",
        "https://docs.github.com/",
        "https://support.github.com?tags=dotcom-footer",
        "https://github.blog",
        "https://airflow.apache.org/",
        "https://issues.apache.org/jira/browse/AIRFLOW-3611",
        "https://badge.fury.io/py/apache-airflow",
        "https://codecov.io/gh/apache/airflow",
        "https://www.apache.org/licenses/LICENSE-2.0.txt",
        "https://pypi.org/project/apache-airflow/",
        "https://hub.docker.com/r/apache/airflow",
        "https://artifacthub.io/packages/search?repo=apache-airflow",
        "https://x.com/ApacheAirflow",
        "https://s.apache.org/airflow-slack",
        "https://ossrank.com/p/6",
        "https://airflow.apache.org/docs/apache-airflow/stable/",
        "https://oozie.apache.org/",
        "https://azkaban.github.io/",
        "https://airflow.apache.org/docs/apache-airflow/stable/concepts/xcoms.html",
        "https://hub.docker.com/p/apache/airflow",
        "https://airflow.apache.org/docs/apache-airflow/stable/installation/",
        "https://airflow.apache.org/docs/apache-airflow/stable/start.html",
        "https://airflow.apache.org/docs/apache-airflow/stable/tutorial/",
        "https://s.apache.org/airflow-docs/",
        "https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals",
        "https://airflow.apache.org/docs/",
        "https://python-poetry.org",
        "https://pypi.org/project/pip-tools",
        "http://airflow.apache.org/docs/apache-airflow-providers/index.html",
        "https://www.apache.org",
        "https://www.apache.org/legal/release-policy.html",
        "https://downloads.apache.org/airflow",
        "https://www.apache.org/legal/release-policy.html#release-approval",
        "https://airflow.apache.org/docs/docker-stack/index.html",
        "https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/dags.png",
        "https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/grid.png",
        "https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/graph.png",
        "https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/duration.png",
        "https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/gantt.png",
        "https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/code.png",
        "https://semver.org/",
        "https://devguide.python.org/#status-of-python-branches",
        "https://kubernetes.io/docs/setup/release/version-skew-policy/",
        "https://raw.githubusercontent.com/apache/airflow/main/Dockerfile",
        "https://airflow.apache.org/docs/docker-stack/build.html",
        "https://docs.celeryq.dev/en/stable/contributing.html?highlight=semver#versions",
        "https://airflow.apache.org/docs/apache-airflow-providers/index.html",
        "https://people.apache.org/committers-by-project.html#airflow",
        "https://airflow.apache.org/docs/apache-airflow/stable/release-process.html",
        "https://www.apache.org/foundation/marks/#books",
        "https://cwiki.apache.org/confluence/display/AIRFLOW/Brandbook",
        "https://www.apache.org/logos/about.html",
        "https://airflow.apache.org/community/",
        "https://astronomer.io",
        "https://aws.amazon.com/opensource/",
        "https://camo.githubusercontent.com/78f1264a64793301d1615a117fbfb36dc4ac3c1f5ef9be6104895273ae224d24/68747470733a2f2f7374617469632e73636172662e73682f612e706e673f782d707869643d31623561356533632d646138312d343266352d626566612d343264383336626631623534",
        "https://www.githubstatus.com/"
    ]
}