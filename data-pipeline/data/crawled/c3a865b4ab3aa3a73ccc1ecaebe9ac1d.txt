[Skip to content](#start-of-content)

## Navigation Menu

Toggle navigation

[ ](/)

[ Sign in ](/login?return_to=https%3A%2F%2Fgithub.com%2Fgoogle-research%2Fgoogle-research%2Ftree%2Fmaster%2Fscann%2F)

  * Product 

    * [ GitHub Copilot Write better code with AI  ](https://github.com/features/copilot)
    * [ Security Find and fix vulnerabilities  ](https://github.com/features/security)
    * [ Actions Automate any workflow  ](https://github.com/features/actions)
    * [ Codespaces Instant dev environments  ](https://github.com/features/codespaces)
    * [ Issues Plan and track work  ](https://github.com/features/issues)
    * [ Code Review Manage code changes  ](https://github.com/features/code-review)
    * [ Discussions Collaborate outside of code  ](https://github.com/features/discussions)
    * [ Code Search Find more, search less  ](https://github.com/features/code-search)

Explore
    * [ All features ](https://github.com/features)
    * [ Documentation ](https://docs.github.com)
    * [ GitHub Skills ](https://skills.github.com)
    * [ Blog ](https://github.blog)

  * Solutions 

By company size
    * [ Enterprises ](https://github.com/enterprise)
    * [ Small and medium teams ](https://github.com/team)
    * [ Startups ](https://github.com/enterprise/startups)
    * [ Nonprofits ](/solutions/industry/nonprofits)

By use case
    * [ DevSecOps ](/solutions/use-case/devsecops)
    * [ DevOps ](/solutions/use-case/devops)
    * [ CI/CD ](/solutions/use-case/ci-cd)
    * [ View all use cases ](/solutions/use-case)

By industry
    * [ Healthcare ](/solutions/industry/healthcare)
    * [ Financial services ](/solutions/industry/financial-services)
    * [ Manufacturing ](/solutions/industry/manufacturing)
    * [ Government ](/solutions/industry/government)
    * [ View all industries ](/solutions/industry)

[ View all solutions ](/solutions)

  * Resources 

Topics
    * [ AI ](/resources/articles/ai)
    * [ DevOps ](/resources/articles/devops)
    * [ Security ](/resources/articles/security)
    * [ Software Development ](/resources/articles/software-development)
    * [ View all ](/resources/articles)

Explore
    * [ Learning Pathways ](https://resources.github.com/learn/pathways)
    * [ White papers, Ebooks, Webinars ](https://resources.github.com)
    * [ Customer Stories ](https://github.com/customer-stories)
    * [ Partners ](https://partner.github.com)
    * [ Executive Insights ](https://github.com/solutions/executive-insights)

  * Open Source 

    * [ GitHub Sponsors Fund open source developers  ](/sponsors)

    * [ The ReadME Project GitHub community articles  ](https://github.com/readme)

Repositories
    * [ Topics ](https://github.com/topics)
    * [ Trending ](https://github.com/trending)
    * [ Collections ](https://github.com/collections)

  * Enterprise 

    * [ Enterprise platform AI-powered developer platform  ](/enterprise)

Available add-ons
    * [ Advanced Security Enterprise-grade security features  ](https://github.com/enterprise/advanced-security)
    * [ GitHub Copilot Enterprise-grade AI features  ](/features/copilot#enterprise)
    * [ Premium Support Enterprise-grade 24/7 support  ](/premium-support)

  * [Pricing](https://github.com/pricing)



Search or jump to...

# Search code, repositories, users, issues, pull requests...

Search 

Clear

[Search syntax tips](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax)

#  Provide feedback 

We read every piece of feedback, and take your input very seriously.

Include my email address so I can be contacted

Cancel  Submit feedback 

#  Saved searches 

## Use saved searches to filter your results more quickly

Name

Query

To see all available qualifiers, see our [documentation](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax). 

Cancel  Create saved search 

[ Sign in ](/login?return_to=https%3A%2F%2Fgithub.com%2Fgoogle-research%2Fgoogle-research%2Ftree%2Fmaster%2Fscann%2F)

[ Sign up ](/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E%2Ffiles%2Fdisambiguate&source=header-repo&source_repo=google-research%2Fgoogle-research) Reseting focus

You signed in with another tab or window. [Reload]() to refresh your session. You signed out in another tab or window. [Reload]() to refresh your session. You switched accounts on another tab or window. [Reload]() to refresh your session. Dismiss alert

{{ message }}

[ google-research ](/google-research) / **[google-research](/google-research/google-research) ** Public

  * [ Notifications ](/login?return_to=%2Fgoogle-research%2Fgoogle-research) You must be signed in to change notification settings
  * [ Fork 8k ](/login?return_to=%2Fgoogle-research%2Fgoogle-research)
  * [ Star  34.7k ](/login?return_to=%2Fgoogle-research%2Fgoogle-research)




  * [ Code ](/google-research/google-research)
  * [ Issues 943 ](/google-research/google-research/issues)
  * [ Pull requests 550 ](/google-research/google-research/pulls)
  * [ Actions ](/google-research/google-research/actions)
  * [ Security ](/google-research/google-research/security)
  * [ Insights ](/google-research/google-research/pulse)



Additional navigation options

  * [ Code  ](/google-research/google-research)
  * [ Issues  ](/google-research/google-research/issues)
  * [ Pull requests  ](/google-research/google-research/pulls)
  * [ Actions  ](/google-research/google-research/actions)
  * [ Security  ](/google-research/google-research/security)
  * [ Insights  ](/google-research/google-research/pulse)



## Files

master

  * .circleci

  * Algorithms_and_Hardness_for_Learning_Linear_Thresholds_from_Label_Proportions

  * CIQA

  * COSTAR

  * CardBench_zero_shot_cardinality_training

  * CoDi

  * Domain_Agnostic_Contrastive_Representations_for_Learning_from_Label_Proportions

  * KNF

  * LLP_Bench

  * On_Combining_Bags_to_Better_Learn_from_Label_Proportions

  * OpenMSD

  * STraTA

  * aav

  * abps

  * abstract_nas

  * action_angle_networks

  * action_gap_rl

  * activation_clustering

  * active_selective_prediction

  * adaptive_learning_rate_tuner

  * adaptive_low_rank

  * adaptive_prediction

  * adaptive_surrogates

  * adversarial_nets_lr_scheduler

  * after_kernel

  * agile_modeling

  * al_for_fep

  * albert

  * algae_dice

  * aloe

  * alx

  * amortized_bo

  * android_control

  * android_in_the_wild

  * anthea

  * aptamers_mlpd

  * aqt

  * aquadem

  * ara_optimization

  * arithmetic_sampling

  * arxiv_latex_cleaner

  * assemblenet

  * assessment_plan_modeling

  * attentional_adapters

  * attribute_semantics

  * attribute_with_prefixlm

  * attribution

  * auditing_privacy_via_lia

  * automated_feature_engineering

  * automatic_structured_vi

  * automl_zero

  * autoregressive_diffusion

  * aux_tasks

  * axial

  * bam

  * bangbang_qaoa

  * basisnet

  * batch_science

  * behavior_regularized_offline_rl

  * bertseq2seq

  * better_storylines

  * bigg

  * bigger_better_faster

  * bisimulation_aaai2020

  * bitempered_loss

  * blur

  * bnn_hmc

  * bonus_based_exploration

  * brush_splat

  * building_detection

  * business_metric_aware_forecasting

  * bustle

  * c_learning

  * cache_replacement

  * caltrain

  * camp_zipnerf

  * cann

  * capsule_em

  * caql

  * cascaded_networks

  * cate

  * causal_label_bias

  * cbertscore

  * cell_embedder

  * cell_mixer

  * cfq

  * cfq_pt_vs_sa

  * charformer

  * ciw_label_noise

  * ckd

  * class_balanced_distillation

  * clay

  * clip_as_rnn

  * cluster_gcn

  * clustering_normalized_cuts

  * cmmd

  * cnn_quantization

  * cochlear_implant

  * code_as_policies

  * codistillation

  * cognate_inpaint_neighbors

  * coherent_gradients

  * cola

  * cold_posterior_bnn

  * cold_posterior_flax

  * collaborative_tr_collection

  * collocated_irradiance_network

  * coltran

  * combiner

  * comisr

  * compgen_d2t

  * compositional_classification

  * compositional_rl

  * compositional_transformers

  * concept_explanations

  * concept_marl

  * conceptor

  * conqur

  * constrained_language_typology

  * context_aware_transliteration

  * contrack

  * contrails

  * contrastive_rl

  * coref_mt5

  * correct_batch_effects_wdn

  * correlated_compression

  * correlation_clustering

  * covid_epidemiology

  * covid_vhh_design

  * cube_unfoldings

  * cubert

  * cvl_public

  * d3pm

  * dac

  * darc

  * data_free_distillation

  * data_selection

  * dataset_or_not

  * dble

  * ddpm_w_distillation

  * deciphering_clinical_abbreviations

  * dedal

  * deep_homography

  * deep_representation_one_class

  * demogen

  * dense_representations_for_entity_retrieval

  * deplot

  * depth_and_motion_learning

  * depth_from_video_in_the_wild

  * design_bipartite_experiments

  * dialogue_ope

  * dichotomy_of_control

  * dictionary_learning

  * didi_dataset

  * differentiable_data_selection

  * differentially_private_gnns

  * diffusion_distillation

  * dimensions_of_motion

  * dipper

  * direction_net

  * disarm

  * dissecting_factual_predictions

  * distinguishing_romanized_hindi_urdu

  * distracting_control

  * distribution_embedding_networks

  * dnn_predict_accuracy

  * do_wide_and_deep_networks_learn_the_same_things

  * docent

  * domain_conditional_predictors

  * dot_vs_learned_similarity

  * dp_alternating_minimization

  * dp_instructions

  * dp_multiq

  * dp_posets

  * dp_regression

  * dp_sgd_clipping

  * dp_topk

  * dp_transfer

  * dpok

  * dql_grasping

  * drawtext

  * dreamfields

  * dreg_estimators

  * drfact

  * drjax

  * drops

  * dselect_k_moe

  * dual_dice

  * dual_pixels

  * dvrl

  * earthquakes_fern

  * ebp

  * editable_graph_temporal

  * eim

  * eli5_retrieval_large_lm

  * elo_rater_model

  * enas_lm

  * encyclopedic_vqa

  * entropy_semiring

  * eq_mag_prediction

  * es_enas

  * es_maml

  * es_optimization

  * etcmodel

  * etcsum

  * euphonia_spice

  * ev3

  * evanet

  * evolution

  * experience_replay

  * explaining_risk_increase

  * extreme_memorization

  * f_divergence_estimation_ram_mc

  * f_net

  * factoring_sqif

  * factorize_a_city

  * factors_of_influence

  * fair_submodular_matroid

  * fair_submodular_maximization_2020

  * fair_survival_analysis

  * fairness_and_bias_in_online_selection

  * fairness_teaching

  * fast_gradient_clipping

  * fast_k_means_2020

  * fastconvnets

  * fat

  * federated_vision_datasets

  * felix

  * findit

  * fisher_brc

  * flare_removal

  * flax_models

  * floatseg

  * flood_forecasting

  * fm4tlp

  * fractals_language

  * frechet_audio_distance

  * frechet_video_distance

  * frequency_analysis

  * frmt

  * frost

  * fsq

  * fully_dynamic_facility_location

  * fully_dynamic_submodular_maximization

  * fvlm

  * fwl

  * gaternet

  * gbrt

  * ged_tts

  * gen_patch_neural_rendering

  * general-pattern-machines

  * generalization_representations_rl_aistats22

  * generalized_rates

  * generative_forests

  * generative_trees

  * genomics_ood

  * geometric_tokenizer

  * gfsa

  * ghum

  * gift

  * gigamol

  * goemotions

  * gon

  * gradient_based_tuning

  * gradient_coresets_replay

  * graph_compression

  * graph_embedding

  * graph_sampler

  * graph_temporal_ai

  * graphqa

  * grbm

  * group_agnostic_fairness

  * grouptesting

  * grow_bert

  * gumbel_max_causal_gadgets

  * gwikimatch

  * hal

  * hct

  * health_equity_toolbox

  * hierarchical_foresight

  * high_confidence_ir_eval_using_genai

  * hipi

  * hist_thresh

  * hitnet

  * hmc_swindles

  * homophonous_logography

  * hspace

  * hst_clustering

  * human_attention

  * human_object_interaction

  * hybrid_zero_dynamics

  * hyperattention

  * hyperbolic

  * hyperbolic_discount

  * hypertransformer

  * ials

  * icetea

  * ieg

  * igt_optimizer

  * ime

  * imghum

  * imp

  * implicit_constrained_optimization

  * implicit_pdf

  * incontext

  * incremental_gain

  * individually_fair_clustering

  * inerf

  * infinite_nature

  * infinite_nature_zero

  * infinite_uncertainty

  * instruction_following_eval

  * intent_recognition

  * interactive_cbms

  * interpretability_benchmark

  * invariant_explanations

  * invariant_slot_attention

  * investigating_m4

  * ipagnn

  * irregular_timeseries_pretraining

  * isl

  * isolating_factors

  * jax_dft

  * jax_mpc

  * jax_particles

  * jaxbarf

  * jaxnerf

  * jaxraytrace

  * jaxsel

  * jaxstronomy

  * jrl

  * jslm

  * k_norm

  * keypose

  * kip

  * kl_guided_sampling

  * kobe

  * ksme

  * kwikbucks

  * kws_streaming

  * l2da

  * l2tl

  * label_bias

  * lamp

  * language_model_uncertainty

  * large_margin

  * large_scale_voting

  * lasagna_mt

  * latent_programmer

  * latent_shift_adaptation

  * layout-blt

  * learn_to_forget

  * learn_to_infer

  * learning_parameter_allocation

  * learning_with_little_mixing

  * learnreg

  * ledge

  * lego

  * light_field_neural_rendering

  * lighthouse

  * linear_dynamical_systems

  * linear_eval

  * linear_identifiability

  * linear_vae

  * lista_design_space

  * llm4mobile

  * llm_longdoc_interpretability

  * lm_fact_tracing

  * lm_memorization

  * local_forward_gradient

  * locoprop

  * logic_inference_dataset

  * logit_adjustment

  * logit_dp

  * loss_functions_transfer

  * low_rank_local_connectivity

  * m_layer

  * m_theory

  * macro_mining

  * madlad_400

  * many_constraints

  * marot

  * mathwriting

  * matsci

  * mave

  * mbpp

  * mechanic

  * meena

  * memento

  * memory_efficient_attention

  * menger_rl

  * mentormix

  * merf

  * mesh_diffusion

  * meta_augmentation

  * meta_learning_without_memorization

  * meta_pseudo_labels

  * meta_reward_learning

  * metapose

  * mface

  * mico

  * micronet_challenge

  * microscope_image_quality

  * milking_cowmask

  * minigrid_basics

  * mir_uai24

  * misinfo_provenance

  * missing_link

  * ml_debiaser

  * mmmt_if

  * mobilebert

  * model_pruning

  * model_swarm

  * moe_models_implicit_bias

  * moe_mtl

  * moew

  * mol_dqn

  * moment_advice

  * motion_blur

  * mpi_extrapolation

  * mqm_viewer

  * muNet

  * mucped22

  * mucped23

  * muller

  * multi_annotator

  * multi_game_dt

  * multi_resolution_rec

  * multilingual_abbreviation_survey

  * multimodalchat

  * munchausen_rl

  * musiq

  * mutual_information_representation_learning

  * muzero

  * ncsnv3

  * negative_cache

  * nerflets

  * nested_rhat

  * neural_additive_models

  * neural_guided_symbolic_regression

  * neutra

  * newspalm_mbr_qe

  * nf_diffusion

  * ngrammer

  * nigt_optimizer

  * nngp_nas

  * non_decomp

  * non_semantic_speech_benchmark

  * nopad_inception_v3_fcn

  * norml

  * npy_array

  * numbert

  * occluder_recovery

  * offline_online_bandits

  * omnimatte3D

  * on_device_rewrite

  * online_belief_propagation

  * online_correlation_clustering

  * opencontrails

  * openscene

  * opt_list

  * optimizing_interpretability

  * osf

  * padir

  * pair_ngram

  * pairwise_fairness

  * pali

  * palm2_automqm

  * parallel_clustering

  * pde_preconditioner

  * performer

  * persistent-nature

  * persistent_es

  * perso_arabic_norm

  * perturbations

  * pgdl

  * playrooms

  * poem

  * policy_eval

  * polish

  * poly_kernel_sketch

  * polysketchformer

  * postproc_fairness

  * pretrained_conv

  * prime

  * primer

  * privacy_poison

  * privacy_sandbox

  * private_covariance_estimation

  * private_kendall

  * private_personalized_pagerank

  * private_sampling

  * private_text_transformers

  * procedure_cloning

  * property_linking

  * protein_lm

  * protenn

  * protnlm

  * protoattend

  * protseq

  * proxy_rewards

  * pruning_identified_exemplars

  * pse

  * psyborgs

  * psycholab

  * ptopk_patch_selection

  * pvn

  * pwil

  * q_match

  * qanet

  * qsp_quantum_metrology

  * quantile_regression

  * quantum_sample_learning

  * r4r

  * rank_ckpt

  * rankgen

  * rankt5

  * ravens

  * rcc_algorithms

  * rce

  * re_identification_risk

  * readtwice

  * realformer

  * recs_ecosystem_creator_rl

  * recursive_optimizer

  * red-ace

  * regnerf

  * relc

  * rembert

  * remote_sensing_representations

  * repnet

  * representation_batch_rl

  * representation_clustering

  * representation_similarity

  * reset_free_learning

  * resolve_ref_exp_elements_ml

  * restarting_FOM_for_LP

  * revisiting_neural_scaling_laws

  * rewritelm

  * richhf_18k

  * rico_semantics

  * rise

  * rl4circopt

  * rl_metrics_aaai2021

  * rl_repr

  * rllim

  * robust_count_sketch

  * robust_loss

  * robust_loss_jax

  * robust_optim

  * robust_retrieval

  * rouge

  * routing_transformer

  * rpc

  * rrlfd

  * rs_gnn

  * saccader

  * saf

  * sail_rl

  * saycan

  * scalable_shampoo

  * scaling_transformer_inference_efficiency

  * scaling_transformers

  * scann

    * build_deps

    * docs

    * scann

    * tf_serving

    * BUILD.bazel

    * MANIFEST.in

    * README.md

    * WORKSPACE

    * configure.py

    * requirements.txt

    * setup.py

  * schema_guided_dst

  * schptm_benchmark

  * score_prior

  * scouts_ml_model_env

  * screen2words

  * scrna_benchmark

  * sd_gym

  * seeds

  * semantic_routing

  * seq2act

  * sequential_attention

  * sgk

  * shortcut_testing

  * sifer

  * sign_language_detection

  * simpdom

  * simple_mesh_viewer

  * simple_probabilistic_programming

  * simulation_research

  * single_view_mpi

  * sketching

  * sliding_window_clustering

  * slot_attention

  * sm3

  * smart_eval

  * smerf

  * smith

  * smu

  * smug_saliency

  * smurf

  * snerg

  * snlds

  * sobolev

  * social_rl

  * socraticmodels

  * soft_sort

  * soft_topk

  * soil_moisture_retrieval

  * solver1d

  * sorb

  * spaceopt

  * sparse_data

  * sparse_deferred

  * sparse_mixers

  * sparse_soft_topk

  * sparse_user_encoders

  * special_orthogonalization

  * specinvert

  * spectral_bias

  * spectral_graphormer

  * speech_embedding

  * spelling_convention_nlm

  * spin_spherical_cnns

  * spreadsheet_coder

  * sql_palm

  * squiggles

  * stable_transfer

  * stacked_capsule_autoencoders

  * standalone_self_attention_in_vision_models

  * star_cfq

  * state_of_sparsity

  * stochastic_to_deterministic

  * storm_optimizer

  * strategic_exploration

  * stream_s2s

  * streetview_contrails_dataset

  * structformer

  * structured_multihashing

  * student_mentor_dataset_cleaning

  * study_recommend

  * subclass_distillation

  * sudoku_gpt

  * sufficient_input_subsets

  * summae

  * supcon

  * supervised_pixel_contrastive_loss

  * symbiosis

  * symbolic_functionals

  * t5_closed_book_qa

  * table_rag

  * tabnet

  * tag

  * talk_about_random_splits

  * taperception

  * task_set

  * task_specific_learned_opt

  * tcc

  * tempered_boosting

  * text_blueprint

  * tf3d

  * tf_trees

  * tft

  * tide

  * tide_nlp

  * time_varying_optimization

  * tiny_video_nets

  * tip

  * topological_transformer

  * towards_gan_benchmarks

  * trainable_grids

  * transformer_modifications

  * trimap

  * true_teacher

  * truss_decomposition

  * tsmixer

  * tubevit

  * tunas

  * uflow

  * ugif

  * ugsl

  * ul2

  * uncertainties

  * understanding_convolutions_on_graphs

  * universal_embedding_challenge

  * unprocessing

  * uq_benchmark_2019

  * using_dl_to_annotate_protein_universe

  * vae_ood

  * value_dice

  * value_function_polytope

  * vatt

  * vbmi

  * vct

  * vdvae_flax

  * video_structure

  * video_timeline_modeling

  * vila

  * visual_relationship

  * vmsst

  * vrdu

  * warmstart_graphcut_image_segmentation

  * wavelet_fields

  * weak_disentangle

  * whatever-name-we-choose

  * widget-caption

  * widget_caption

  * wiki_split_bleu_eval

  * wildfire_conv_lstm

  * wildfire_perc_sim

  * wt5

  * xirl

  * xor_attriqa

  * yeast_transcription_network

  * yobo

  * yoto

  * youtube_asl

  * youtube_sl_25

  * zebra_puzzle_generator

  * zebraix

  * zero_shot_structured_reflection

  * .gitignore

  * CONTRIBUTING.md

  * LICENSE

  * README.md

  * __init__.py

  * compile_protos.sh




## Breadcrumbs

  1. [google-research](/google-research/google-research/tree/master)



/

# scann

/

Copy path

## Directory actions

## More options

## Directory actions

## More options

## Latest commit

![sammymax](https://avatars.githubusercontent.com/u/6895661?v=4&size=40)![copybara-github](https://avatars.githubusercontent.com/u/32201506?v=4&size=40)

[sammymax](/google-research/google-research/commits?author=sammymax)

and

[copybara-github](/google-research/google-research/commits?author=copybara-github)

[ScaNN release 1.3.5](/google-research/google-research/commit/e220e62ef332d80219a8a141c751dfdedbfccc6c)

Jan 16, 2025

[e220e62](/google-research/google-research/commit/e220e62ef332d80219a8a141c751dfdedbfccc6c) · Jan 16, 2025

## History

[History](/google-research/google-research/commits/master/scann)

[](/google-research/google-research/commits/master/scann)

## Breadcrumbs

  1. [google-research](/google-research/google-research/tree/master)



/

# scann

/

Top

## Folders and files

Name| Name| Last commit message| Last commit date  
---|---|---|---  
  
### parent directory

[..](/google-research/google-research/tree/master)  
[build_deps](/google-research/google-research/tree/master/scann/build_deps "build_deps")| [build_deps](/google-research/google-research/tree/master/scann/build_deps "build_deps")| [ScaNN release 1.3.5](/google-research/google-research/commit/e220e62ef332d80219a8a141c751dfdedbfccc6c "ScaNN release 1.3.5
PiperOrigin-RevId: 716352253")| Jan 16, 2025  
[docs](/google-research/google-research/tree/master/scann/docs "docs")| [docs](/google-research/google-research/tree/master/scann/docs "docs")| [ScaNN release 1.3.5](/google-research/google-research/commit/e220e62ef332d80219a8a141c751dfdedbfccc6c "ScaNN release 1.3.5
PiperOrigin-RevId: 716352253")| Jan 16, 2025  
[scann](/google-research/google-research/tree/master/scann/scann "scann")| [scann](/google-research/google-research/tree/master/scann/scann "scann")| [ScaNN release 1.3.5](/google-research/google-research/commit/e220e62ef332d80219a8a141c751dfdedbfccc6c "ScaNN release 1.3.5
PiperOrigin-RevId: 716352253")| Jan 16, 2025  
[tf_serving](/google-research/google-research/tree/master/scann/tf_serving "tf_serving")| [tf_serving](/google-research/google-research/tree/master/scann/tf_serving "tf_serving")| [ScaNN release 1.2.10](/google-research/google-research/commit/03c4c851a28dffe0244c65089e68d6cbf73c730b "ScaNN release 1.2.10
PiperOrigin-RevId: 553157017")| Aug 2, 2023  
[BUILD.bazel](/google-research/google-research/blob/master/scann/BUILD.bazel "BUILD.bazel")| [BUILD.bazel](/google-research/google-research/blob/master/scann/BUILD.bazel "BUILD.bazel")| [ScaNN release 1.3.4](/google-research/google-research/commit/25d0f4ab2cc249573e763b0a913d8504ab6137aa "ScaNN release 1.3.4
PiperOrigin-RevId: 666428378")| Aug 22, 2024  
[MANIFEST.in](/google-research/google-research/blob/master/scann/MANIFEST.in "MANIFEST.in")| [MANIFEST.in](/google-research/google-research/blob/master/scann/MANIFEST.in "MANIFEST.in")| [Initial release of ScaNN](/google-research/google-research/commit/69a5c082f9abd88be38f82c533fceb1da18b7ff7 "Initial release of ScaNN
PiperOrigin-RevId: 315993967")| Jun 12, 2020  
[README.md](/google-research/google-research/blob/master/scann/README.md "README.md")| [README.md](/google-research/google-research/blob/master/scann/README.md "README.md")| [ScaNN release 1.3.5](/google-research/google-research/commit/e220e62ef332d80219a8a141c751dfdedbfccc6c "ScaNN release 1.3.5
PiperOrigin-RevId: 716352253")| Jan 16, 2025  
[WORKSPACE](/google-research/google-research/blob/master/scann/WORKSPACE "WORKSPACE")| [WORKSPACE](/google-research/google-research/blob/master/scann/WORKSPACE "WORKSPACE")| [ScaNN release 1.3.5](/google-research/google-research/commit/e220e62ef332d80219a8a141c751dfdedbfccc6c "ScaNN release 1.3.5
PiperOrigin-RevId: 716352253")| Jan 16, 2025  
[configure.py](/google-research/google-research/blob/master/scann/configure.py "configure.py")| [configure.py](/google-research/google-research/blob/master/scann/configure.py "configure.py")| [Open-sourcing the code for "CLIP as RNN: Segment Countless Visual Con…](/google-research/google-research/commit/1d49f2c0d5506a6e11115726164d42f6b7b7b95a "Open-sourcing the code for "CLIP as RNN: Segment Countless Visual Concepts without Training Endeavor".
https://arxiv.org/abs/2312.07661
PiperOrigin-RevId: 600601383")| Jan 23, 2024  
[requirements.txt](/google-research/google-research/blob/master/scann/requirements.txt "requirements.txt")| [requirements.txt](/google-research/google-research/blob/master/scann/requirements.txt "requirements.txt")| [ScaNN release 1.3.5](/google-research/google-research/commit/e220e62ef332d80219a8a141c751dfdedbfccc6c "ScaNN release 1.3.5
PiperOrigin-RevId: 716352253")| Jan 16, 2025  
[setup.py](/google-research/google-research/blob/master/scann/setup.py "setup.py")| [setup.py](/google-research/google-research/blob/master/scann/setup.py "setup.py")| [ScaNN release 1.3.5](/google-research/google-research/commit/e220e62ef332d80219a8a141c751dfdedbfccc6c "ScaNN release 1.3.5
PiperOrigin-RevId: 716352253")| Jan 16, 2025  
View all files  
  
## [README.md](#readme)

# ScaNN

[](#scann)

ScaNN (Scalable Nearest Neighbors) is a method for efficient vector similarity search at scale. This code implements [1, 2], which includes search space pruning and quantization for Maximum Inner Product Search and also supports other distance functions such as Euclidean distance. The implementation is optimized for x86 processors with AVX support. ScaNN achieves state-of-the-art performance on [ann-benchmarks.com](http://ann-benchmarks.com) as shown on the glove-100-angular dataset below:

[![glove-100-angular](https://github.com/google-research/google-research/raw/master/scann/docs/glove_bench.png)](https://github.com/google-research/google-research/raw/master/scann/docs/glove_bench.png)

ScaNN can be configured to fit datasets with different sizes and distributions. It has both TensorFlow and Python APIs. The library shows strong performance with large datasets [1, 2]. The code is released for research purposes. For more details on the academic description of algorithms, please see below.

References:

  1. ```
`@inproceedings{avq_2020, title={Accelerating Large-Scale Inference with Anisotropic Vector Quantization}, author={Guo, Ruiqi and Sun, Philip and Lindgren, Erik and Geng, Quan and Simcha, David and Chern, Felix and Kumar, Sanjiv}, booktitle={International Conference on Machine Learning}, year={2020}, URL={https://arxiv.org/abs/1908.10396} } `
```

  2. ```
`@inproceedings{soar_2023, title={SOAR: Improved Indexing for Approximate Nearest Neighbor Search}, author={Sun, Philip and Simcha, David and Dopson, Dave and Guo, Ruiqi and Kumar, Sanjiv}, booktitle={Neural Information Processing Systems}, year={2023}, URL={https://arxiv.org/abs/2404.00774} } `
```




## Installation

[](#installation)

`manylinux_2_27`-compatible wheels are available on [PyPI](https://pypi.org/project/scann/):

```
`pip install scann `
```

ScaNN supports Linux environments running Python versions 3.9-3.12. See [docs/releases.md](/google-research/google-research/blob/master/scann/docs/releases.md) for release notes; the page also contains download links for ScaNN wheels prior to version 1.1.0, which were not released on PyPI. **The x86 wheels require AVX and FMA instruction set support, while the ARM wheels require NEON**.

In accordance with the [`manylinux_2_27` specification](https://peps.python.org/pep-0600/), ScaNN requires `libstdc++` version 3.4.23 or above from the operating system. See [here](https://stackoverflow.com/questions/10354636) for an example of how to find your system's `libstdc++` version; it can generally be upgraded by installing a newer version of `g++`.

### TensorFlow dependency

[](#tensorflow-dependency)

ScaNN can function without TensorFlow, but for backwards compatibility reasons, ScaNN by default imports the ScaNN TensorFlow ops, so it's still registered as having a hard dependency on TensorFlow. You can use `pip install --no-deps scann` to avoid installing the large TensorFlow dependency if you're not interested in using ScaNN's TensorFlow bindings (`scann.scann_ops`). (For users not already in the TensorFlow ecosystem, the native Python bindings in `scann.scann_ops_pybind` are a better fit.)

### Integration with TensorFlow Serving

[](#integration-with-tensorflow-serving)

We provide custom Docker images of [TF Serving](https://github.com/tensorflow/serving) that are linked to the ScaNN TF ops. See the [`tf_serving` directory](/google-research/google-research/blob/master/scann/tf_serving/README.md) for further information.

## Building from source

[](#building-from-source)

To build ScaNN from source, first install the build tool [bazel](https://bazel.build) (use version 7.x), Clang 17, and libstdc++ headers for C++17 (which are provided with GCC 9). Additionally, ScaNN requires a modern version of Python (3.9.x or later) and Tensorflow 2.18 installed on that version of Python. Once these prerequisites are satisfied, run the following command in the root directory of the repository:

```
`python configure.py CC=clang-17 bazel build -c opt --features=thin_lto --copt=-mavx --copt=-mfma --cxxopt="-std=c++17" --copt=-fsized-deallocation --copt=-w :build_pip_pkg ./bazel-bin/build_pip_pkg `
```

To build an ARM binary from an ARM machine, the prerequisites are the same, but the compile flags are slightly modified:

```
`python configure.py CC=clang-17 bazel build -c opt --features=thin_lto --copt=-march=armv8-a+simd --cxxopt="-std=c++17" --copt=-fsized-deallocation --copt=-w :build_pip_pkg ./bazel-bin/build_pip_pkg `
```

A .whl file should appear in the root of the repository upon successful completion of these commands. This .whl can be installed via pip.

## Usage

[](#usage)

See the example in [docs/example.ipynb](/google-research/google-research/blob/master/scann/docs/example.ipynb). For a more in-depth explanation of ScaNN techniques, see [docs/algorithms.md](/google-research/google-research/blob/master/scann/docs/algorithms.md).

## Footer

[ ](https://github.com "GitHub") © 2025 GitHub, Inc. 

### Footer navigation

  * [Terms](https://docs.github.com/site-policy/github-terms/github-terms-of-service)
  * [Privacy](https://docs.github.com/site-policy/privacy-policies/github-privacy-statement)
  * [Security](https://github.com/security)
  * [Status](https://www.githubstatus.com/)
  * [Docs](https://docs.github.com/)
  * [Contact](https://support.github.com?tags=dotcom-footer)
  * Manage cookies 
  * Do not share my personal information 



You can’t perform that action at this time. 
