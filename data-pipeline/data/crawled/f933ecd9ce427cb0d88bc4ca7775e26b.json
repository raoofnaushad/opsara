{
    "id": "f933ecd9ce427cb0d88bc4ca7775e26b",
    "metadata": {
        "id": "f933ecd9ce427cb0d88bc4ca7775e26b",
        "url": "https://www.evidentlyai.com/ranking-metrics/evaluating-recommender-systems/",
        "title": "10 metrics to evaluate recommender and ranking systems",
        "properties": {
            "description": "How do you evaluate recommender and ranking systems? This guide gives an overview of popular ranking metrics and approaches to evaluating recommendations.",
            "keywords": null,
            "author": null,
            "og:title": "10 metrics to evaluate recommender and ranking systems",
            "og:description": "How do you evaluate recommender and ranking systems? This guide gives an overview of popular ranking metrics and approaches to evaluating recommendations.",
            "og:image": "https://cdn.prod.website-files.com/660ef16a9e0687d9cc27474a/662c43274f595f388968dd04_65777cea0d277e5207445e30_10%2520metrics%2520to%2520evaluate_header.png",
            "og:type": "website",
            "twitter:card": "summary_large_image"
        }
    },
    "parent_metadata": {
        "id": "31aad42ec77addb8cfcca67e444b2afd",
        "url": "https://www.notion.so/Metrics-31aad42ec77addb8cfcca67e444b2afd",
        "title": "Metrics",
        "properties": {
            "Type": [
                "Leaf"
            ]
        }
    },
    "content": "[üéì Free introductory course \"LLM evaluations for AI product teams\". Save your seat](/llm-evaluations-course)![](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/660ef16a9e0687d9cc2747cf_vector.svg)\n\n[![](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/66180fbf4f40e9ed73ca2d39_evidently_ai_logo_fi.png)](/)\n\nProduct\n\n[![Icon](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/664e1f22864ff24118d07024_chat-text-duotone%20\\(1\\).svg)LLM observabilityEvaluate LLM-powered products, from RAGs to AI assistants.](/llm-observability)[![Icon](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/664d50547ea050df1ee60188_chart-line-duotone.svg)ML observabilityMonitor data drift, data quality, and performance for production ML models.](/ml-monitoring)[![Icon](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/664e1f2301afb605005be14d_lock-simple-open-duotone.svg)Open-sourceOpen-source Python library for ML monitoring with 20m+ downloads.](/evidently-oss)\n\n[Pricing](/pricing)[Docs](https://docs.evidentlyai.com/)\n\nResources\n\n[![Icon](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/664abba265e01ed75b39988c_book-duotone.svg)BlogInsights on building AI products](/blog)[![](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/675a45076643cf7042075aac_star-duotone%20\\(1\\).svg)LLM benchmarks100+ LLM benchmarks and datasets](/llm-evaluation-benchmarks-datasets)[![Icon](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/664abdb7fbdd19d6d3f1875c_code-duotone%20\\(1\\).svg)TutorialsAI observability and MLOps tutorials](/mlops-tutorials)[![Icon](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/664abdb798a210c5d2640337_lightbulb-duotone%20\\(1\\).svg)ML and LLM system design500 ML and LLM use cases](/ml-system-design)[![Icon](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/664abdb798a210c5d2640368_check-duotone%20\\(1\\).svg)GuidesIn-depth AI quality and MLOps guides ](/mlops-guides)[![Icon](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/664abdbd5bfc045c59b3467f_gear-duotone%20\\(1\\).svg)ML and AI platforms45+ internal ML and AI platforms](/ml-platforms)[![Icon](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/664abdb7ee755c4dc43cefc2_users-three-duotone%20\\(1\\).svg)CommunityGet support and chat about AI products](/community)\n\n##### [Course on LLM evaluations for AI product teams![](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/673f571568470a0a8d49aa43_three-cheerful-robot-students-take-exam%20\\(4\\).jpg)](/llm-evaluations-course)[Sign up now![Icon](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/660ef16a9e0687d9cc27473e_Group%209.svg)](/llm-evaluations-course)\n\n[Get demo](/get-demo)[Sign up](/register)\n\n[Get demo](/get-demo)[Sign up](/register)\n\n![Icon](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/664abe8f5bd7dda2d12a1e6d_list-bold.svg)\n\n###### Ranking and Recommendation Metrics Guide\n\n# 10 metrics to evaluate recommender and ranking systems\n\nLast updated:\n\nJanuary 9, 2025\n\ncontents**‚Äç**\n\n[ What is a recommender system?](#what-is-a-recommender-system)\n\n[Evaluation principles ](#evaluation-principles)\n\n[Predictive quality metrics](#predictive-quality-metrics)\n\n[Precision at K](#precision-at-k)\n\n[Recall at K ](#recall-at-k)\n\n[F-score](#f-score)\n\n[Ranking quality metrics](#ranking-quality-metrics)\n\n[MRR](#mrr)\n\n[MAP](#map)\n\n[Hit rate](#hit-rate)\n\n[NDCG](#ndcg)\n\n[Behavioral metrics ](#behavioral-metrics)\n\n[Diversity](#diversity)\n\n[Novelty ](#novelty)\n\n[Serendipity ](#serendipity)\n\n[Popularity bias ](#popularity-bias)\n\n[Business metrics](#business-metrics)\n\n[Ranking quality with Evidently](#ranking-quality-with-evidently)\n\nThere are different ways to evaluate recommendations, from predictive and ranking metrics to tracking behavioral properties like diversity or novelty. \n\nThis guide provides an overview of the main evaluation principles for ranking and recommendations, introduces metrics you can use, and gives a deep dive into 10 of them. \n\nWe also introduce [Evidently](https://github.com/evidentlyai/evidently), an open-source Python library for ML model evaluation and monitoring. \n\n## TL;DR\n\n  * Recommendations and ranking systems share the goal of returning a **list of items** sorted by relevance.\n  * To evaluate recommendations, you must have **predictions** as user-item pairs, the binary or graded **relevance score** as the ground truth**,** and choose the K parameter. \n  * The **K parameter** setsthe cutoff point for the top recommendations you evaluate.\n  * You can use **predictive metrics** like accuracy or Precision at K or **ranking metrics** like NDCG, MRR, or MAP at K. \n  * To go **beyond accuracy,** you can use behavioral metrics like serendipity, novelty, or diversity of recommendations. \n  * To measure the actual impact, you can track **business metrics** like sales, click-through rates, or conversions during online evaluations.\n\n\n\n![Evidently Classification Performance Report](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/662c488bf7fc70afcba17ffa_cropped_00_main_01_hero-min-p-2000.png)\n\nStart with AI observability\n\nWant to keep tabs on your ranking and recommendation models? Automate the quality checks with Evidently Cloud. Powered by the leading open-source Evidently library with 20m+ downloads.\n\n[Start free ‚ü∂](/register)[Or try open source ‚ü∂](https://github.com/evidentlyai/evidently)\n\n![Evidently Classification Performance Report](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/662c488bf7fc70afcba17ffa_cropped_00_main_01_hero-min-p-2000.png)\n\nStart with AI observability\n\nWant to keep tabs on your ranking and recommendation models? Automate the quality checks with Evidently Cloud. Powered by the leading open-source Evidently library with 20m+ downloads.\n\n[Start free ‚ü∂](/register)[Or try open source ‚ü∂](https://github.com/evidentlyai/evidently)\n\n## What is a recommender system?\n\n> **TL;DR.** A recommender system solves a ranking task. It returns a list of sorted items that might be relevant for a specific user. Other ranking examples include search and information retrieval, where the goal is to rank documents relevant to a particular query. \n\nPicture this: you're scrolling through Netflix, browsing Amazon, or diving into articles on Medium, and suddenly, bam! There's that product, movie, or article you didn't know you needed but turned out exactly what you were looking for. Thank you, recommender system! \n\nA **recommender system** is a specialized information filtering system, trained to predict user preferences or ratings for a given item, such as movies you are likely to watch or products you are likely to buy. You can employ recommendations for many use cases, from e-commerce stores to your favorite social networks. \n\nUnder the hood, a recommender system prepares a list of potential matches for each user and then sorts them from best to worst. In a more technical sense, the goal of a recommender system is to establish a mapping function to predict the utility for various user-item pairs and then sort the items based on their calculated utility (= a measure of how well it matches the user profile or intent).\n\n![Personalized recommendations](https://cdn.prod.website-files.com/660ef16a9e0687d9cc27474a/662c43274f595f388968dd56_65774429aac376e1674f957d_ranking_evalutions.png)\n\nThe recommender system is one flavor of a **ranking** task, but there are others. Ultimately, the goal of any ranking system is to help prioritize and arrange items in a list. However, the expectations on how to do it best may vary.\n\nA different example of a ranking task is an **information retrieval** system like an internet search engine. Unlike recommendations where you want to find items that broadly match a ‚Äúuser‚Äôs profile,‚Äù search happens after an explicit user‚Äôs input or query.\n\nThink about the last time you typed something in a search engine. Chances are, you did not look for it to surprise or entertain you with unexpected links. Instead, you wanted to find the correct response to your query at the very top of the page. \n\nDespite their differences, the output of any ranking system usually looks the same: it is a **list** of items (movies, products, items, documents, links) ordered by their expected relevance. Since all ranking systems aim to present items in a sorted manner, you can often use the same metrics to evaluate them. Of course, there are a few nuances regarding when each metric fits best for each task. \n\nThis guide will cover a few common metrics for ranking and recommendation, from Precision and Recall to more complex NDCG, MAP, or Serendipity.\n\n## Evaluation principles \n\nBefore we dive into the metrics, let‚Äôs establish the shared principles in evaluating recommender and ranking systems. \n\n### Input data\n\n> **TL;DR.** You need the model **predictions** and **ground truth** to evaluate the recommendation or ranking quality. Predictions are a list of ranked items generated by the model. The ground truth is the actual **relevance** label or score. \n\nLet's start with the data. A recommendation dataset typically looks like this: you have a list of users and items. For each user-item pair, you have a score or a rank. This is the model prediction. (If you deal with search, swap the user for a query).\n\n![Recommendation dataset](https://cdn.prod.website-files.com/660ef16a9e0687d9cc27474a/662c43274f595f388968dd3c_657744dcaac376e167501a9c_ranking_evalutions1.png)\n\n**Items** are whatever your system is ranking. For an e-commerce store, these are product IDs; for Netflix, these are movies to watch; for a search system, these are pages to rank, and so on. \n\nBut how do you know if the ranking is any good? To evaluate the quality of the predictions, you must compare these ranks or scores against some **ground truth.** These **target** values reflect the actual success of recommendations. We often refer to them as relevance scores.\n\n![Recommendation dataset target results](https://cdn.prod.website-files.com/660ef16a9e0687d9cc27474a/662c43276eacc9d38bcbe9ed_65774504c9aaf12aca69c337_ranking_evalutions2.png)\n\nOnce you have the ground truth, you can judge how closely the predictions align with user preferences or outcomes.\n\nNow, how exactly do you get these relevance scores?\n\nBefore putting recommender systems to use, you usually perform **offline evaluation**. The goal is to test your best model or compare a few candidates. In these scenarios, you work with historical data. The ground truth is already there. \n\nHere is how the process usually goes:\n\n  * You start with the dataset that records the users' activities, such as movies they watched or items they bought. \n  * You split all available data into training and test sets chronologically.\n  * You use the earlier data to train a model and predict, say, future purchases by a specific user.\n\n\n\nAfter you generate the recommendations, you can compare the predictions against the unseen**data in the test set.**\n\n![User purchase history](https://cdn.prod.website-files.com/660ef16a9e0687d9cc27474a/662c43274f595f388968dd42_657745453a50ee58b249a538_ranking_evalutions3.png)\n\nSay you trained the movie recommendation model on the part of the viewing history and generated a set of predictions for each user. Then, you can compare the recommendations (movies the system expected the users to like) against the remaining watch history (what the users watched outside of the training data).\n\nIn this case, the record of the movies users watched later provides the ‚Äúground truth‚Äù for the model evaluation.\n\nWhen you monitor **live** recommendation systems in production, you can collect the ground truth as it comes by recording meaningful user actions. The good news is that you can often get the data quickly.\n\nFor example, if you display recommendations on an e-commerce website, you can track user clicks, upvotes, or purchases. Say, if you show a ‚Äúyou might also like‚Äù block at the user, you might track if the user adds any recommended items to the cart.\n\n![Event-tracking process](https://cdn.prod.website-files.com/660ef16a9e0687d9cc27474a/662c43274f595f388968dd59_65774578aac376e167506e49_ranking_evalutions4.png)\n\nBuilding a proper **event-tracking process** within the application to capture necessary user actions is crucial to production recommender system monitoring. Without this data, you cannot know if you are getting it right. These online user actions are the source of ground truth that reflects the actual **relevance** of recommendations.\n\nBut wait ‚Äì what is this relevance, once again?\n\n### What is the relevance?\n\n> **TL;DR.** Relevance reflects the quality of the individual item in the list. It can be a binary score (for example, based on the user action ‚Äì like clicking, watching, or buying a recommended item) or a graded score (like a rating from 1 to 5).\n\nRelevant recommendations are the ‚Äúgood‚Äù or ‚Äúaccurate‚Äù recommendations ‚Äî however you define this ‚Äùgoodness.‚Äù Relevance reflects how well an item matches a user profile or query. Say, for e-commerce stores, relevant items are things you are likely to buy. For a search engine, these are the documents that answer a given query well.\n\nBut how exactly do you measure and express this relevance?\n\nRelevance is often a simple **binary score** : for each item, you can decide whether it is relevant. Did the user click on it? Relevant. Skipped? Not. Did the user give it a like? Add it to the cart? Started listening to the podcast? You got the idea. All you need to do is to record the chosen action and match it with a recommended item.\n\n![Recommendations relevance](https://cdn.prod.website-files.com/660ef16a9e0687d9cc27474a/662c43274f595f388968dd5c_657745cbe96eb355932771b4_ranking_evalutions5.png)\n\nYou might also have a **graded relevance** score. For instance, you can assign specific values to different user actions. In a simplified example: ‚Äú1‚Äù if the user clicks on an item, ‚Äú2‚Äù if they save it as a favorite, ‚Äú3‚Äù if they add it to the cart, ‚Äú4‚Äù if they complete the purchase. Such a scoring system requires custom design ‚Äì and is not always easy to maintain in practice.\n\nThe grading may happen naturally, such as when users give 1-5 star ratings to the items they buy or movies they watch. You can use these numerical scores as the measure of relevance. \n\nIn certain applications, like Internet search, you might even involve human assessors to provide structured grading. They can review some portions of the documents for specific queries and manually assign scores to label the degree of relevance.\n\n![Recommendations relevance score](https://cdn.prod.website-files.com/660ef16a9e0687d9cc27474a/662c43274f595f388968dd62_65774613e49e53433c61363b_ranking_evalutions6.png)\n\nRegardless of how you get the relevance scores, you might still need to post-process them. Many ranking quality metrics ‚Äì with a few exceptions like NDCG ‚Äì expect binary relevance as an input. \n\nTo convert scores into labels, you might use a simple rule, such as considering any four and 5-star reviews to reflect the relevance and treat anything below three as a ‚Äúdislike.‚Äù If you expect bias in labels, such as some users giving consistently higher or lower ratings, you might weigh or normalize them to ensure your static threshold is not too rigid.\n\n### Top-K parameter\n\n> **TL;DR.** The K parameter is the evaluation cutoff point. It represents the number of top-ranked items to evaluate. For example, you can focus on the quality of top-10 recommendations.\n\nWhen it comes to ranking quality evaluation, you typically need to define the **K parameter.** The \"K\" represents the number of top recommendations (ranked items) you want to assess. \n\nThe idea is pretty simple. The system may provide tens, hundreds, or even thousands of rankings or recommendations. These are too many items to sort through! Imagine the number of goods on Amazon on pages on the internet. \n\nAt the same time, the user's attention and time is limited. They will likely only look at and have the chance to interact with the limited set of top items. And this is where you want to focus on with your evaluations! \n\n![Top-K parameter](https://cdn.prod.website-files.com/660ef16a9e0687d9cc27474a/662c43274f595f388968dd45_657746779150e27ea77d27a9_ranking_evalutions7.png)\n\nK sets this cut-off point. Are you looking at top-10 recommendations? Or top-3? Or top-100? You can pick the number based on the use case. Or pick several Ks simultaneously.\n\nThe choice is up to you. Sometimes, the limit is based on how you present the recommendations. For example, you have exactly five spots in the block to suggest complementary items at the e-commerce checkout. Setting the K to 5 would make sense: you want to know how good these recommendations are, not what happens at the rank 100. \n\n‚Äç**Do you always need a K?** If you have a few items and know all the actual ranks, you might not need a cut-off. However, most recommendations and ranking scenarios involve lots of items. The users can't feasibly interact with all of them. You can't obtain enough actual labels. And if you can label every item, the data tends to be extremely skewed: 99.9% of items are irrelevant for a given user. So, there is little point in going too deep down the list, let alone looking at every item. You need to focus your evaluations on the top K.\n\n### Types of metrics\n\n> **TL;DR**. Predictive metrics evaluate how accurate the model predictions are. Ranking metrics show how well the items in the list are ordered. Behavioral metrics reflect important system properties like diversity of recommendations. \n\nLet‚Äôs sum it up! To evaluate a recommendation or ranking system, you need:\n\n  * **The model predictions.** They include the ranked list of user-item pairs. The complete dataset also contains features that describe users or items. You‚Äôll need them for some of the metrics. \n  * **The ground truth**. You need to know the actual user-item relevance to evaluate the quality of predictions. This might be a binary or graded relevance score. It is often based on the user interactions, such as clicks and conversions. \n  * **The K**. You need to pick the number of the top recommendations to consider. This puts a constraint on evaluations: you will disregard anything that happens after this cutoff point. \n\n\n\nSay you have all this in your dataset. How do you assess whether the recommendations are good enough to track and compare the performance? There are a few ways to figure this out.\n\n![Types of ranking and recommendations metrics](https://cdn.prod.website-files.com/660ef16a9e0687d9cc27474a/662c43274f595f388968dd5f_657746ee85af105651da9935_ranking_evalutions8.png)\n\nWe can roughly group the recommender or ranking quality metric into three categories:\n\n**1. Predictive metrics.** They reflect the ‚Äúcorrectness‚Äù of recommendations and show how well the system finds relevant items. \n\n**2. Ranking metrics.** They reflect the ranking quality: how well the system can sort the items from more relevant to less relevant.\n\n**3. Behavioral metrics.** These metrics reflect specific properties of the system, such as how diverse or novel the recommendations are.\n\nNo single metric can capture all aspects of system performance at once. You can combine several offline metrics for a comprehensive evaluation. Additionally, you can incorporate online business metrics, user feedback, and subjective evaluations for a more holistic assessment. \n\nLet‚Äôs explore some of the metrics in detail!\n\n## Predictive quality metrics\n\nPredictive metrics assess if a system can make accurate predictions about item relevance.\n\nIf you deal with a graded relevance score, you can employ regression metrics, such as Mean Absolute Error (MAE), Mean Squared Error (MSE), or Root Mean Squared Error (RMSE). They help measure the error between predicted and actual scores.\n\nIf your system has a binary relevance label, you can borrow metrics from [classification tasks](https://www.evidentlyai.com/classification-metrics), such as Precision at K, Recall at K, or F-measure. \n\nLet‚Äôs look at some metrics suitable for binary relevance labels. \n\n### Precision at K\n\n> **TL;DR.** Precision at K measures the proportion of relevant items among the top K items.\n\nPrecision shows how many recommendations among the provided ones are relevant. It gives an assessment of prediction ‚Äúcorrectness.‚Äù It is intuitive and easy to understand: Precision in ranking works the same as its counterpart in [classification quality evaluation](https://www.evidentlyai.com/classification-metrics/accuracy-precision-recall). \n\nBut there is a rub: Precision values vary depending on the number of relevant items a user has. If there are a total of 3 relevant items ‚Äì the maximum Precision at ten is capped at 30%. This makes it hard to compare or average Precision across all users in the dataset.\n\nUltimately, Precision is useful when there are many relevant items for each user, but their attention is limited. For example, you expect hundreds of potential matches, and your goal is to pick the top 5 to show. Precision helps measure how good this shortlist is. \n\n![Precision at K](https://cdn.prod.website-files.com/660ef16a9e0687d9cc27474a/662c43274f595f388968dd65_657749063e02547a6e1ac5f8_ranking_evalutions9.png)\n\n### Recall at K \n\n> **TL;DR.** Recall at K measures the coverage of relevant items in the top K.\n\nRecall at K shows how many relevant items, out of their total number, you can successfully retrieve within the top K recommendations. \n\nSay there are a total of 8 relevant items in the dataset. If you show five of them in the top-K recommendations, the Recall is 5/8 = 62.5%. \n\n![Recall at K](https://cdn.prod.website-files.com/660ef16a9e0687d9cc27474a/662c43274f595f388968dd68_6577495491814140e50a237e_ranking_evalutions10.png)\n\nRecall helps measure coverage: how many relevant items the system captured in the top K. It works well for applications with only a few relevant items, for example, in topic-specific information retrieval. You might expect the system to be able to return all relevant items in the search results, even at the cost of Precision.\n\n> Want a deep-dive explanation of Precision and Recall at K? Check out this [guide](https://www.evidentlyai.com/ranking-metrics/precision-recall-at-k).\n\n### F-score\n\n> **TL;DR.** The F Beta score is a metric that balances Precision and Recall.\n\nThe **F Beta score** at K combines Precision and Recall metrics into a single value to provide a balanced assessment. The Beta parameter allows adjusting the importance of Recall relative to Precision. \n\n![F-score](https://cdn.prod.website-files.com/660ef16a9e0687d9cc27474a/662c4327f27ee08d3e4d4b12_657749ca91c24b32cc3296bc_ranking_evalutions11.png)\n\nIf you set the Beta to 1, you will get the standard F1 score, a harmonic mean of Precision and Recall.\n\nThe F Beta score is a good metric when you care about both properties: correctness of predictions and ability to cover as many relevant items as possible with the top-K. The Beta parameter allows you to customize the priorities.\n\n**Can you limit the ranking evaluation to predictive metrics?** Metrics like Precision and Recall are very interpretable and easy to explain to non-technical users. They successfully capture the correctness of predictions. Both make them very useful. However, they have limitations. \n\nPrecision and Recall depend heavily on the total number of relevant items. Because of this, it might be challenging to compare the performance across different lists.\n\nIn addition, metrics like Precision and Recall are **not rank-aware.** They are indifferent to the position of relevant items inside the top K. \n\nConsider two lists that both have 5 out of 10 matches. In the first list, the relevant items are at the very top. In the second, they are at the very bottom. The Precision will be the same (50%) as long as the total number of relevant items is.\n\n![Precision metrics](https://cdn.prod.website-files.com/660ef16a9e0687d9cc27474a/662c43274f595f388968dd4b_65774a0f94f22c308b690b9e_ranking_evalutions12.png)\n\nIt‚Äôs not always what you expect: you might want to give more credit to the model when it can place more relevant items higher up. Ranking metrics help reflect this!\n\n## Ranking quality metrics\n\nRanking metrics help assess the ability to order the items based on their relevance to the user or query. In an ideal scenario, all the relevant items should appear ahead of the less relevant ones. Ranking metrics help measure how far you are from this.\n\nLet‚Äôs take a look at some of them.\n\n### MRR\n\n> **TL;DR.** MRR calculates the average of the reciprocal ranks of the first relevant item.\n\n**MRR (Mean Reciprocal Rank)** shows how soon you can find the first relevant item. \n\nTo calculate MRR, you take the reciprocal of the rank of the first relevant item and average this value across all queries or users. \n\nFor example, if the first relevant item appears in the second position, this list's RR (Reciprocal Rank) is 1/2. If the first relevant item takes the third place, then the RR equals 1/3, and so on.\n\n![Mean Reciprocal Rank metric](https://cdn.prod.website-files.com/660ef16a9e0687d9cc27474a/662c43274f595f388968dd6b_6577700e9a359194a880f9b3_ranking_evalutions13.png)\n\nOnce you compute the RRs for all lists, you can average it to get the resulting MRR for all users or queries. \n\nMRR is an easy-to-understand and intuitive metric. It is beneficial when the top-ranked item matters: for example, you expect the search engine to return a relevant first result.\n\nHowever, the limitation is that MRR solely focuses on the first relevant item and disregards all the rest. In case you care about overall ranking, you might need additional metrics.\n\n> Want a deep-dive explanation? Check out this [guide to MRR](https://www.evidentlyai.com/ranking-metrics/mean-reciprocal-rank-mrr).\n\n### MAP\n\n> **TL;DR.** MAP measures the average Precision across different Recall levels for a ranked list.\n\n‚Äç**Mean Average Precision (MAP)** at K evaluates the average Precision at all relevant ranks within the list of top K recommendations. This helps get a comprehensive measure of recommendation system performance, accounting for the quality of the ranking.\n\nTo compute MAP, you first need to calculate the Average Precision (AP) for each list: an average of Precision values at all positions in K with relevant recommendations.\n\n![Mean Average Precision \\(MAP\\)](https://cdn.prod.website-files.com/660ef16a9e0687d9cc27474a/662c43274f595f388968dd6e_65777082ed049fa9c7ac63fe_ranking_evalutions14.png)\n\nOnce you compute the AP for every list, you can average it across all users. Here is the complete formula: \n\n![Mean Average Precision \\(MAP\\) formula](https://cdn.prod.website-files.com/660ef16a9e0687d9cc27474a/662c4327f27ee08d3e4d4b12_657749ca91c24b32cc3296bc_ranking_evalutions11.png)\n\nMAP helps address the limitations of ‚Äúclassic‚Äù Prediction and Recall: it evaluates both the correctness of recommendations and how well the system can sort the relevant items inside the list.\n\nDue to the underlying formula, MAP heavily rewards correct recommendations at the top of the list. Otherwise, you will factor the errors at the top in every consecutive Precision computation. \n\nMAP is a valuable metric when it is important to get the top predictions right, like in information retrieval. As a downside, this metric might be hard to communicate and does not have an immediate intuitive explanation.\n\n> Want a step by step explanation? Check out this [guide to MAP](https://www.evidentlyai.com/ranking-metrics/mean-average-precision-map).\n\n### Hit rate\n\n> ‚Äç**TL;DR.** Hit Rate measures the share of users that get at least one relevant recommendation.\n\n**Hit Rate at K** calculates the share of users for which at least one relevant item is present in the K. This metric is very intuitive.\n\nYou can get a binary score for each user: ‚Äú1‚Äù if there is at least a single relevant item in top K or ‚Äú0‚Äù otherwise. Then, you can compute the average hit rate across all users.\n\n![Hit rate at K](https://cdn.prod.website-files.com/660ef16a9e0687d9cc27474a/662c43274f595f388968dd71_6577710d68cfb541c356e0e7_ranking_evalutions16.png)\n\nNote that the Hit Rate typically increases with K: there is a higher chance to encounter a relevant item in a longer list.\n\nYou can also compute multiple Hit Rate measurements at different K, for example, Hit Rate at 3, Hit Rate at 5, and Hit Rate at 10, and track them individually. \n\n### NDCG\n\n> **TL;DR.** NDCG considers both the relevance and the position of items in the ranked list.\n\n**‚Äã‚ÄãNormalized Discounted Cumulative Gain (NDCG)** measures the quality of a ranking system, considering the position of relevant items in the ranked list while giving more weight to the items placed higher.\n\nNDCG relies on the idea of cumulative gain, which measures the **total item relevance** in a list. To give more credit to the items higher in the ranking, it uses DCG (Discounted Cumulative Gain). DCG introduces a logarithmic discount to give lower weight to items further in the list.\n\n![Discounted Cumulative Gain formula](https://cdn.prod.website-files.com/660ef16a9e0687d9cc27474a/662c43274f595f388968dd77_65777152f977a3de390c5679_ranking_evalutions17.png)\n\nThen, you can divide the Discounted Cumulative Gain by the gain of an ideally ranked list where all the items are perfectly sorted based on relevance. As a result, you get a normalized (0 to 1) metric that shows how your ranking compares to an ideal outcome for a given list.\n\nImportantly, NDCG can also handle graded relevance scores when computing the cumulative gain.\n\n> Want a step by step explanation? Check out this [guide to NDCG](https://www.evidentlyai.com/ranking-metrics/ndcg-metric).\n\n**Are ranking quality metrics enough?** They help assess the ability to sort the recommended items in the right order, which is what you might expect from a well-performing system. \n\nIt is also helpful that many ranking metrics are inherently normalized. You can perform a fair comparison across lists of different lengths, irrespective of the total number of relevant items in the dataset. \n\nHowever, in practice, you might also care about additional qualities of the recommendation system. For example, is it showing different items to different users, or does it suffer from popularity bias? How novel are recommendations shown to each user? Behavioral metrics that help measure this.\n\n## Behavioral metrics \n\nBehavioral metrics help go ‚Äúbeyond accuracy‚Äù and evaluate important qualities of a recommender system, like the diversity and novelty of recommendations. \n\nLet‚Äôs take a look at some of these metrics. \n\n### Diversity\n\n> **TL;DR.** Diversity evaluates the variety of items recommended to users.\n\nRecommendation**diversity** assesses how varied the recommended items are for each user. It reflects the breadth of item types or categories to which each user is exposed.\n\nTo compute this metric, you can measure the **intra-list diversity** by evaluating the average Cosine Distance between pairs of items inside the list. Then, you can average it across all users. \n\nDiversity is helpful if you expect users to have a better experience when they receive recommendations that span a diverse range of topics, genres, or characteristics. \n\nHowever, while diversity helps check if a system can show a varied mix of items, it does not consider relevance. You can use this metric with ranking or predictive metrics to get a complete picture.\n\n![Recommendation diversity](https://cdn.prod.website-files.com/660ef16a9e0687d9cc27474a/662c43274f595f388968dd74_657771ea6af3ce37d18f8287_ranking_evalutions18.png)\n\n### Novelty \n\n> **TL;DR.** Novelty assesses how unique or unusual the recommended items are.\n\n**Novelty** assesses how unique the recommended items are to users. It measures the degree to which the suggested items differ from popular ones. \n\nYou can compute novelty as the negative logarithm (base 2) of the probability of encountering a given item in a training set. High novelty corresponds to long-tail items that few users interacted with, and low novelty corresponds to popular items. Then, you can average the novelty inside the list and across users. \n\nNovelty reflects the system's ability to recommend items that are not well-known in the dataset. It is helpful for scenarios when you expect users to get new and unusual recommendations to stay engaged.\n\n![Recommendation novelty](https://cdn.prod.website-files.com/660ef16a9e0687d9cc27474a/662c43274f595f388968dd7a_6577721d9e662a6a68a16264_ranking_evalutions19.png)\n\n### Serendipity \n\n> **TL;DR.** Serendipity measures the unexpectedness or pleasant surprise in recommendations. \n\n**Serendipity** evaluates the system's ability to suggest items beyond the user's typical preferences or expectations.\n\nSerendipity is challenging to quantify precisely, but one way to approach it is by considering the dissimilarity (measured via Cosine Distance) between successfully recommended items and a user's historical preferences. Then, you can average it across users. \n\nSerendipity reflects the ability of the system to venture beyond the predictable and offer new recommendations that users enjoy. It promotes exploring diverse and unexpected content, adding an element of delight and discovery.\n\n![Recommendation serendipity](https://cdn.prod.website-files.com/660ef16a9e0687d9cc27474a/662c43274f595f388968dd80_6577726e8891f4259cc026d1_ranking_evalutions20.png)\n\n### Popularity bias \n\n> **TL;DR.** Popularity bias helps assess if there is a bias towards recommending popular items.\n\n**Popularity bias** refers to a phenomenon where the recommendation favors popular items over more diverse or niche ones. It can lead to a lack of personalization, causing users to see the same widely popular items repeatedly. This bias may result in a less diverse and engaging user experience.\n\nThere are different ways to evaluate the popularity of recommendations, for example: \n\n  * Coverage: the share of all items in the catalog present in recommendations. \n  * Average recommendation popularity (ARP).\n  * Average overlap between the items in the lists.\n  * Gini index.\n\n\n\n![Recommendation personalization](https://cdn.prod.website-files.com/660ef16a9e0687d9cc27474a/662c43274f595f388968dd7d_65777a01f96a83e7797c83a4_ranking_evalutions21.png)\n\n## Business metrics\n\nFinally, you can measure business or product metrics when evaluating the online quality of the recommendation systems. They help understand the true impact of recommendations ‚Äì whether they lead to the desired business outcomes. Here are some examples of metrics: \n\n**Revenue.** First things first, if you can ‚Äì you can measure and prioritize metrics like average revenue per user (ARPU). You can estimate them in an A/B test, comparing the recommendations sales uplift against your baseline or a different model. You can also continuously monitor them in production: a sudden drop in the top business metrics will be the best signal of potential performance issues. \n\n**Click-through rate (CTR**). CTR is a straightforward metric that measures how often users click on recommendations. This metric is common in applications like online advertising. Unlike revenue, it does not suffer as much from attribution issues. You can simply measure the ratio between clicks and impressions (the number of times a certain item is shown). CTR helps track how many of the recommendations attract attention and engagement.\n\n**Conversion rate.** In addition to clicks, you can measure the actual conversions. You can track the share of clicks that result in a desired action ‚Äì such as purchase (in e-commerce), listening to a song (in media recommendations), or adding a recommended person as a friend (in social networks), and so on. \n\n**User engagement metrics**. You can also collect data about relevant user behavior, such as session length (e.g., time spent on the page, in-app, etc.),bounce rate (the share of users who leave after only viewing one page or item), and other metrics that reflect the experience and degree of interaction with the recommended content.\n\nUltimately, all such business metrics are not specific to machine learning. They are based on the product and business needs that led to the development of the recommendation system in the first place. \n\n## Ranking quality with Evidently\n\n[Evidently](https://github.com/evidentlyai/evidently) is an open-source Python library that helps evaluate, test and monitor machine learning models, including ranking and recommendations. Evidently computes and visualizes 15+ different ranking metrics, from MAP to behavioral metrics like serendipity and diversity. \n\nBy passing your dataset, you can quickly generate a comprehensive report with multiple metrics and interactive visualizations out of the box. \n\n![Ranking quality with Evidently AI](https://cdn.prod.website-files.com/660ef16a9e0687d9cc27474a/662c43284f595f388968dd87_657778e7bb694e63dc0f0824_ranking_evalutions22-min.png)\n\nYou can also use Evidently to run CI/CD tests, for example, to evaluate the model quality after retraining and deploy a live monitoring dashboard to keep track of the model metrics and test results over time.\n\nWould you like to learn more? Check out the open-source [Getting Started tutorials](https://docs.evidentlyai.com).\n\n##### Get started with AI observability\n\n> Try our open-source library with over 25 million downloads, or sign up to Evidently Cloud to run no-code checks and bring all the team to a single workspace to collaborate on AI quality.[Sign up free ‚ü∂](https://www.evidentlyai.com/register)[Or try open source ‚ü∂](https://github.com/evidentlyai/evidently)\n\n[RANKING QUALITY GUIDE](/ranking-metrics)\n\n[Metrics overview](/ranking-metrics/evaluating-recommender-systems)\n\n[Precision and Recall at K](/ranking-metrics/precision-recall-at-k)\n\n[Mean Average Precision (MAP)](/ranking-metrics/mean-average-precision-map)\n\n[Normalized Discounted Cumulative Gain (NDCG)](/ranking-metrics/ndcg-metric)\n\n[Mean Reciprocal Rank (MRR)](/ranking-metrics/mean-reciprocal-rank-mrr)\n\nGet started with AI observability\n\n[Sign up](/register)[Get demo](/get-demo)\n\n[Try open source![Icon](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/660ef16a9e0687d9cc27473e_Group%209.svg)](https://github.com/evidentlyai/evidently)\n\nWRITTEN BY\n\n![Evidently AI logo](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/663e5a2bef9e93f84fbb5ef1_66266589274806473c5ff4e1_64405645c79bf610ee86e32d_evidently_ai_logo_red_square%2520\\(1\\).png)\n\n#### Evidently AI Team\n\nshare on\n\n[![LinkedIn logo](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/660ef16a9e0687d9cc27475f_Group%2068.svg)](https://www.linkedin.com/)[![Twitter logo](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/665498e176df469709a54190_x-logo%20\\(1\\).svg)](http://twitter.com/)[![Facebook logo](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/660ef16a9e0687d9cc274774_Group%2065.svg)](http://facebook.com)\n\n## Read next\n\n[![Precision and recall at K in ranking and recommendations](https://cdn.prod.website-files.com/660ef16a9e0687d9cc27474a/662c4327f27ee08d3e4d4b01_657782c5eb4fa28b07f09e10_precision_recall_guide-min.png)Precision and Recall at KPrecision at K measures the share of relevant items within the top K positions. Recall at K evaluates how well the system captures all relevant items within the top K ranks. You can also use the F-score to get a balanced measure of Precision and Recall at K.](/ranking-metrics/precision-recall-at-k)\n\n[![Mean Average Precision \\(MAP\\) in ranking and recommendations](https://cdn.prod.website-files.com/660ef16a9e0687d9cc27474a/662c432b08687cce06cf3d01_657787707dbfa09e6cf02810_map_guide-min.png)Mean Average Precision (MAP)Mean Average Precision (MAP) at K reflects both the share of relevant recommendations and how good the system is at placing more relevant items at the top of the list. You can compute it as the mean of Average Precision (AP) across all users or queries.](/ranking-metrics/mean-average-precision-map)\n\nüéì Free course on LLM evaluations for AI product teams.[ Sign up **‚ü∂**](/llm-evaluations-course)\n\n[![](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/66180fbf4f40e9ed73ca2d39_evidently_ai_logo_fi.png)](/)\n\nProduct\n\n[![Icon](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/664e1f22864ff24118d07024_chat-text-duotone%20\\(1\\).svg)LLM observabilityEvaluate LLM-powered products, from RAGs to AI assistants.](/llm-observability)[![Icon](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/664d50547ea050df1ee60188_chart-line-duotone.svg)ML observabilityMonitor data drift, data quality, and performance for production ML models.](/ml-monitoring)[![Icon](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/664e1f2301afb605005be14d_lock-simple-open-duotone.svg)Open-sourceOpen-source Python library for ML monitoring with 20m+ downloads.](/evidently-oss)\n\n[Pricing](/pricing)[Docs](https://docs.evidentlyai.com/)\n\nResources\n\n[![Icon](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/664abba265e01ed75b39988c_book-duotone.svg)BlogInsights on building AI products](/blog)[![](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/675a45076643cf7042075aac_star-duotone%20\\(1\\).svg)LLM benchmarks100+ LLM benchmarks and datasets](/llm-evaluation-benchmarks-datasets)[![Icon](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/664abdb7fbdd19d6d3f1875c_code-duotone%20\\(1\\).svg)TutorialsAI observability and MLOps tutorials](/mlops-tutorials)[![Icon](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/664abdb798a210c5d2640337_lightbulb-duotone%20\\(1\\).svg)ML and LLM system design500 ML and LLM use cases](/ml-system-design)[![Icon](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/664abdb798a210c5d2640368_check-duotone%20\\(1\\).svg)GuidesIn-depth AI quality and MLOps guides](/mlops-guides)[![Icon](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/664abdbd5bfc045c59b3467f_gear-duotone%20\\(1\\).svg)ML and AI platforms45+ internal ML and AI platforms](/ml-platforms)[![Icon](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/664abdb7ee755c4dc43cefc2_users-three-duotone%20\\(1\\).svg)CommunityGet support and chat about AI products](/community)\n\n##### [Course on LLM evaluations for AI product teams![](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/673f571568470a0a8d49aa43_three-cheerful-robot-students-take-exam%20\\(4\\).jpg)](/llm-evaluations-course)[Sign up now![Icon](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/660ef16a9e0687d9cc27473e_Group%209.svg)](/llm-evaluations-course)\n\n[Get demo](/get-demo)[Sign up](/register)\n\n[Get demo](/get-demo)[Sign up](/register)\n\n![Icon](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/664abe8f5bd7dda2d12a1e6d_list-bold.svg)\n\n## Get Started with AI Observability\n\nBook a personalized 1:1 demo with our team or sign up for a free account.\n\n[Start free](/register)[Get demo](/get-demo)\n\n![Icon](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/660ef16a9e0687d9cc274771_Group%2069.svg)\n\nNo credit card required\n\n[![Evidently AI logo](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/664ac309d9d1086b0e8309f9_evidently%20logo_white.png)](/)\n\nEvaluate, test and monitor your AI-powered products.\n\nSubscribe to our monthly newsletter\n\nThank you! Your submission has been received!\n\nOops! Something went wrong while submitting the form.\n\n[LLM observability](/llm-observability)[ML observability](/ml-monitoring)[Open-source](/evidently-oss)\n\n[Blog](/blog)[Tutorials](/mlops-tutorials)[Guides](/mlops-guides)[ML platforms](/ml-platforms)[ML use cases](/ml-system-design)[ML observability course](/ml-observability-course)\n\n[Pricing](/pricing)[Docs](https://docs.evidentlyai.com/)[GitHub](https://github.com/evidentlyai/evidently)[Community](/community)\n\n[Privacy policy](/privacy)[Terms of service](/terms)\n\n¬© 2025, Evidently AI. All rights reserved\n\n[![](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/660ef16a9e0687d9cc274742_Group%2027.svg)](https://www.linkedin.com/company/evidently-ai/)[![Twitter logo](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/664f62d9e2ffd7e31ffae6c8_x-logo-duotone%20\\(1\\).svg)](http://twitter.com/EvidentlyAI)[![Discord logo](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/664f6316d09cc4b5e975db27_discord-logo-duotone%20\\(2\\).svg)](https://discord.com/invite/PyAJuUD5mB)[![YouTube logo](https://cdn.prod.website-files.com/660ef16a9e0687d9cc2746d7/664f634afd92ff37de706ab9_youtube-logo-duotone.svg)](https://www.youtube.com/c/evidentlyai)\n\nBy clicking ‚ÄúAccept‚Äù, you agree to the storing of cookies on your device to enhance site navigation, analyze site usage, and assist in our marketing efforts. View our [Privacy Policy](/privacy) for more information.\n\n[Deny](#)[Accept](#)\n\nPrivacy Preferences\n\nEssential cookies\n\nRequired\n\nMarketing cookies\n\nEssential\n\nPersonalization cookies\n\nEssential\n\nAnalytics cookies\n\nEssential\n\n[Reject all cookies](#)[Allow all cookies](#)[Save preferences](#)\n",
    "content_quality_score": null,
    "summary": null,
    "child_urls": [
        "https://www.evidentlyai.com/llm-evaluations-course",
        "https://www.evidentlyai.com/",
        "https://www.evidentlyai.com/llm-observability",
        "https://www.evidentlyai.com/ml-monitoring",
        "https://www.evidentlyai.com/evidently-oss",
        "https://www.evidentlyai.com/pricing",
        "https://www.evidentlyai.com/blog",
        "https://www.evidentlyai.com/llm-evaluation-benchmarks-datasets",
        "https://www.evidentlyai.com/mlops-tutorials",
        "https://www.evidentlyai.com/ml-system-design",
        "https://www.evidentlyai.com/mlops-guides",
        "https://www.evidentlyai.com/ml-platforms",
        "https://www.evidentlyai.com/community",
        "https://www.evidentlyai.com/get-demo",
        "https://www.evidentlyai.com/register",
        "https://www.evidentlyai.com/ranking-metrics/evaluating-recommender-systems/#what-is-a-recommender-system",
        "https://www.evidentlyai.com/ranking-metrics/evaluating-recommender-systems/#evaluation-principles",
        "https://www.evidentlyai.com/ranking-metrics/evaluating-recommender-systems/#predictive-quality-metrics",
        "https://www.evidentlyai.com/ranking-metrics/evaluating-recommender-systems/#precision-at-k",
        "https://www.evidentlyai.com/ranking-metrics/evaluating-recommender-systems/#recall-at-k",
        "https://www.evidentlyai.com/ranking-metrics/evaluating-recommender-systems/#f-score",
        "https://www.evidentlyai.com/ranking-metrics/evaluating-recommender-systems/#ranking-quality-metrics",
        "https://www.evidentlyai.com/ranking-metrics/evaluating-recommender-systems/#mrr",
        "https://www.evidentlyai.com/ranking-metrics/evaluating-recommender-systems/#map",
        "https://www.evidentlyai.com/ranking-metrics/evaluating-recommender-systems/#hit-rate",
        "https://www.evidentlyai.com/ranking-metrics/evaluating-recommender-systems/#ndcg",
        "https://www.evidentlyai.com/ranking-metrics/evaluating-recommender-systems/#behavioral-metrics",
        "https://www.evidentlyai.com/ranking-metrics/evaluating-recommender-systems/#diversity",
        "https://www.evidentlyai.com/ranking-metrics/evaluating-recommender-systems/#novelty",
        "https://www.evidentlyai.com/ranking-metrics/evaluating-recommender-systems/#serendipity",
        "https://www.evidentlyai.com/ranking-metrics/evaluating-recommender-systems/#popularity-bias",
        "https://www.evidentlyai.com/ranking-metrics/evaluating-recommender-systems/#business-metrics",
        "https://www.evidentlyai.com/ranking-metrics/evaluating-recommender-systems/#ranking-quality-with-evidently",
        "https://www.evidentlyai.com/classification-metrics",
        "https://www.evidentlyai.com/classification-metrics/accuracy-precision-recall",
        "https://www.evidentlyai.com/ranking-metrics/precision-recall-at-k",
        "https://www.evidentlyai.com/ranking-metrics/mean-reciprocal-rank-mrr",
        "https://www.evidentlyai.com/ranking-metrics/mean-average-precision-map",
        "https://www.evidentlyai.com/ranking-metrics/ndcg-metric",
        "https://www.evidentlyai.com/ranking-metrics",
        "https://www.evidentlyai.com/ranking-metrics/evaluating-recommender-systems",
        "https://www.evidentlyai.com/ml-observability-course",
        "https://www.evidentlyai.com/privacy",
        "https://www.evidentlyai.com/terms",
        "https://www.evidentlyai.com/ranking-metrics/evaluating-recommender-systems/",
        "https://docs.evidentlyai.com/",
        "https://github.com/evidentlyai/evidently",
        "https://docs.evidentlyai.com",
        "https://www.linkedin.com/",
        "http://twitter.com/",
        "http://facebook.com",
        "https://www.linkedin.com/company/evidently-ai/",
        "http://twitter.com/EvidentlyAI",
        "https://discord.com/invite/PyAJuUD5mB",
        "https://www.youtube.com/c/evidentlyai"
    ]
}