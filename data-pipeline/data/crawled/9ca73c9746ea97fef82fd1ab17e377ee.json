{
    "id": "9ca73c9746ea97fef82fd1ab17e377ee",
    "metadata": {
        "id": "9ca73c9746ea97fef82fd1ab17e377ee",
        "url": "https://github.com/pyg-team/pytorch_geometric/",
        "title": "GitHub - pyg-team/pytorch_geometric: Graph Neural Network Library for PyTorch",
        "properties": {
            "description": "Graph Neural Network Library for PyTorch. Contribute to pyg-team/pytorch_geometric development by creating an account on GitHub.",
            "keywords": null,
            "author": null,
            "og:image": "https://opengraph.githubassets.com/26f9358449fb49bc4f6864827d49e36720d4eb853dd2603bf78974e4a937dcff/pyg-team/pytorch_geometric",
            "og:image:alt": "Graph Neural Network Library for PyTorch. Contribute to pyg-team/pytorch_geometric development by creating an account on GitHub.",
            "og:image:width": "1200",
            "og:image:height": "600",
            "og:site_name": "GitHub",
            "og:type": "object",
            "og:title": "GitHub - pyg-team/pytorch_geometric: Graph Neural Network Library for PyTorch",
            "og:url": "https://github.com/pyg-team/pytorch_geometric",
            "og:description": "Graph Neural Network Library for PyTorch. Contribute to pyg-team/pytorch_geometric development by creating an account on GitHub.",
            "twitter:image": "https://opengraph.githubassets.com/26f9358449fb49bc4f6864827d49e36720d4eb853dd2603bf78974e4a937dcff/pyg-team/pytorch_geometric",
            "twitter:site": "@github",
            "twitter:card": "summary_large_image",
            "twitter:title": "GitHub - pyg-team/pytorch_geometric: Graph Neural Network Library for PyTorch",
            "twitter:description": "Graph Neural Network Library for PyTorch. Contribute to pyg-team/pytorch_geometric development by creating an account on GitHub."
        }
    },
    "parent_metadata": {
        "id": "dfee85e93778a9a1a971a06841e80277",
        "url": "https://www.notion.so/Knowledge-Graph-Embeddings-dfee85e93778a9a1a971a06841e80277",
        "title": "Knowledge Graph Embeddings",
        "properties": {
            "Type": [
                "Leaf"
            ]
        }
    },
    "content": "[Skip to content](#start-of-content)\n\n## Navigation Menu\n\nToggle navigation\n\n[ ](/)\n\n[ Sign in ](/login?return_to=https%3A%2F%2Fgithub.com%2Fpyg-team%2Fpytorch_geometric%2F)\n\n  * Product \n\n    * [ GitHub Copilot Write better code with AI  ](https://github.com/features/copilot)\n    * [ Security Find and fix vulnerabilities  ](https://github.com/features/security)\n    * [ Actions Automate any workflow  ](https://github.com/features/actions)\n    * [ Codespaces Instant dev environments  ](https://github.com/features/codespaces)\n    * [ Issues Plan and track work  ](https://github.com/features/issues)\n    * [ Code Review Manage code changes  ](https://github.com/features/code-review)\n    * [ Discussions Collaborate outside of code  ](https://github.com/features/discussions)\n    * [ Code Search Find more, search less  ](https://github.com/features/code-search)\n\nExplore\n    * [ All features ](https://github.com/features)\n    * [ Documentation ](https://docs.github.com)\n    * [ GitHub Skills ](https://skills.github.com)\n    * [ Blog ](https://github.blog)\n\n  * Solutions \n\nBy company size\n    * [ Enterprises ](https://github.com/enterprise)\n    * [ Small and medium teams ](https://github.com/team)\n    * [ Startups ](https://github.com/enterprise/startups)\n    * [ Nonprofits ](/solutions/industry/nonprofits)\n\nBy use case\n    * [ DevSecOps ](/solutions/use-case/devsecops)\n    * [ DevOps ](/solutions/use-case/devops)\n    * [ CI/CD ](/solutions/use-case/ci-cd)\n    * [ View all use cases ](/solutions/use-case)\n\nBy industry\n    * [ Healthcare ](/solutions/industry/healthcare)\n    * [ Financial services ](/solutions/industry/financial-services)\n    * [ Manufacturing ](/solutions/industry/manufacturing)\n    * [ Government ](/solutions/industry/government)\n    * [ View all industries ](/solutions/industry)\n\n[ View all solutions ](/solutions)\n\n  * Resources \n\nTopics\n    * [ AI ](/resources/articles/ai)\n    * [ DevOps ](/resources/articles/devops)\n    * [ Security ](/resources/articles/security)\n    * [ Software Development ](/resources/articles/software-development)\n    * [ View all ](/resources/articles)\n\nExplore\n    * [ Learning Pathways ](https://resources.github.com/learn/pathways)\n    * [ White papers, Ebooks, Webinars ](https://resources.github.com)\n    * [ Customer Stories ](https://github.com/customer-stories)\n    * [ Partners ](https://partner.github.com)\n    * [ Executive Insights ](https://github.com/solutions/executive-insights)\n\n  * Open Source \n\n    * [ GitHub Sponsors Fund open source developers  ](/sponsors)\n\n    * [ The ReadME Project GitHub community articles  ](https://github.com/readme)\n\nRepositories\n    * [ Topics ](https://github.com/topics)\n    * [ Trending ](https://github.com/trending)\n    * [ Collections ](https://github.com/collections)\n\n  * Enterprise \n\n    * [ Enterprise platform AI-powered developer platform  ](/enterprise)\n\nAvailable add-ons\n    * [ Advanced Security Enterprise-grade security features  ](https://github.com/enterprise/advanced-security)\n    * [ GitHub Copilot Enterprise-grade AI features  ](/features/copilot#enterprise)\n    * [ Premium Support Enterprise-grade 24/7 support  ](/premium-support)\n\n  * [Pricing](https://github.com/pricing)\n\n\n\nSearch or jump to...\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch \n\nClear\n\n[Search syntax tips](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax)\n\n#  Provide feedback \n\nWe read every piece of feedback, and take your input very seriously.\n\nInclude my email address so I can be contacted\n\nCancel  Submit feedback \n\n#  Saved searches \n\n## Use saved searches to filter your results more quickly\n\nName\n\nQuery\n\nTo see all available qualifiers, see our [documentation](https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax). \n\nCancel  Create saved search \n\n[ Sign in ](/login?return_to=https%3A%2F%2Fgithub.com%2Fpyg-team%2Fpytorch_geometric%2F)\n\n[ Sign up ](/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&source=header-repo&source_repo=pyg-team%2Fpytorch_geometric) Reseting focus\n\nYou signed in with another tab or window. [Reload]() to refresh your session. You signed out in another tab or window. [Reload]() to refresh your session. You switched accounts on another tab or window. [Reload]() to refresh your session. Dismiss alert\n\n{{ message }}\n\n[ pyg-team ](/pyg-team) / **[pytorch_geometric](/pyg-team/pytorch_geometric) ** Public\n\n  * [ Notifications ](/login?return_to=%2Fpyg-team%2Fpytorch_geometric) You must be signed in to change notification settings\n  * [ Fork 3.7k ](/login?return_to=%2Fpyg-team%2Fpytorch_geometric)\n  * [ Star  21.8k ](/login?return_to=%2Fpyg-team%2Fpytorch_geometric)\n\n\n\n\nGraph Neural Network Library for PyTorch \n\n[pyg.org](https://pyg.org \"https://pyg.org\")\n\n### License\n\n[ MIT license ](/pyg-team/pytorch_geometric/blob/master/LICENSE)\n\n[ 21.8k stars ](/pyg-team/pytorch_geometric/stargazers) [ 3.7k forks ](/pyg-team/pytorch_geometric/forks) [ Branches ](/pyg-team/pytorch_geometric/branches) [ Tags ](/pyg-team/pytorch_geometric/tags) [ Activity ](/pyg-team/pytorch_geometric/activity)\n\n[ Star  ](/login?return_to=%2Fpyg-team%2Fpytorch_geometric)\n\n[ Notifications ](/login?return_to=%2Fpyg-team%2Fpytorch_geometric) You must be signed in to change notification settings\n\n  * [ Code ](/pyg-team/pytorch_geometric)\n  * [ Issues 915 ](/pyg-team/pytorch_geometric/issues)\n  * [ Pull requests 209 ](/pyg-team/pytorch_geometric/pulls)\n  * [ Discussions ](/pyg-team/pytorch_geometric/discussions)\n  * [ Actions ](/pyg-team/pytorch_geometric/actions)\n  * [ Security ](/pyg-team/pytorch_geometric/security)\n  * [ Insights ](/pyg-team/pytorch_geometric/pulse)\n\n\n\nAdditional navigation options\n\n  * [ Code  ](/pyg-team/pytorch_geometric)\n  * [ Issues  ](/pyg-team/pytorch_geometric/issues)\n  * [ Pull requests  ](/pyg-team/pytorch_geometric/pulls)\n  * [ Discussions  ](/pyg-team/pytorch_geometric/discussions)\n  * [ Actions  ](/pyg-team/pytorch_geometric/actions)\n  * [ Security  ](/pyg-team/pytorch_geometric/security)\n  * [ Insights  ](/pyg-team/pytorch_geometric/pulse)\n\n\n\n# pyg-team/pytorch_geometric\n\nmaster\n\n[**126** Branches](/pyg-team/pytorch_geometric/branches)[**42** Tags](/pyg-team/pytorch_geometric/tags)\n\n[](/pyg-team/pytorch_geometric/branches)[](/pyg-team/pytorch_geometric/tags)\n\nGo to file\n\nCode\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\n[![rusty1s](https://avatars.githubusercontent.com/u/6945922?v=4&size=40)](/rusty1s)[rusty1s](/pyg-team/pytorch_geometric/commits?author=rusty1s)[Fix](/pyg-team/pytorch_geometric/commit/9c73f9908bfce4d8c47d23fa00b55d83ad4f1399) `[LinkPredMetric](/pyg-team/pytorch_geometric/commit/9c73f9908bfce4d8c47d23fa00b55d83ad4f1399)` [for empty ground-truths (](/pyg-team/pytorch_geometric/commit/9c73f9908bfce4d8c47d23fa00b55d83ad4f1399)[#9962](https://github.com/pyg-team/pytorch_geometric/pull/9962)[)](/pyg-team/pytorch_geometric/commit/9c73f9908bfce4d8c47d23fa00b55d83ad4f1399)Jan 20, 2025[9c73f99](/pyg-team/pytorch_geometric/commit/9c73f9908bfce4d8c47d23fa00b55d83ad4f1399) Â· Jan 20, 2025\n\n## History\n\n[7,693 Commits](/pyg-team/pytorch_geometric/commits/master/)[](/pyg-team/pytorch_geometric/commits/master/)  \n[.github](/pyg-team/pytorch_geometric/tree/master/.github \".github\")| [.github](/pyg-team/pytorch_geometric/tree/master/.github \".github\")| [Limit concurrency in nightly tests; Add more labels (](/pyg-team/pytorch_geometric/commit/c828200c6a65f1a32f725d32a95eaee6837616e5 \"Limit concurrency in nightly tests; Add more labels \\(#9942\\)\")[#9942](https://github.com/pyg-team/pytorch_geometric/pull/9942)[)](/pyg-team/pytorch_geometric/commit/c828200c6a65f1a32f725d32a95eaee6837616e5 \"Limit concurrency in nightly tests; Add more labels \\(#9942\\)\")| Jan 14, 2025  \n[benchmark](/pyg-team/pytorch_geometric/tree/master/benchmark \"benchmark\")| [benchmark](/pyg-team/pytorch_geometric/tree/master/benchmark \"benchmark\")| [Use](/pyg-team/pytorch_geometric/commit/3c983534716bb0e7e457dc489840d05313806495 \"Use `torch.load\\(weights_only=True\\)` by default \\(#9618\\)\") `[torch.load(weights_only=True)](/pyg-team/pytorch_geometric/commit/3c983534716bb0e7e457dc489840d05313806495 \"Use `torch.load\\(weights_only=True\\)` by default \\(#9618\\)\")` [by default (](/pyg-team/pytorch_geometric/commit/3c983534716bb0e7e457dc489840d05313806495 \"Use `torch.load\\(weights_only=True\\)` by default \\(#9618\\)\")[#9618](https://github.com/pyg-team/pytorch_geometric/pull/9618)[)](/pyg-team/pytorch_geometric/commit/3c983534716bb0e7e457dc489840d05313806495 \"Use `torch.load\\(weights_only=True\\)` by default \\(#9618\\)\")| Aug 22, 2024  \n[conda](/pyg-team/pytorch_geometric/tree/master/conda \"conda\")| [conda](/pyg-team/pytorch_geometric/tree/master/conda \"conda\")| [Build PyG 2.6 for conda (](/pyg-team/pytorch_geometric/commit/c95517bb551fc13eb668a91fee7f831771eb3efd \"Build PyG 2.6 for conda \\(#9702\\)\")[#9702](https://github.com/pyg-team/pytorch_geometric/pull/9702)[)](/pyg-team/pytorch_geometric/commit/c95517bb551fc13eb668a91fee7f831771eb3efd \"Build PyG 2.6 for conda \\(#9702\\)\")| Oct 9, 2024  \n[docker](/pyg-team/pytorch_geometric/tree/master/docker \"docker\")| [docker](/pyg-team/pytorch_geometric/tree/master/docker \"docker\")| [updated Dockerfile based on NGC PyG 24.09 image (](/pyg-team/pytorch_geometric/commit/bd5ae45c74a3fbb6b6ff818476f7651d84313d2a \"updated Dockerfile based on NGC PyG 24.09 image \\(#9794\\)\nUpdated to use new NGC CUDA DL base image. Some differences:\n1. /workspace is the working directory\n2. Python libs removed that were not included in NGC PyG image:\n`torch_scatter torch_sparse torch_cluster torch_spline_conv\ntorchnet==0.0.4 h5py torchnet `\n3. Using latest stable versions for graphviz and torch\n---------\nCo-authored-by: pre-commit-ci\\[bot\\] <66853113+pre-commit-ci\\[bot\\]@users.noreply.github.com>\nCo-authored-by: Rishi Puri <puririshi98@berkeley.edu>\")[#9794](https://github.com/pyg-team/pytorch_geometric/pull/9794)[)](/pyg-team/pytorch_geometric/commit/bd5ae45c74a3fbb6b6ff818476f7651d84313d2a \"updated Dockerfile based on NGC PyG 24.09 image \\(#9794\\)\nUpdated to use new NGC CUDA DL base image. Some differences:\n1. /workspace is the working directory\n2. Python libs removed that were not included in NGC PyG image:\n`torch_scatter torch_sparse torch_cluster torch_spline_conv\ntorchnet==0.0.4 h5py torchnet `\n3. Using latest stable versions for graphviz and torch\n---------\nCo-authored-by: pre-commit-ci\\[bot\\] <66853113+pre-commit-ci\\[bot\\]@users.noreply.github.com>\nCo-authored-by: Rishi Puri <puririshi98@berkeley.edu>\")| Dec 6, 2024  \n[docs](/pyg-team/pytorch_geometric/tree/master/docs \"docs\")| [docs](/pyg-team/pytorch_geometric/tree/master/docs \"docs\")| [docs: fix typo in installation.rst (](/pyg-team/pytorch_geometric/commit/b481f6c51ced5f07df7fbdd7f0dd4ae02c9ef16b \"docs: fix typo in installation.rst \\(#9949\\)\nThis pull request includes a small change to the\n`docs/source/install/installation.rst` file. The change updates the\nPyTorch version in the installation instructions for consistency.\n* Updated PyTorch version from 2.4 to 2.5 in the installation\ninstructions.\n---------\nCo-authored-by: Matthias Fey <matthias.fey@tu-dortmund.de>\")[#9949](https://github.com/pyg-team/pytorch_geometric/pull/9949)[)](/pyg-team/pytorch_geometric/commit/b481f6c51ced5f07df7fbdd7f0dd4ae02c9ef16b \"docs: fix typo in installation.rst \\(#9949\\)\nThis pull request includes a small change to the\n`docs/source/install/installation.rst` file. The change updates the\nPyTorch version in the installation instructions for consistency.\n* Updated PyTorch version from 2.4 to 2.5 in the installation\ninstructions.\n---------\nCo-authored-by: Matthias Fey <matthias.fey@tu-dortmund.de>\")| Jan 20, 2025  \n[examples](/pyg-team/pytorch_geometric/tree/master/examples \"examples\")| [examples](/pyg-team/pytorch_geometric/tree/master/examples \"examples\")| [Fixed a warning generated in](/pyg-team/pytorch_geometric/commit/5fb2a8eaae3047a9dd430fd58e735e333daed79d \"Fixed a warning generated in `exemples/llm/glen.py` test. \\(#9955\\)\") `[exemples/llm/glen.py](/pyg-team/pytorch_geometric/commit/5fb2a8eaae3047a9dd430fd58e735e333daed79d \"Fixed a warning generated in `exemples/llm/glen.py` test. \\(#9955\\)\")` [test. (](/pyg-team/pytorch_geometric/commit/5fb2a8eaae3047a9dd430fd58e735e333daed79d \"Fixed a warning generated in `exemples/llm/glen.py` test. \\(#9955\\)\")[#9955](https://github.com/pyg-team/pytorch_geometric/pull/9955)[)](/pyg-team/pytorch_geometric/commit/5fb2a8eaae3047a9dd430fd58e735e333daed79d \"Fixed a warning generated in `exemples/llm/glen.py` test. \\(#9955\\)\")| Jan 18, 2025  \n[graphgym](/pyg-team/pytorch_geometric/tree/master/graphgym \"graphgym\")| [graphgym](/pyg-team/pytorch_geometric/tree/master/graphgym \"graphgym\")| [Update](/pyg-team/pytorch_geometric/commit/44007acc55a28089f673aba9f830a00a773726ea \"Update `.pre-commit-config.yaml` \\(#9466\\)\nCo-authored-by: pre-commit-ci\\[bot\\] <66853113+pre-commit-ci\\[bot\\]@users.noreply.github.com>\") `[.pre-commit-config.yaml](/pyg-team/pytorch_geometric/commit/44007acc55a28089f673aba9f830a00a773726ea \"Update `.pre-commit-config.yaml` \\(#9466\\)\nCo-authored-by: pre-commit-ci\\[bot\\] <66853113+pre-commit-ci\\[bot\\]@users.noreply.github.com>\")` [(](/pyg-team/pytorch_geometric/commit/44007acc55a28089f673aba9f830a00a773726ea \"Update `.pre-commit-config.yaml` \\(#9466\\)\nCo-authored-by: pre-commit-ci\\[bot\\] <66853113+pre-commit-ci\\[bot\\]@users.noreply.github.com>\")[#9466](https://github.com/pyg-team/pytorch_geometric/pull/9466)[)](/pyg-team/pytorch_geometric/commit/44007acc55a28089f673aba9f830a00a773726ea \"Update `.pre-commit-config.yaml` \\(#9466\\)\nCo-authored-by: pre-commit-ci\\[bot\\] <66853113+pre-commit-ci\\[bot\\]@users.noreply.github.com>\")| Jun 28, 2024  \n[test](/pyg-team/pytorch_geometric/tree/master/test \"test\")| [test](/pyg-team/pytorch_geometric/tree/master/test \"test\")| [Fix](/pyg-team/pytorch_geometric/commit/9c73f9908bfce4d8c47d23fa00b55d83ad4f1399 \"Fix `LinkPredMetric` for empty ground-truths \\(#9962\\)\") `[LinkPredMetric](/pyg-team/pytorch_geometric/commit/9c73f9908bfce4d8c47d23fa00b55d83ad4f1399 \"Fix `LinkPredMetric` for empty ground-truths \\(#9962\\)\")` [for empty ground-truths (](/pyg-team/pytorch_geometric/commit/9c73f9908bfce4d8c47d23fa00b55d83ad4f1399 \"Fix `LinkPredMetric` for empty ground-truths \\(#9962\\)\")[#9962](https://github.com/pyg-team/pytorch_geometric/pull/9962)[)](/pyg-team/pytorch_geometric/commit/9c73f9908bfce4d8c47d23fa00b55d83ad4f1399 \"Fix `LinkPredMetric` for empty ground-truths \\(#9962\\)\")| Jan 20, 2025  \n[torch_geometric](/pyg-team/pytorch_geometric/tree/master/torch_geometric \"torch_geometric\")| [torch_geometric](/pyg-team/pytorch_geometric/tree/master/torch_geometric \"torch_geometric\")| [Fix](/pyg-team/pytorch_geometric/commit/9c73f9908bfce4d8c47d23fa00b55d83ad4f1399 \"Fix `LinkPredMetric` for empty ground-truths \\(#9962\\)\") `[LinkPredMetric](/pyg-team/pytorch_geometric/commit/9c73f9908bfce4d8c47d23fa00b55d83ad4f1399 \"Fix `LinkPredMetric` for empty ground-truths \\(#9962\\)\")` [for empty ground-truths (](/pyg-team/pytorch_geometric/commit/9c73f9908bfce4d8c47d23fa00b55d83ad4f1399 \"Fix `LinkPredMetric` for empty ground-truths \\(#9962\\)\")[#9962](https://github.com/pyg-team/pytorch_geometric/pull/9962)[)](/pyg-team/pytorch_geometric/commit/9c73f9908bfce4d8c47d23fa00b55d83ad4f1399 \"Fix `LinkPredMetric` for empty ground-truths \\(#9962\\)\")| Jan 20, 2025  \n[.gitignore](/pyg-team/pytorch_geometric/blob/master/.gitignore \".gitignore\")| [.gitignore](/pyg-team/pytorch_geometric/blob/master/.gitignore \".gitignore\")| [Enable typing support (](/pyg-team/pytorch_geometric/commit/2d1f7d3b2802d2df3f1dc134e366a9d7053a72ed \"Enable typing support \\(#8254\\)\nAddresses\nhttps://github.com/pyg-team/pytorch_geometric/discussions/3429#discussioncomment-6755720.\nRelated to #5657.\n> Package maintainers who wish to support type checking of their code\nMUST add a marker file named py.typed to their package supporting\ntyping. This marker applies recursively: if a top-level package includes\nit, all its sub-packages MUST support type checking as well.\nhttps://peps.python.org/pep-0561/#packaging-type-information\n---------\nCo-authored-by: rusty1s <matthias.fey@tu-dortmund.de>\")[#8254](https://github.com/pyg-team/pytorch_geometric/pull/8254)[)](/pyg-team/pytorch_geometric/commit/2d1f7d3b2802d2df3f1dc134e366a9d7053a72ed \"Enable typing support \\(#8254\\)\nAddresses\nhttps://github.com/pyg-team/pytorch_geometric/discussions/3429#discussioncomment-6755720.\nRelated to #5657.\n> Package maintainers who wish to support type checking of their code\nMUST add a marker file named py.typed to their package supporting\ntyping. This marker applies recursively: if a top-level package includes\nit, all its sub-packages MUST support type checking as well.\nhttps://peps.python.org/pep-0561/#packaging-type-information\n---------\nCo-authored-by: rusty1s <matthias.fey@tu-dortmund.de>\")| Dec 4, 2023  \n[.pre-commit-config.yaml](/pyg-team/pytorch_geometric/blob/master/.pre-commit-config.yaml \".pre-commit-config.yaml\")| [.pre-commit-config.yaml](/pyg-team/pytorch_geometric/blob/master/.pre-commit-config.yaml \".pre-commit-config.yaml\")| [[pre-commit.ci] pre-commit suggestions (](/pyg-team/pytorch_geometric/commit/109ec56790c106ccd9738dc034871aa026659c13 \"\\[pre-commit.ci\\] pre-commit suggestions \\(#9920\\)\n<!--pre-commit.ci start-->\nupdates:\n- \\[github.com/asottile/pyupgrade: v3.17.0 â\nv3.19.1\\]\\(https://github.com/asottile/pyupgrade/compare/v3.17.0...v3.19.1\\)\n- \\[github.com/google/yapf: v0.40.2 â\nv0.43.0\\]\\(https://github.com/google/yapf/compare/v0.40.2...v0.43.0\\)\n- \\[github.com/astral-sh/ruff-pre-commit: v0.6.9 â\nv0.8.6\\]\\(https://github.com/astral-sh/ruff-pre-commit/compare/v0.6.9...v0.8.6\\)\n- \\[github.com/executablebooks/mdformat: 0.7.17 â\n0.7.21\\]\\(https://github.com/executablebooks/mdformat/compare/0.7.17...0.7.21\\)\n<!--pre-commit.ci end-->\n---------\nCo-authored-by: pre-commit-ci\\[bot\\] <66853113+pre-commit-ci\\[bot\\]@users.noreply.github.com>\")[#9920](https://github.com/pyg-team/pytorch_geometric/pull/9920)[)](/pyg-team/pytorch_geometric/commit/109ec56790c106ccd9738dc034871aa026659c13 \"\\[pre-commit.ci\\] pre-commit suggestions \\(#9920\\)\n<!--pre-commit.ci start-->\nupdates:\n- \\[github.com/asottile/pyupgrade: v3.17.0 â\nv3.19.1\\]\\(https://github.com/asottile/pyupgrade/compare/v3.17.0...v3.19.1\\)\n- \\[github.com/google/yapf: v0.40.2 â\nv0.43.0\\]\\(https://github.com/google/yapf/compare/v0.40.2...v0.43.0\\)\n- \\[github.com/astral-sh/ruff-pre-commit: v0.6.9 â\nv0.8.6\\]\\(https://github.com/astral-sh/ruff-pre-commit/compare/v0.6.9...v0.8.6\\)\n- \\[github.com/executablebooks/mdformat: 0.7.17 â\n0.7.21\\]\\(https://github.com/executablebooks/mdformat/compare/0.7.17...0.7.21\\)\n<!--pre-commit.ci end-->\n---------\nCo-authored-by: pre-commit-ci\\[bot\\] <66853113+pre-commit-ci\\[bot\\]@users.noreply.github.com>\")| Jan 7, 2025  \n[CHANGELOG.md](/pyg-team/pytorch_geometric/blob/master/CHANGELOG.md \"CHANGELOG.md\")| [CHANGELOG.md](/pyg-team/pytorch_geometric/blob/master/CHANGELOG.md \"CHANGELOG.md\")| [Graph Sage OGBN Example with Scheduler (](/pyg-team/pytorch_geometric/commit/6a1db0744adff36ca8ff1890779383d37460c1e0 \"Graph Sage OGBN Example with Scheduler \\(#9877\\)\nThis PR is to update the ogbn example to have a scheduler, improving\nperformance from a test accuracy of 75.52% to 77.19%\")[#9877](https://github.com/pyg-team/pytorch_geometric/pull/9877)[)](/pyg-team/pytorch_geometric/commit/6a1db0744adff36ca8ff1890779383d37460c1e0 \"Graph Sage OGBN Example with Scheduler \\(#9877\\)\nThis PR is to update the ogbn example to have a scheduler, improving\nperformance from a test accuracy of 75.52% to 77.19%\")| Jan 17, 2025  \n[CITATION.cff](/pyg-team/pytorch_geometric/blob/master/CITATION.cff \"CITATION.cff\")| [CITATION.cff](/pyg-team/pytorch_geometric/blob/master/CITATION.cff \"CITATION.cff\")| [version up](/pyg-team/pytorch_geometric/commit/b152720b884c2498d5e677587a3cebae0537ed17 \"version up\")| Dec 22, 2021  \n[LICENSE](/pyg-team/pytorch_geometric/blob/master/LICENSE \"LICENSE\")| [LICENSE](/pyg-team/pytorch_geometric/blob/master/LICENSE \"LICENSE\")| [Add icons to documentation (](/pyg-team/pytorch_geometric/commit/a75a82a6275a366ed1dab734bb0bdda9591e53c6 \"Add icons to documentation \\(#6751\\)\")[#6751](https://github.com/pyg-team/pytorch_geometric/pull/6751)[)](/pyg-team/pytorch_geometric/commit/a75a82a6275a366ed1dab734bb0bdda9591e53c6 \"Add icons to documentation \\(#6751\\)\")| Feb 19, 2023  \n[README.md](/pyg-team/pytorch_geometric/blob/master/README.md \"README.md\")| [README.md](/pyg-team/pytorch_geometric/blob/master/README.md \"README.md\")| [[pre-commit.ci] pre-commit suggestions (](/pyg-team/pytorch_geometric/commit/109ec56790c106ccd9738dc034871aa026659c13 \"\\[pre-commit.ci\\] pre-commit suggestions \\(#9920\\)\n<!--pre-commit.ci start-->\nupdates:\n- \\[github.com/asottile/pyupgrade: v3.17.0 â\nv3.19.1\\]\\(https://github.com/asottile/pyupgrade/compare/v3.17.0...v3.19.1\\)\n- \\[github.com/google/yapf: v0.40.2 â\nv0.43.0\\]\\(https://github.com/google/yapf/compare/v0.40.2...v0.43.0\\)\n- \\[github.com/astral-sh/ruff-pre-commit: v0.6.9 â\nv0.8.6\\]\\(https://github.com/astral-sh/ruff-pre-commit/compare/v0.6.9...v0.8.6\\)\n- \\[github.com/executablebooks/mdformat: 0.7.17 â\n0.7.21\\]\\(https://github.com/executablebooks/mdformat/compare/0.7.17...0.7.21\\)\n<!--pre-commit.ci end-->\n---------\nCo-authored-by: pre-commit-ci\\[bot\\] <66853113+pre-commit-ci\\[bot\\]@users.noreply.github.com>\")[#9920](https://github.com/pyg-team/pytorch_geometric/pull/9920)[)](/pyg-team/pytorch_geometric/commit/109ec56790c106ccd9738dc034871aa026659c13 \"\\[pre-commit.ci\\] pre-commit suggestions \\(#9920\\)\n<!--pre-commit.ci start-->\nupdates:\n- \\[github.com/asottile/pyupgrade: v3.17.0 â\nv3.19.1\\]\\(https://github.com/asottile/pyupgrade/compare/v3.17.0...v3.19.1\\)\n- \\[github.com/google/yapf: v0.40.2 â\nv0.43.0\\]\\(https://github.com/google/yapf/compare/v0.40.2...v0.43.0\\)\n- \\[github.com/astral-sh/ruff-pre-commit: v0.6.9 â\nv0.8.6\\]\\(https://github.com/astral-sh/ruff-pre-commit/compare/v0.6.9...v0.8.6\\)\n- \\[github.com/executablebooks/mdformat: 0.7.17 â\n0.7.21\\]\\(https://github.com/executablebooks/mdformat/compare/0.7.17...0.7.21\\)\n<!--pre-commit.ci end-->\n---------\nCo-authored-by: pre-commit-ci\\[bot\\] <66853113+pre-commit-ci\\[bot\\]@users.noreply.github.com>\")| Jan 7, 2025  \n[codecov.yml](/pyg-team/pytorch_geometric/blob/master/codecov.yml \"codecov.yml\")| [codecov.yml](/pyg-team/pytorch_geometric/blob/master/codecov.yml \"codecov.yml\")| [Fix typos in](/pyg-team/pytorch_geometric/commit/7ac4654db727df73d1443c5102020abe859e5eb6 \"Fix typos in `pyproject.toml` \\(#7872\\)\") `[pyproject.toml](/pyg-team/pytorch_geometric/commit/7ac4654db727df73d1443c5102020abe859e5eb6 \"Fix typos in `pyproject.toml` \\(#7872\\)\")` [(](/pyg-team/pytorch_geometric/commit/7ac4654db727df73d1443c5102020abe859e5eb6 \"Fix typos in `pyproject.toml` \\(#7872\\)\")[#7872](https://github.com/pyg-team/pytorch_geometric/pull/7872)[)](/pyg-team/pytorch_geometric/commit/7ac4654db727df73d1443c5102020abe859e5eb6 \"Fix typos in `pyproject.toml` \\(#7872\\)\")| Aug 11, 2023  \n[pyproject.toml](/pyg-team/pytorch_geometric/blob/master/pyproject.toml \"pyproject.toml\")| [pyproject.toml](/pyg-team/pytorch_geometric/blob/master/pyproject.toml \"pyproject.toml\")| [Drop support for Python 3.8 (](/pyg-team/pytorch_geometric/commit/90501e08f2cd91e0febee87048015196c73d0031 \"Drop support for Python 3.8 \\(#9696\\)\nIt makes sense to drop Python 3.8 support as its EOL is scheduled for\nOctober 2024, and the next PyTorch release \\(2.5\\) drops Python 3.8\nsupport as well.\nReferences:\n* https://download.pytorch.org/whl/test/torch/\n* https://devguide.python.org/versions/\n---------\nCo-authored-by: rusty1s <matthias.fey@tu-dortmund.de>\")[#9696](https://github.com/pyg-team/pytorch_geometric/pull/9696)[)](/pyg-team/pytorch_geometric/commit/90501e08f2cd91e0febee87048015196c73d0031 \"Drop support for Python 3.8 \\(#9696\\)\nIt makes sense to drop Python 3.8 support as its EOL is scheduled for\nOctober 2024, and the next PyTorch release \\(2.5\\) drops Python 3.8\nsupport as well.\nReferences:\n* https://download.pytorch.org/whl/test/torch/\n* https://devguide.python.org/versions/\n---------\nCo-authored-by: rusty1s <matthias.fey@tu-dortmund.de>\")| Oct 9, 2024  \n[readthedocs.yml](/pyg-team/pytorch_geometric/blob/master/readthedocs.yml \"readthedocs.yml\")| [readthedocs.yml](/pyg-team/pytorch_geometric/blob/master/readthedocs.yml \"readthedocs.yml\")| [Introduce `LinkPredMetric._prepare`; allow for less predictions than â¦](/pyg-team/pytorch_geometric/commit/c9e563c8578c90990a0aae1b32032ca48744f340 \"Introduce `LinkPredMetric._prepare`; allow for less predictions than `k` \\(#9939\\)\")| Jan 14, 2025  \nView all files  \n  \n## Repository files navigation\n\n  * [README](#)\n  * [MIT license](#)\n\n\n\n[![](https://raw.githubusercontent.com/pyg-team/pyg_sphinx_theme/master/pyg_sphinx_theme/static/img/pyg_logo_text.svg?sanitize=true)](https://raw.githubusercontent.com/pyg-team/pyg_sphinx_theme/master/pyg_sphinx_theme/static/img/pyg_logo_text.svg?sanitize=true)\n\n[![PyPI Version](https://camo.githubusercontent.com/1e96c503517f88b66b9c128dc59acdc4e765ce0ad9560ac6493c863add44b2ac/68747470733a2f2f62616467652e667572792e696f2f70792f746f7263682d67656f6d65747269632e737667)](https://pypi.python.org/pypi/torch-geometric) [![Testing Status](https://github.com/pyg-team/pytorch_geometric/actions/workflows/testing.yml/badge.svg)](https://github.com/pyg-team/pytorch_geometric/actions/workflows/testing.yml) [![Linting Status](https://github.com/pyg-team/pytorch_geometric/actions/workflows/linting.yml/badge.svg)](https://github.com/pyg-team/pytorch_geometric/actions/workflows/linting.yml) [![Docs Status](https://camo.githubusercontent.com/2d2dcd3f55144f7be21c0cd1bf4757d75184df9b19d0d8e0e0e8aac60065279e/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7079746f7263682d67656f6d65747269632f62616467652f3f76657273696f6e3d6c6174657374)](https://pytorch-geometric.readthedocs.io/en/latest) [![Contributing](https://camo.githubusercontent.com/a93286920599112849c7c2af9d239294be27738b440248e434813b1bd0ffb368/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6e747269627574696f6e732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c6174)](https://github.com/pyg-team/pytorch_geometric/blob/master/.github/CONTRIBUTING.md) [![Slack](https://camo.githubusercontent.com/726539d23ae645d5bbb7e1b7a23c5c2d92a7688f7b6dce56c4cb51a651b60dee/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736c61636b2d7079672d627269676874677265656e)](https://data.pyg.org/slack.html)\n\n**[Documentation](https://pytorch-geometric.readthedocs.io)** | **[Paper](https://arxiv.org/abs/1903.02428)** | **[Colab Notebooks and Video Tutorials](https://pytorch-geometric.readthedocs.io/en/latest/get_started/colabs.html)** | **[External Resources](https://pytorch-geometric.readthedocs.io/en/latest/external/resources.html)** | **[OGB Examples](https://github.com/snap-stanford/ogb/tree/master/examples)**\n\n**PyG** _(PyTorch Geometric)_ is a library built upon [PyTorch](https://pytorch.org/) to easily write and train Graph Neural Networks (GNNs) for a wide range of applications related to structured data.\n\nIt consists of various methods for deep learning on graphs and other irregular structures, also known as _[geometric deep learning](http://geometricdeeplearning.com/)_ , from a variety of published papers. In addition, it consists of easy-to-use mini-batch loaders for operating on many small and single giant graphs, [multi GPU-support](https://github.com/pyg-team/pytorch_geometric/tree/master/examples/multi_gpu), [`torch.compile`](https://pytorch-geometric.readthedocs.io/en/latest/advanced/compile.html) support, [`DataPipe`](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/datapipe.py) support, a large number of common benchmark datasets (based on simple interfaces to create your own), and helpful transforms, both for learning on arbitrary graphs as well as on 3D meshes or point clouds.\n\n**[Click here to join our Slack community!](https://data.pyg.org/slack.html)**\n\n[![](https://camo.githubusercontent.com/2d892d8683edce7b669ae221eef7d60a3eccd9f9ec0f43f1c5233664ccfa3d72/68747470733a2f2f646174612e7079672e6f72672f696d672f6373323234775f7475746f7269616c732e706e67)](https://medium.com/stanford-cs224w)\n\n  * [Library Highlights](#library-highlights)\n  * [Quick Tour for New Users](#quick-tour-for-new-users)\n  * [Architecture Overview](#architecture-overview)\n  * [Implemented GNN Models](#implemented-gnn-models)\n  * [Installation](#installation)\n\n\n\n## Library Highlights\n\n[](#library-highlights)\n\nWhether you are a machine learning researcher or first-time user of machine learning toolkits, here are some reasons to try out PyG for machine learning on graph-structured data.\n\n  * **Easy-to-use and unified API** : All it takes is 10-20 lines of code to get started with training a GNN model (see the next section for a [quick tour](#quick-tour-for-new-users)). PyG is _PyTorch-on-the-rocks_ : It utilizes a tensor-centric API and keeps design principles close to vanilla PyTorch. If you are already familiar with PyTorch, utilizing PyG is straightforward.\n  * **Comprehensive and well-maintained GNN models** : Most of the state-of-the-art Graph Neural Network architectures have been implemented by library developers or authors of research papers and are ready to be applied.\n  * **Great flexibility** : Existing PyG models can easily be extended for conducting your own research with GNNs. Making modifications to existing models or creating new architectures is simple, thanks to its easy-to-use message passing API, and a variety of operators and utility functions.\n  * **Large-scale real-world GNN models** : We focus on the need of GNN applications in challenging real-world scenarios, and support learning on diverse types of graphs, including but not limited to: scalable GNNs for graphs with millions of nodes; dynamic GNNs for node predictions over time; heterogeneous GNNs with multiple node types and edge types.\n\n\n\n## Quick Tour for New Users\n\n[](#quick-tour-for-new-users)\n\nIn this quick tour, we highlight the ease of creating and training a GNN model with only a few lines of code.\n\n### Train your own GNN model\n\n[](#train-your-own-gnn-model)\n\nIn the first glimpse of PyG, we implement the training of a GNN for classifying papers in a citation graph. For this, we load the [Cora](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.datasets.Planetoid.html) dataset, and create a simple 2-layer GCN model using the pre-defined [`GCNConv`](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.GCNConv.html):\n\n```\nimport torch from torch import Tensor from torch_geometric.nn import GCNConv from torch_geometric.datasets import Planetoid dataset = Planetoid(root='.', name='Cora') class GCN(torch.nn.Module): def __init__(self, in_channels, hidden_channels, out_channels): super().__init__() self.conv1 = GCNConv(in_channels, hidden_channels) self.conv2 = GCNConv(hidden_channels, out_channels) def forward(self, x: Tensor, edge_index: Tensor) -> Tensor: # x: Node feature matrix of shape [num_nodes, in_channels] # edge_index: Graph connectivity matrix of shape [2, num_edges] x = self.conv1(x, edge_index).relu() x = self.conv2(x, edge_index) return x model = GCN(dataset.num_features, 16, dataset.num_classes)\n```\n\nWe can now optimize the model in a training loop, similar to the [standard PyTorch training procedure](https://pytorch.org/tutorials/beginner/basics/optimization_tutorial.html#full-implementation).\n\n```\nimport torch.nn.functional as F data = dataset[0] optimizer = torch.optim.Adam(model.parameters(), lr=0.01) for epoch in range(200): pred = model(data.x, data.edge_index) loss = F.cross_entropy(pred[data.train_mask], data.y[data.train_mask]) # Backpropagation optimizer.zero_grad() loss.backward() optimizer.step()\n```\n\nMore information about evaluating final model performance can be found in the corresponding [example](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/gcn.py).\n\n### Create your own GNN layer\n\n[](#create-your-own-gnn-layer)\n\nIn addition to the easy application of existing GNNs, PyG makes it simple to implement custom Graph Neural Networks (see [here](https://pytorch-geometric.readthedocs.io/en/latest/tutorial/create_gnn.html) for the accompanying tutorial). For example, this is all it takes to implement the [edge convolutional layer](https://arxiv.org/abs/1801.07829) from Wang _et al._ :\n\nx i â² = max j â N ( i ) MLP Î¸ ( [ x i , x j â x i ] )\n\n```\nimport torch from torch import Tensor from torch.nn import Sequential, Linear, ReLU from torch_geometric.nn import MessagePassing class EdgeConv(MessagePassing): def __init__(self, in_channels, out_channels): super().__init__(aggr=\"max\") # \"Max\" aggregation. self.mlp = Sequential( Linear(2 * in_channels, out_channels), ReLU(), Linear(out_channels, out_channels), ) def forward(self, x: Tensor, edge_index: Tensor) -> Tensor: # x: Node feature matrix of shape [num_nodes, in_channels] # edge_index: Graph connectivity matrix of shape [2, num_edges] return self.propagate(edge_index, x=x) # shape [num_nodes, out_channels] def message(self, x_j: Tensor, x_i: Tensor) -> Tensor: # x_j: Source node features of shape [num_edges, in_channels] # x_i: Target node features of shape [num_edges, in_channels] edge_features = torch.cat([x_i, x_j - x_i], dim=-1) return self.mlp(edge_features) # shape [num_edges, out_channels]\n```\n\n## Architecture Overview\n\n[](#architecture-overview)\n\nPyG provides a multi-layer framework that enables users to build Graph Neural Network solutions on both low and high levels. It comprises of the following components:\n\n  * The PyG **engine** utilizes the powerful PyTorch deep learning framework with full [`torch.compile`](https://pytorch-geometric.readthedocs.io/en/latest/advanced/compile.html) and [TorchScript](https://pytorch-geometric.readthedocs.io/en/latest/advanced/jit.html) support, as well as additions of efficient CPU/CUDA libraries for operating on sparse data, _e.g._ , [`pyg-lib`](https://github.com/pyg-team/pyg-lib).\n  * The PyG **storage** handles data processing, transformation and loading pipelines. It is capable of handling and processing large-scale graph datasets, and provides effective solutions for heterogeneous graphs. It further provides a variety of sampling solutions, which enable training of GNNs on large-scale graphs.\n  * The PyG **operators** bundle essential functionalities for implementing Graph Neural Networks. PyG supports important GNN building blocks that can be combined and applied to various parts of a GNN model, ensuring rich flexibility of GNN design.\n  * Finally, PyG provides an abundant set of GNN **models** , and examples that showcase GNN models on standard graph benchmarks. Thanks to its flexibility, users can easily build and modify custom GNN models to fit their specific needs.\n\n\n\n[![](https://raw.githubusercontent.com/pyg-team/pytorch_geometric/master/docs/source/_figures/architecture.svg?sanitize=true)](https://raw.githubusercontent.com/pyg-team/pytorch_geometric/master/docs/source/_figures/architecture.svg?sanitize=true)\n\n## Implemented GNN Models\n\n[](#implemented-gnn-models)\n\nWe list currently supported PyG models, layers and operators according to category:\n\n**GNN layers:** All Graph Neural Network layers are implemented via the **[`nn.MessagePassing`](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.MessagePassing.html)** interface. A GNN layer specifies how to perform message passing, _i.e._ by designing different message, aggregation and update functions as defined [here](https://pytorch-geometric.readthedocs.io/en/latest/tutorial/create_gnn.html). These GNN layers can be stacked together to create Graph Neural Network models.\n\n  * **[GCNConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.GCNConv.html)** from Kipf and Welling: [Semi-Supervised Classification with Graph Convolutional Networks](https://arxiv.org/abs/1609.02907) (ICLR 2017) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/gcn.py)]\n  * **[ChebConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.ChebConv.html)** from Defferrard _et al._ : [Convolutional Neural Networks on Graphs with Fast Localized Spectral Filtering](https://arxiv.org/abs/1606.09375) (NIPS 2016) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/gcn.py#L36-L37)]\n  * **[GATConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.GATConv.html)** from VeliÄkoviÄ _et al._ : [Graph Attention Networks](https://arxiv.org/abs/1710.10903) (ICLR 2018) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/gat.py)]\n\n**Expand to see all implemented GNN layers...**\n\n  * **[GCN2Conv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.GCN2Conv.html)** from Chen _et al._ : [Simple and Deep Graph Convolutional Networks](https://arxiv.org/abs/2007.02133) (ICML 2020) [[**Example1**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/gcn2_cora.py), [**Example2**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/gcn2_ppi.py)]\n  * **[SplineConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.SplineConv.html)** from Fey _et al._ : [SplineCNN: Fast Geometric Deep Learning with Continuous B-Spline Kernels](https://arxiv.org/abs/1711.08920) (CVPR 2018) [[**Example1**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/cora.py), [**Example2**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/faust.py)]\n  * **[NNConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.NNConv.html)** from Gilmer _et al._ : [Neural Message Passing for Quantum Chemistry](https://arxiv.org/abs/1704.01212) (ICML 2017) [[**Example1**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/qm9_nn_conv.py), [**Example2**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/mnist_nn_conv.py)]\n  * **[CGConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.CGConv.html)** from Xie and Grossman: [Crystal Graph Convolutional Neural Networks for an Accurate and Interpretable Prediction of Material Properties](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.120.145301) (Physical Review Letters 120, 2018)\n  * **[ECConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.ECConv.html)** from Simonovsky and Komodakis: [Edge-Conditioned Convolution on Graphs](https://arxiv.org/abs/1704.02901) (CVPR 2017)\n  * **[EGConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.EGConv.html)** from Tailor _et al._ : [Adaptive Filters and Aggregator Fusion for Efficient Graph Convolutions](https://arxiv.org/abs/2104.01481) (GNNSys 2021) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/egc.py)]\n  * **[GATv2Conv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.GATv2Conv.html)** from Brody _et al._ : [How Attentive are Graph Attention Networks?](https://arxiv.org/abs/2105.14491) (ICLR 2022)\n  * **[TransformerConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.TransformerConv.html)** from Shi _et al._ : [Masked Label Prediction: Unified Message Passing Model for Semi-Supervised Classification](https://arxiv.org/abs/2009.03509) (CoRR 2020) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/unimp_arxiv.py)]\n  * **[SAGEConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.SAGEConv.html)** from Hamilton _et al._ : [Inductive Representation Learning on Large Graphs](https://arxiv.org/abs/1706.02216) (NIPS 2017) [[**Example1**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/reddit.py), [**Example2**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/ogbn_train.py), [**Example3**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/graph_sage_unsup.py), [**Example4**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/graph_sage_unsup_ppi.py)]\n  * **[GraphConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.GraphConv.html)** from, _e.g._ , Morris _et al._ : [Weisfeiler and Leman Go Neural: Higher-order Graph Neural Networks](https://arxiv.org/abs/1810.02244) (AAAI 2019)\n  * **[GatedGraphConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.GatedGraphConv.html)** from Li _et al._ : [Gated Graph Sequence Neural Networks](https://arxiv.org/abs/1511.05493) (ICLR 2016)\n  * **[ResGatedGraphConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.ResGatedGraphConv.html)** from Bresson and Laurent: [Residual Gated Graph ConvNets](https://arxiv.org/abs/1711.07553) (CoRR 2017)\n  * **[GINConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.GINConv.html)** from Xu _et al._ : [How Powerful are Graph Neural Networks?](https://arxiv.org/abs/1810.00826) (ICLR 2019) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/mutag_gin.py)]\n  * **[GINEConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.GINEConv.html)** from Hu _et al._ : [Strategies for Pre-training Graph Neural Networks](https://arxiv.org/abs/1905.12265) (ICLR 2020)\n  * **[ARMAConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.ARMAConv.html)** from Bianchi _et al._ : [Graph Neural Networks with Convolutional ARMA Filters](https://arxiv.org/abs/1901.01343) (CoRR 2019) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/arma.py)]\n  * **[SGConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.SGConv.html)** from Wu _et al._ : [Simplifying Graph Convolutional Networks](https://arxiv.org/abs/1902.07153) (CoRR 2019) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/sgc.py)]\n  * **[APPNP](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.APPNP.html)** from Klicpera _et al._ : [Predict then Propagate: Graph Neural Networks meet Personalized PageRank](https://arxiv.org/abs/1810.05997) (ICLR 2019) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/benchmark/citation/appnp.py)]\n  * **[MFConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.MFConv.html)** from Duvenaud _et al._ : [Convolutional Networks on Graphs for Learning Molecular Fingerprints](https://arxiv.org/abs/1509.09292) (NIPS 2015)\n  * **[AGNNConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.AGNNConv.html)** from Thekumparampil _et al._ : [Attention-based Graph Neural Network for Semi-Supervised Learning](https://arxiv.org/abs/1803.03735) (CoRR 2017) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/agnn.py)]\n  * **[TAGConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.TAGConv.html)** from Du _et al._ : [Topology Adaptive Graph Convolutional Networks](https://arxiv.org/abs/1710.10370) (CoRR 2017) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/tagcn.py)]\n  * **[PNAConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.PNAConv.html)** from Corso _et al._ : [Principal Neighbourhood Aggregation for Graph Nets](https://arxiv.org/abs/2004.05718) (CoRR 2020) [**[Example](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/pna.py)**]\n  * **[FAConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.FAConv.html)** from Bo _et al._ : [Beyond Low-Frequency Information in Graph Convolutional Networks](https://arxiv.org/abs/2101.00797) (AAAI 2021)\n  * **[PDNConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.nn.conv.PDNConv.html)** from Rozemberczki _et al._ : [Pathfinder Discovery Networks for Neural Message Passing](https://arxiv.org/abs/2010.12878) (WWW 2021)\n  * **[RGCNConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.RGCNConv.html)** from Schlichtkrull _et al._ : [Modeling Relational Data with Graph Convolutional Networks](https://arxiv.org/abs/1703.06103) (ESWC 2018) [[**Example1**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/rgcn.py), [**Example2**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/rgcn_link_pred.py)]\n  * **[RGATConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.RGATConv.html)** from Busbridge _et al._ : [Relational Graph Attention Networks](https://arxiv.org/abs/1904.05811) (CoRR 2019) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/rgat.py)]\n  * **[FiLMConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.FiLMConv.html)** from Brockschmidt: [GNN-FiLM: Graph Neural Networks with Feature-wise Linear Modulation](https://arxiv.org/abs/1906.12192) (ICML 2020) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/film.py)]\n  * **[SignedConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.SignedConv.html)** from Derr _et al._ : [Signed Graph Convolutional Network](https://arxiv.org/abs/1808.06354) (ICDM 2018) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/signed_gcn.py)]\n  * **[DNAConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.DNAConv.html)** from Fey: [Just Jump: Dynamic Neighborhood Aggregation in Graph Neural Networks](https://arxiv.org/abs/1904.04849) (ICLR-W 2019) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/dna.py)]\n  * **[PANConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.PANConv.html)** from Ma _et al._ : [Path Integral Based Convolution and Pooling for Graph Neural Networks](https://arxiv.org/abs/2006.16811) (NeurIPS 2020)\n  * **[PointNetConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.PointNetConv.html)** (including **[Iterative Farthest Point Sampling](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.pool.fps.html)** , dynamic graph generation based on **[nearest neighbor](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.pool.knn_graph.html)** or **[maximum distance](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.pool.radius_graph.html)** , and **[k-NN interpolation](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.unpool.knn_interpolate.html)** for upsampling) from Qi _et al._ : [PointNet: Deep Learning on Point Sets for 3D Classification and Segmentation](https://arxiv.org/abs/1612.00593) (CVPR 2017) and [PointNet++: Deep Hierarchical Feature Learning on Point Sets in a Metric Space](https://arxiv.org/abs/1706.02413) (NIPS 2017) [[**Example1**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/pointnet2_classification.py), [**Example2**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/pointnet2_segmentation.py)]\n  * **[EdgeConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.EdgeConv.html)** from Wang _et al._ : [Dynamic Graph CNN for Learning on Point Clouds](https://arxiv.org/abs/1801.07829) (CoRR, 2018) [[**Example1**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/dgcnn_classification.py), [**Example2**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/dgcnn_segmentation.py)]\n  * **[XConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.XConv.html)** from Li _et al._ : [PointCNN: Convolution On X-Transformed Points](https://arxiv.org/abs/1801.07791) (NeurIPS 2018) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/benchmark/points/point_cnn.py)]\n  * **[PPFConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.PPFConv.html)** from Deng _et al._ : [PPFNet: Global Context Aware Local Features for Robust 3D Point Matching](https://arxiv.org/abs/1802.02669) (CVPR 2018)\n  * **[GMMConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.GMMConv.html)** from Monti _et al._ : [Geometric Deep Learning on Graphs and Manifolds using Mixture Model CNNs](https://arxiv.org/abs/1611.08402) (CVPR 2017)\n  * **[FeaStConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.FeaStConv.html)** from Verma _et al._ : [FeaStNet: Feature-Steered Graph Convolutions for 3D Shape Analysis](https://arxiv.org/abs/1706.05206) (CVPR 2018)\n  * **[PointTransformerConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.PointTransformerConv.html)** from Zhao _et al._ : [Point Transformer](https://arxiv.org/abs/2012.09164) (2020)\n  * **[HypergraphConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.HypergraphConv.html)** from Bai _et al._ : [Hypergraph Convolution and Hypergraph Attention](https://arxiv.org/abs/1901.08150) (CoRR 2019)\n  * **[GravNetConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.GravNetConv.html)** from Qasim _et al._ : [Learning Representations of Irregular Particle-detector Geometry with Distance-weighted Graph Networks](https://arxiv.org/abs/1902.07987) (European Physics Journal C, 2019)\n  * **[SuperGAT](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.SuperGATConv.html)** from Kim and Oh: [How To Find Your Friendly Neighborhood: Graph Attention Design With Self-Supervision](https://openreview.net/forum?id=Wi5KUNlqWty) (ICLR 2021) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/super_gat.py)]\n  * **[HGTConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.HGTConv.html)** from Hu _et al._ : [Heterogeneous Graph Transformer](https://arxiv.org/abs/2003.01332) (WWW 2020) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/hetero/hgt_dblp.py)]\n  * **[HEATConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.HEATonv.html)** from Mo _et al._ : [Heterogeneous Edge-Enhanced Graph Attention Network For Multi-Agent Trajectory Prediction](https://arxiv.org/abs/2106.07161) (CoRR 2021)\n  * **[SSGConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.SSGConv.html)** from Zhu _et al._ : [Simple Spectral Graph Convolution](https://openreview.net/forum?id=CYO5T-YjWZV) (ICLR 2021)\n  * **[FusedGATConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.FusedGATConv.html)** from Zhang _et al._ : [Understanding GNN Computational Graph: A Coordinated Computation, IO, and Memory Perspective](https://proceedings.mlsys.org/paper/2022/file/9a1158154dfa42caddbd0694a4e9bdc8-Paper.pdf) (MLSys 2022)\n  * **[GPSConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.GPSConv.html)** from RampÃ¡Å¡ek _et al._ : [Recipe for a General, Powerful, Scalable Graph Transformer](https://arxiv.org/abs/2205.12454) (NeurIPS 2022) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/graph_gps.py)]\n\n\n\n**Pooling layers:** Graph pooling layers combine the vectorial representations of a set of nodes in a graph (or a subgraph) into a single vector representation that summarizes its properties of nodes. It is commonly applied to graph-level tasks, which require combining node features into a single graph representation.\n\n  * **[Top-K Pooling](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.pool.TopKPooling.html)** from Gao and Ji: [Graph U-Nets](https://arxiv.org/abs/1905.05178) (ICML 2019), Cangea _et al._ : [Towards Sparse Hierarchical Graph Classifiers](https://arxiv.org/abs/1811.01287) (NeurIPS-W 2018) and Knyazev _et al._ : [Understanding Attention and Generalization in Graph Neural Networks](https://arxiv.org/abs/1905.02850) (ICLR-W 2019) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/proteins_topk_pool.py)]\n  * **[DiffPool](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.dense.dense_diff_pool.html)** from Ying _et al._ : [Hierarchical Graph Representation Learning with Differentiable Pooling](https://arxiv.org/abs/1806.08804) (NeurIPS 2018) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/proteins_diff_pool.py)]\n\n**Expand to see all implemented pooling layers...**\n\n  * **[Attentional Aggregation](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.aggr.AttentionalAggregation.html)** from Li _et al._ : [Graph Matching Networks for Learning the Similarity of Graph Structured Objects](https://arxiv.org/abs/1904.12787) (ICML 2019) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/benchmark/kernel/global_attention.py)]\n  * **[Set2Set](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.aggr.Set2Set.html)** from Vinyals _et al._ : [Order Matters: Sequence to Sequence for Sets](https://arxiv.org/abs/1511.06391) (ICLR 2016) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/benchmark/kernel/set2set.py)]\n  * **[Sort Aggregation](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.aggr.SortAggregation.html)** from Zhang _et al._ : [An End-to-End Deep Learning Architecture for Graph Classification](https://www.cse.wustl.edu/~muhan/papers/AAAI_2018_DGCNN.pdf) (AAAI 2018) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/benchmark/kernel/sort_pool.py)]\n  * **[MinCut Pooling](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.dense.dense_mincut_pool.html)** from Bianchi _et al._ : [Spectral Clustering with Graph Neural Networks for Graph Pooling](https://arxiv.org/abs/1907.00481) (ICML 2020) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/proteins_mincut_pool.py)]\n  * **[DMoN Pooling](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.dense.DMoNPooling.html)** from Tsitsulin _et al._ : [Graph Clustering with Graph Neural Networks](https://arxiv.org/abs/2006.16904) (CoRR 2020) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/proteins_dmon_pool.py)]\n  * **[Graclus Pooling](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.pool.graclus.html)** from Dhillon _et al._ : [Weighted Graph Cuts without Eigenvectors: A Multilevel Approach](http://www.cs.utexas.edu/users/inderjit/public_papers/multilevel_pami.pdf) (PAMI 2007) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/mnist_graclus.py)]\n  * **[Voxel Grid Pooling](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.pool.voxel_grid.html)** from, _e.g._ , Simonovsky and Komodakis: [Dynamic Edge-Conditioned Filters in Convolutional Neural Networks on Graphs](https://arxiv.org/abs/1704.02901) (CVPR 2017) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/mnist_voxel_grid.py)]\n  * **[SAG Pooling](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.pool.SAGPooling.html)** from Lee _et al._ : [Self-Attention Graph Pooling](https://arxiv.org/abs/1904.08082) (ICML 2019) and Knyazev _et al._ : [Understanding Attention and Generalization in Graph Neural Networks](https://arxiv.org/abs/1905.02850) (ICLR-W 2019) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/benchmark/kernel/sag_pool.py)]\n  * **[Edge Pooling](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.pool.EdgePooling.html)** from Diehl _et al._ : [Towards Graph Pooling by Edge Contraction](https://graphreason.github.io/papers/17.pdf) (ICML-W 2019) and Diehl: [Edge Contraction Pooling for Graph Neural Networks](https://arxiv.org/abs/1905.10990) (CoRR 2019) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/benchmark/kernel/edge_pool.py)]\n  * **[ASAPooling](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.pool.ASAPooling.html)** from Ranjan _et al._ : [ASAP: Adaptive Structure Aware Pooling for Learning Hierarchical Graph Representations](https://arxiv.org/abs/1911.07979) (AAAI 2020) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/benchmark/kernel/asap.py)]\n  * **[PANPooling](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.pool.PANPooling.html)** from Ma _et al._ : [Path Integral Based Convolution and Pooling for Graph Neural Networks](https://arxiv.org/abs/2006.16811) (NeurIPS 2020)\n  * **[MemPooling](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.pool.MemPooling.html)** from Khasahmadi _et al._ : [Memory-Based Graph Networks](https://arxiv.org/abs/2002.09518) (ICLR 2020) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/mem_pool.py)]\n  * **[Graph Multiset Transformer](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.aggr.GraphMultisetTransformer.html)** from Baek _et al._ : [Accurate Learning of Graph Representations with Graph Multiset Pooling](https://arxiv.org/abs/2102.11533) (ICLR 2021) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/proteins_gmt.py)]\n  * **[Equilibrium Aggregation](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.aggr.EquilibriumAggregation.html)** from Bartunov _et al._ : [](https://arxiv.org/abs/2202.12795) (UAI 2022) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/equilibrium_median.py)]\n\n\n\n**GNN models:** Our supported GNN models incorporate multiple message passing layers, and users can directly use these pre-defined models to make predictions on graphs. Unlike simple stacking of GNN layers, these models could involve pre-processing, additional learnable parameters, skip connections, graph coarsening, etc.\n\n  * **[SchNet](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.SchNet.html)** from SchÃ¼tt _et al._ : [SchNet: A Continuous-filter Convolutional Neural Network for Modeling Quantum Interactions](https://arxiv.org/abs/1706.08566) (NIPS 2017) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/qm9_pretrained_schnet.py)]\n  * **[DimeNet](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.DimeNet.html)** and **[DimeNetPlusPlus](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.DimeNetPlusPlus.html)** from Klicpera _et al._ : [Directional Message Passing for Molecular Graphs](https://arxiv.org/abs/2003.03123) (ICLR 2020) and [Fast and Uncertainty-Aware Directional Message Passing for Non-Equilibrium Molecules](https://arxiv.org/abs/2011.14115) (NeurIPS-W 2020) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/qm9_pretrained_dimenet.py)]\n  * **[Node2Vec](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.Node2Vec.html)** from Grover and Leskovec: [node2vec: Scalable Feature Learning for Networks](https://arxiv.org/abs/1607.00653) (KDD 2016) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/node2vec.py)]\n  * **[Deep Graph Infomax](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.DeepGraphInfomax.html)** from VeliÄkoviÄ _et al._ : [Deep Graph Infomax](https://arxiv.org/abs/1809.10341) (ICLR 2019) [[**Example1**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/infomax_transductive.py), [**Example2**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/infomax_inductive.py)]\n  * **Deep Multiplex Graph Infomax** from Park _et al._ : [Unsupervised Attributed Multiplex Network Embedding](https://arxiv.org/abs/1911.06750) (AAAI 2020) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/hetero/dmgi_unsup.py)]\n  * **[Masked Label Prediction](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.MaskLabel.html)** from Shi _et al._ : [Masked Label Prediction: Unified Message Passing Model for Semi-Supervised Classification](https://arxiv.org/abs/2009.03509) (CoRR 2020) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/unimp_arxiv.py)]\n  * **[PMLP](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.PMLP.html)** from Yang _et al._ : [Graph Neural Networks are Inherently Good Generalizers: Insights by Bridging GNNs and MLPs](https://arxiv.org/abs/2212.09034) (ICLR 2023)\n\n**Expand to see all implemented GNN models...**\n\n  * **[Jumping Knowledge](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.JumpingKnowledge.html)** from Xu _et al._ : [Representation Learning on Graphs with Jumping Knowledge Networks](https://arxiv.org/abs/1806.03536) (ICML 2018) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/benchmark/kernel/gin.py#L54-L106)]\n  * A **[MetaLayer](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.MetaLayer.html)** for building any kind of graph network similar to the [TensorFlow Graph Nets library](https://github.com/deepmind/graph_nets) from Battaglia _et al._ : [Relational Inductive Biases, Deep Learning, and Graph Networks](https://arxiv.org/abs/1806.01261) (CoRR 2018)\n  * **[MetaPath2Vec](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.MetaPath2Vec.html)** from Dong _et al._ : [metapath2vec: Scalable Representation Learning for Heterogeneous Networks](https://ericdongyx.github.io/papers/KDD17-dong-chawla-swami-metapath2vec.pdf) (KDD 2017) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/hetero/metapath2vec.py)]\n  * All variants of **[Graph Autoencoders](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.GAE.html)** and **[Variational Autoencoders](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.VGAE.html)** from: \n    * [Variational Graph Auto-Encoders](https://arxiv.org/abs/1611.07308) from Kipf and Welling (NIPS-W 2016) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/autoencoder.py)]\n    * [Adversarially Regularized Graph Autoencoder for Graph Embedding](https://arxiv.org/abs/1802.04407) from Pan _et al._ (IJCAI 2018) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/argva_node_clustering.py)]\n    * [Simple and Effective Graph Autoencoders with One-Hop Linear Models](https://arxiv.org/abs/2001.07614) from Salha _et al._ (ECML 2020) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/autoencoder.py)]\n  * **[SEAL](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/seal_link_pred.py)** from Zhang and Chen: [Link Prediction Based on Graph Neural Networks](https://arxiv.org/pdf/1802.09691.pdf) (NeurIPS 2018) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/seal_link_pred.py)]\n  * **[RENet](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.RENet.html)** from Jin _et al._ : [Recurrent Event Network for Reasoning over Temporal Knowledge Graphs](https://arxiv.org/abs/1904.05530) (ICLR-W 2019) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/renet.py)]\n  * **[GraphUNet](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.GraphUNet.html)** from Gao and Ji: [Graph U-Nets](https://arxiv.org/abs/1905.05178) (ICML 2019) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/graph_unet.py)]\n  * **[AttentiveFP](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.AttentiveFP.html)** from Xiong _et al._ : [Pushing the Boundaries of Molecular Representation for Drug Discovery with the Graph Attention Mechanism](https://pubs.acs.org/doi/10.1021/acs.jmedchem.9b00959) (J. Med. Chem. 2020) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/attentive_fp.py)]\n  * **[DeepGCN](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.DeepGCNLayer.html)** and the **[GENConv](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.GENConv.html)** from Li _et al._ : [DeepGCNs: Can GCNs Go as Deep as CNNs?](https://arxiv.org/abs/1904.03751) (ICCV 2019) and [DeeperGCN: All You Need to Train Deeper GCNs](https://arxiv.org/abs/2006.07739) (CoRR 2020) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/ogbn_proteins_deepgcn.py)]\n  * **[RECT](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.RECT_L.html)** from Wang _et al._ : [Network Embedding with Completely-imbalanced Labels](https://ieeexplore.ieee.org/document/8979355) (TKDE 2020) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/rect.py)]\n  * **[GNNExplainer](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.explain.algorithm.GNNExplainer.html)** from Ying _et al._ : [GNNExplainer: Generating Explanations for Graph Neural Networks](https://arxiv.org/abs/1903.03894) (NeurIPS 2019) [[**Example1**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/explain/gnn_explainer.py), [**Example2**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/explain/gnn_explainer_ba_shapes.py), [**Example3**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/explain/gnn_explainer_link_pred.py)]\n  * **Graph-less Neural Networks** from Zhang _et al._ : [Graph-less Neural Networks: Teaching Old MLPs New Tricks via Distillation](https://arxiv.org/abs/2110.08727) (CoRR 2021) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/glnn.py)]\n  * **[LINKX](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.LINKX.html)** from Lim _et al._ : [Large Scale Learning on Non-Homophilous Graphs: New Benchmarks and Strong Simple Methods](https://arxiv.org/abs/2110.14446) (NeurIPS 2021) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/linkx.py)]\n  * **[RevGNN](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.GroupAddRev.html)** from Li _et al._ : [Training Graph Neural with 1000 Layers](https://arxiv.org/abs/2106.07476) (ICML 2021) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/rev_gnn.py)]\n  * **[TransE](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.kge.TransE.html)** from Bordes _et al._ : [Translating Embeddings for Modeling Multi-Relational Data](https://proceedings.neurips.cc/paper/2013/file/1cecc7a77928ca8133fa24680a88d2f9-Paper.pdf) (NIPS 2013) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/kge_fb15k_237.py)]\n  * **[ComplEx](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.kge.ComplEx.html)** from Trouillon _et al._ : [Complex Embeddings for Simple Link Prediction](https://arxiv.org/abs/1606.06357) (ICML 2016) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/kge_fb15k_237.py)]\n  * **[DistMult](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.kge.DistMult.html)** from Yang _et al._ : [Embedding Entities and Relations for Learning and Inference in Knowledge Bases](https://arxiv.org/abs/1412.6575) (ICLR 2015) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/kge_fb15k_237.py)]\n  * **[RotatE](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.kge.RotatE.html)** from Sun _et al._ : [RotatE: Knowledge Graph Embedding by Relational Rotation in Complex Space](https://arxiv.org/abs/1902.10197) (ICLR 2019) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/kge_fb15k_237.py)]\n\n\n\n**GNN operators and utilities:** PyG comes with a rich set of neural network operators that are commonly used in many GNN models. They follow an extensible design: It is easy to apply these operators and graph utilities to existing GNN layers and models to further enhance model performance.\n\n  * **[DropEdge](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.dropout_edge)** from Rong _et al._ : [DropEdge: Towards Deep Graph Convolutional Networks on Node Classification](https://openreview.net/forum?id=Hkx1qkrKPr) (ICLR 2020)\n  * **[DropNode](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.dropout_node)** , **[MaskFeature](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.mask_feature)** and **[AddRandomEdge](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.add_random_edge)** from You _et al._ : [Graph Contrastive Learning with Augmentations](https://arxiv.org/abs/2010.13902) (NeurIPS 2020)\n  * **[DropPath](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.dropout_path)** from Li _et al._ : [MaskGAE: Masked Graph Modeling Meets Graph Autoencoders](https://arxiv.org/abs/2205.10053) (arXiv 2022)\n  * **[ShuffleNode](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.shuffle_node)** from VeliÄkoviÄ _et al._ : [Deep Graph Infomax](https://arxiv.org/abs/1809.10341) (ICLR 2019)\n  * **[GraphNorm](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.norm.GraphNorm.html)** from Cai _et al._ : [GraphNorm: A Principled Approach to Accelerating Graph Neural Network Training](https://proceedings.mlr.press/v139/cai21e.html) (ICML 2021)\n  * **[GDC](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.transforms.GDC.html)** from Klicpera _et al._ : [Diffusion Improves Graph Learning](https://arxiv.org/abs/1911.05485) (NeurIPS 2019) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/gcn.py)]\n\n**Expand to see all implemented GNN operators and utilities...**\n\n  * **[GraphSizeNorm](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.norm.GraphSizeNorm.html)** from Dwivedi _et al._ : [Benchmarking Graph Neural Networks](https://arxiv.org/abs/2003.00982) (CoRR 2020)\n  * **[PairNorm](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.norm.PairNorm.html)** from Zhao and Akoglu: [PairNorm: Tackling Oversmoothing in GNNs](https://arxiv.org/abs/1909.12223) (ICLR 2020)\n  * **[MeanSubtractionNorm](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.norm.MeanSubtractionNorm.html)** from Yang _et al._ : [Revisiting \"Over-smoothing\" in Deep GCNs](https://arxiv.org/abs/2003.13663) (CoRR 2020)\n  * **[DiffGroupNorm](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.norm.DiffGroupNorm.html)** from Zhou _et al._ : [Towards Deeper Graph Neural Networks with Differentiable Group Normalization](https://arxiv.org/abs/2006.06972) (NeurIPS 2020)\n  * **[Tree Decomposition](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.tree_decomposition)** from Jin _et al._ : [Junction Tree Variational Autoencoder for Molecular Graph Generation](https://arxiv.org/abs/1802.04364) (ICML 2018)\n  * **[TGN](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.TGNMemory.html)** from Rossi _et al._ : [Temporal Graph Networks for Deep Learning on Dynamic Graphs](https://arxiv.org/abs/2006.10637) (GRL+ 2020) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/tgn.py)]\n  * **[Weisfeiler Lehman Operator](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.WLConv.html)** from Weisfeiler and Lehman: [A Reduction of a Graph to a Canonical Form and an Algebra Arising During this Reduction](https://www.iti.zcu.cz/wl2018/pdf/wl_paper_translation.pdf) (Nauchno-Technicheskaya Informatsia 1968) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/wl_kernel.py)]\n  * **[Continuous Weisfeiler Lehman Operator](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.WLConvContinuous.html)** from Togninalli _et al._ : [Wasserstein Weisfeiler-Lehman Graph Kernels](https://arxiv.org/abs/1906.01277) (NeurIPS 2019)\n  * **[Label Propagation](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.LabelPropagation.html)** from Zhu and Ghahramani: [Learning from Labeled and Unlabeled Data with Label Propagation](http://mlg.eng.cam.ac.uk/zoubin/papers/CMU-CALD-02-107.pdf) (CMU-CALD 2002) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/label_prop.py)]\n  * **[Local Degree Profile](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.transforms.LocalDegreeProfile)** from Cai and Wang: [A Simple yet Effective Baseline for Non-attribute Graph Classification](https://arxiv.org/abs/1811.03508) (CoRR 2018)\n  * **[CorrectAndSmooth](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.CorrectAndSmooth.html)** from Huang _et al._ : [Combining Label Propagation And Simple Models Out-performs Graph Neural Networks](https://arxiv.org/abs/2010.13993) (CoRR 2020) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/correct_and_smooth.py)]\n  * **[Gini](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.functional.gini.html)** and **[BRO](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.functional.bro.html)** regularization from Henderson _et al._ : [Improving Molecular Graph Neural Network Explainability with Orthonormalization and Induced Sparsity](https://arxiv.org/abs/2105.04854) (ICML 2021)\n  * **[RootedEgoNets](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.transforms.RootedEgoNets)** and **[RootedRWSubgraph](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.transforms.RootedRWSubgraph)** from Zhao _et al._ : [From Stars to Subgraphs: Uplifting Any GNN with Local Structure Awareness](https://arxiv.org/abs/2110.03753) (ICLR 2022)\n  * **[FeaturePropagation](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.transforms.FeaturePropagation)** from Rossi _et al._ : [On the Unreasonable Effectiveness of Feature Propagation in Learning on Graphs with Missing Node Features](https://arxiv.org/abs/2111.12128) (CoRR 2021)\n\n\n\n**Scalable GNNs:** PyG supports the implementation of Graph Neural Networks that can scale to large-scale graphs. Such application is challenging since the entire graph, its associated features and the GNN parameters cannot fit into GPU memory. Many state-of-the-art scalability approaches tackle this challenge by sampling neighborhoods for mini-batch training, graph clustering and partitioning, or by using simplified GNN models. These approaches have been implemented in PyG, and can benefit from the above GNN layers, operators and models.\n\n  * **[NeighborLoader](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.NeighborLoader)** from Hamilton _et al._ : [Inductive Representation Learning on Large Graphs](https://arxiv.org/abs/1706.02216) (NIPS 2017) [[**Example1**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/reddit.py), [**Example2**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/ogbn_train.py), [**Example3**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/hetero/to_hetero_mag.py)]\n  * **[ClusterGCN](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.ClusterLoader)** from Chiang _et al._ : [Cluster-GCN: An Efficient Algorithm for Training Deep and Large Graph Convolutional Networks](https://arxiv.org/abs/1905.07953) (KDD 2019) [[**Example1**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/cluster_gcn_reddit.py), [**Example2**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/cluster_gcn_ppi.py)]\n  * **[GraphSAINT](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.GraphSAINTSampler)** from Zeng _et al._ : [GraphSAINT: Graph Sampling Based Inductive Learning Method](https://arxiv.org/abs/1907.04931) (ICLR 2020) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/graph_saint.py)]\n\n**Expand to see all implemented scalable GNNs...**\n\n  * **[ShaDow](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.ShaDowKHopSampler)** from Zeng _et al._ : [Decoupling the Depth and Scope of Graph Neural Networks](https://arxiv.org/abs/2201.07858) (NeurIPS 2021) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/shadow.py)]\n  * **[SIGN](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.transforms.SIGN.html)** from Rossi _et al._ : [SIGN: Scalable Inception Graph Neural Networks](https://arxiv.org/abs/2004.11198) (CoRR 2020) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/sign.py)]\n  * **[HGTLoader](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.loader.HGTLoader.html)** from Hu _et al._ : [Heterogeneous Graph Transformer](https://arxiv.org/abs/2003.01332) (WWW 2020) [[**Example**](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/hetero/to_hetero_mag.py)]\n\n\n\n## Installation\n\n[](#installation)\n\nPyG is available for Python 3.9 to Python 3.12.\n\n### Anaconda\n\n[](#anaconda)\n\nYou can now install PyG via [Anaconda](https://anaconda.org/pyg/pyg) for all major OS/PyTorch/CUDA combinations ð¤ If you have not yet installed PyTorch, install it via `conda` as described in the [official PyTorch documentation](https://pytorch.org/get-started/locally/). Given that you have PyTorch installed (`>=1.8.0`), simply run\n\n```\n`conda install pyg -c pyg `\n```\n\n### PyPi\n\n[](#pypi)\n\nFrom **PyG 2.3** onwards, you can install and use PyG **without any external library** required except for PyTorch. For this, simply run\n\n```\n`pip install torch_geometric `\n```\n\n### Additional Libraries\n\n[](#additional-libraries)\n\nIf you want to utilize the full set of features from PyG, there exists several additional libraries you may want to install:\n\n  * **[`pyg-lib`](https://github.com/pyg-team/pyg-lib)** : Heterogeneous GNN operators and graph sampling routines\n  * **[`torch-scatter`](https://github.com/rusty1s/pytorch_scatter)** : Accelerated and efficient sparse reductions\n  * **[`torch-sparse`](https://github.com/rusty1s/pytorch_sparse)** : [`SparseTensor`](https://pytorch-geometric.readthedocs.io/en/latest/advanced/sparse_tensor.html) support\n  * **[`torch-cluster`](https://github.com/rusty1s/pytorch_cluster)** : Graph clustering routines\n  * **[`torch-spline-conv`](https://github.com/rusty1s/pytorch_spline_conv)** : [`SplineConv`](https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.SplineConv.html) support\n\n\n\nThese packages come with their own CPU and GPU kernel implementations based on the [PyTorch C++/CUDA/hip(ROCm) extension interface](https://github.com/pytorch/extension-cpp). For a basic usage of PyG, these dependencies are **fully optional**. We recommend to start with a minimal installation, and install additional dependencies once you start to actually need them.\n\nFor ease of installation of these extensions, we provide `pip` wheels for all major OS/PyTorch/CUDA combinations, see [here](https://data.pyg.org/whl).\n\n#### PyTorch 2.5\n\n[](#pytorch-25)\n\nTo install the binaries for PyTorch 2.5.0, simply run\n\n```\n`pip install pyg_lib torch_scatter torch_sparse torch_cluster torch_spline_conv -f https://data.pyg.org/whl/torch-2.5.0+${CUDA}.html `\n```\n\nwhere `${CUDA}` should be replaced by either `cpu`, `cu118`, `cu121`, or `cu124` depending on your PyTorch installation.\n\n`cpu` | `cu118` | `cu121` | `cu124`  \n---|---|---|---  \n**Linux** | â | â | â | â  \n**Windows** | â | â | â | â  \n**macOS** | â  \n  \n#### PyTorch 2.4\n\n[](#pytorch-24)\n\nTo install the binaries for PyTorch 2.4.0, simply run\n\n```\n`pip install pyg_lib torch_scatter torch_sparse torch_cluster torch_spline_conv -f https://data.pyg.org/whl/torch-2.4.0+${CUDA}.html `\n```\n\nwhere `${CUDA}` should be replaced by either `cpu`, `cu118`, `cu121`, or `cu124` depending on your PyTorch installation.\n\n`cpu` | `cu118` | `cu121` | `cu124`  \n---|---|---|---  \n**Linux** | â | â | â | â  \n**Windows** | â | â | â | â  \n**macOS** | â  \n  \n**Note:** Binaries of older versions are also provided for PyTorch 1.4.0, PyTorch 1.5.0, PyTorch 1.6.0, PyTorch 1.7.0/1.7.1, PyTorch 1.8.0/1.8.1, PyTorch 1.9.0, PyTorch 1.10.0/1.10.1/1.10.2, PyTorch 1.11.0, PyTorch 1.12.0/1.12.1, PyTorch 1.13.0/1.13.1, PyTorch 2.0.0/2.0.1, PyTorch 2.1.0/2.1.1/2.1.2, PyTorch 2.2.0/2.2.1/2.2.2, and PyTorch 2.3.0/2.3.1 (following the same procedure). **For older versions, you might need to explicitly specify the latest supported version number** or install via `pip install --no-index` in order to prevent a manual installation from source. You can look up the latest supported version number [here](https://data.pyg.org/whl).\n\n### NVIDIA PyG Container\n\n[](#nvidia-pyg-container)\n\nNVIDIA provides a PyG docker container for effortlessly training and deploying GPU accelerated GNNs with PyG, see [here](https://catalog.ngc.nvidia.com/orgs/nvidia/containers/pyg).\n\n### Nightly and Master\n\n[](#nightly-and-master)\n\nIn case you want to experiment with the latest PyG features which are not fully released yet, either install the **nightly version** of PyG via\n\n```\n`pip install pyg-nightly `\n```\n\nor install PyG **from master** via\n\n```\n`pip install git+https://github.com/pyg-team/pytorch_geometric.git `\n```\n\n### ROCm Wheels\n\n[](#rocm-wheels)\n\nThe external [`pyg-rocm-build` repository](https://github.com/Looong01/pyg-rocm-build) provides wheels and detailed instructions on how to install PyG for ROCm. If you have any questions about it, please open an issue [here](https://github.com/Looong01/pyg-rocm-build/issues).\n\n## Cite\n\n[](#cite)\n\nPlease cite [our paper](https://arxiv.org/abs/1903.02428) (and the respective papers of the methods used) if you use this code in your own work:\n\n```\n`@inproceedings{Fey/Lenssen/2019, title={Fast Graph Representation Learning with {PyTorch Geometric}}, author={Fey, Matthias and Lenssen, Jan E.}, booktitle={ICLR Workshop on Representation Learning on Graphs and Manifolds}, year={2019}, } `\n```\n\nFeel free to email us if you wish your work to be listed in the [external resources](https://pytorch-geometric.readthedocs.io/en/latest/external/resources.html). If you notice anything unexpected, please open an [issue](https://github.com/pyg-team/pytorch_geometric/issues) and let us know. If you have any questions or are missing a specific feature, feel free [to discuss them with us](https://github.com/pyg-team/pytorch_geometric/discussions). We are motivated to constantly make PyG even better.\n\n## About\n\nGraph Neural Network Library for PyTorch \n\n[pyg.org](https://pyg.org \"https://pyg.org\")\n\n### Topics\n\n[ deep-learning ](/topics/deep-learning \"Topic: deep-learning\") [ pytorch ](/topics/pytorch \"Topic: pytorch\") [ graph-convolutional-networks ](/topics/graph-convolutional-networks \"Topic: graph-convolutional-networks\") [ geometric-deep-learning ](/topics/geometric-deep-learning \"Topic: geometric-deep-learning\") [ graph-neural-networks ](/topics/graph-neural-networks \"Topic: graph-neural-networks\")\n\n### Resources\n\n[ Readme ](#readme-ov-file)\n\n### License\n\n[ MIT license ](#MIT-1-ov-file)\n\n### Citation\n\nCite this repository \n\nLoading\n\nSomething went wrong. \n\n[ Activity](/pyg-team/pytorch_geometric/activity)\n\n[ Custom properties](/pyg-team/pytorch_geometric/custom-properties)\n\n### Stars\n\n[ **21.8k** stars](/pyg-team/pytorch_geometric/stargazers)\n\n### Watchers\n\n[ **255** watching](/pyg-team/pytorch_geometric/watchers)\n\n### Forks\n\n[ **3.7k** forks](/pyg-team/pytorch_geometric/forks)\n\n[ Report repository ](/contact/report-content?content_url=https%3A%2F%2Fgithub.com%2Fpyg-team%2Fpytorch_geometric&report=pyg-team+%28user%29)\n\n##  [Releases 42](/pyg-team/pytorch_geometric/releases)\n\n[ PyG 2.6.1: Bugfixes Latest  Sep 26, 2024 ](/pyg-team/pytorch_geometric/releases/tag/2.6.1)\n\n[+ 41 releases](/pyg-team/pytorch_geometric/releases)\n\n##  [Used by 7.3k](/pyg-team/pytorch_geometric/network/dependents)\n\n[\n\n  * ![@IntelligentSystemsLab](https://avatars.githubusercontent.com/u/116422594?s=64&v=4)\n  * ![@chenbudaowenshi](https://avatars.githubusercontent.com/u/180609664?s=64&v=4)\n  * ![@yq62556369](https://avatars.githubusercontent.com/u/194673132?s=64&v=4)\n  * ![@AyinMostima](https://avatars.githubusercontent.com/u/109259401?s=64&v=4)\n  * ![@Pablo99-png](https://avatars.githubusercontent.com/u/74732296?s=64&v=4)\n  * ![@XieNangHide](https://avatars.githubusercontent.com/u/155722152?s=64&v=4)\n  * ![@ge59wij](https://avatars.githubusercontent.com/u/163747212?s=64&v=4)\n  * ![@raki2404](https://avatars.githubusercontent.com/u/135132065?s=64&v=4)\n\n+ 7,287  ](/pyg-team/pytorch_geometric/network/dependents)\n\n##  [Contributors 523](/pyg-team/pytorch_geometric/graphs/contributors)\n\n  * [ ![@rusty1s](https://avatars.githubusercontent.com/u/6945922?s=64&v=4) ](https://github.com/rusty1s)\n  * [ ![@pre-commit-ci\\[bot\\]](https://avatars.githubusercontent.com/in/68672?s=64&v=4) ](https://github.com/apps/pre-commit-ci)\n  * [ ![@wsad1](https://avatars.githubusercontent.com/u/13963626?s=64&v=4) ](https://github.com/wsad1)\n  * [ ![@EdisonLeeeee](https://avatars.githubusercontent.com/u/39986668?s=64&v=4) ](https://github.com/EdisonLeeeee)\n  * [ ![@ekagra-ranjan](https://avatars.githubusercontent.com/u/3116519?s=64&v=4) ](https://github.com/ekagra-ranjan)\n  * [ ![@puririshi98](https://avatars.githubusercontent.com/u/20074092?s=64&v=4) ](https://github.com/puririshi98)\n  * [ ![@janericlenssen](https://avatars.githubusercontent.com/u/9112195?s=64&v=4) ](https://github.com/janericlenssen)\n  * [ ![@akihironitta](https://avatars.githubusercontent.com/u/20610905?s=64&v=4) ](https://github.com/akihironitta)\n  * [ ![@dongkwan-kim](https://avatars.githubusercontent.com/u/14350049?s=64&v=4) ](https://github.com/dongkwan-kim)\n  * [ ![@Padarn](https://avatars.githubusercontent.com/u/858039?s=64&v=4) ](https://github.com/Padarn)\n  * [ ![@mananshah99](https://avatars.githubusercontent.com/u/3421635?s=64&v=4) ](https://github.com/mananshah99)\n  * [ ![@lgray](https://avatars.githubusercontent.com/u/1068089?s=64&v=4) ](https://github.com/lgray)\n  * [ ![@lightaime](https://avatars.githubusercontent.com/u/23632352?s=64&v=4) ](https://github.com/lightaime)\n  * [ ![@JakubPietrakIntel](https://avatars.githubusercontent.com/u/97102979?s=64&v=4) ](https://github.com/JakubPietrakIntel)\n\n\n\n[+ 509 contributors](/pyg-team/pytorch_geometric/graphs/contributors)\n\n## Languages\n\n  * [ Python 99.4% ](/pyg-team/pytorch_geometric/search?l=python)\n  * Other 0.6%\n\n\n\n## Footer\n\n[ ](https://github.com \"GitHub\") Â© 2025 GitHub, Inc. \n\n### Footer navigation\n\n  * [Terms](https://docs.github.com/site-policy/github-terms/github-terms-of-service)\n  * [Privacy](https://docs.github.com/site-policy/privacy-policies/github-privacy-statement)\n  * [Security](https://github.com/security)\n  * [Status](https://www.githubstatus.com/)\n  * [Docs](https://docs.github.com/)\n  * [Contact](https://support.github.com?tags=dotcom-footer)\n  * Manage cookies \n  * Do not share my personal information \n\n\n\nYou canât perform that action at this time. \n",
    "content_quality_score": 0.0,
    "summary": null,
    "child_urls": [
        "https://github.com/pyg-team/pytorch_geometric/#start-of-content",
        "https://github.com/",
        "https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Fpyg-team%2Fpytorch_geometric%2F",
        "https://github.com/features/copilot",
        "https://github.com/features/security",
        "https://github.com/features/actions",
        "https://github.com/features/codespaces",
        "https://github.com/features/issues",
        "https://github.com/features/code-review",
        "https://github.com/features/discussions",
        "https://github.com/features/code-search",
        "https://github.com/features",
        "https://docs.github.com",
        "https://skills.github.com",
        "https://github.com/enterprise",
        "https://github.com/team",
        "https://github.com/enterprise/startups",
        "https://github.com/solutions/industry/nonprofits",
        "https://github.com/solutions/use-case/devsecops",
        "https://github.com/solutions/use-case/devops",
        "https://github.com/solutions/use-case/ci-cd",
        "https://github.com/solutions/use-case",
        "https://github.com/solutions/industry/healthcare",
        "https://github.com/solutions/industry/financial-services",
        "https://github.com/solutions/industry/manufacturing",
        "https://github.com/solutions/industry/government",
        "https://github.com/solutions/industry",
        "https://github.com/solutions",
        "https://github.com/resources/articles/ai",
        "https://github.com/resources/articles/devops",
        "https://github.com/resources/articles/security",
        "https://github.com/resources/articles/software-development",
        "https://github.com/resources/articles",
        "https://resources.github.com/learn/pathways",
        "https://resources.github.com",
        "https://github.com/customer-stories",
        "https://partner.github.com",
        "https://github.com/solutions/executive-insights",
        "https://github.com/sponsors",
        "https://github.com/readme",
        "https://github.com/topics",
        "https://github.com/trending",
        "https://github.com/collections",
        "https://github.com/enterprise/advanced-security",
        "https://github.com/features/copilot#enterprise",
        "https://github.com/premium-support",
        "https://github.com/pricing",
        "https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax",
        "https://github.com/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&source=header-repo&source_repo=pyg-team%2Fpytorch_geometric",
        "https://github.com/pyg-team",
        "https://github.com/pyg-team/pytorch_geometric",
        "https://github.com/login?return_to=%2Fpyg-team%2Fpytorch_geometric",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/LICENSE",
        "https://github.com/pyg-team/pytorch_geometric/stargazers",
        "https://github.com/pyg-team/pytorch_geometric/forks",
        "https://github.com/pyg-team/pytorch_geometric/branches",
        "https://github.com/pyg-team/pytorch_geometric/tags",
        "https://github.com/pyg-team/pytorch_geometric/activity",
        "https://github.com/pyg-team/pytorch_geometric/issues",
        "https://github.com/pyg-team/pytorch_geometric/pulls",
        "https://github.com/pyg-team/pytorch_geometric/discussions",
        "https://github.com/pyg-team/pytorch_geometric/actions",
        "https://github.com/pyg-team/pytorch_geometric/security",
        "https://github.com/pyg-team/pytorch_geometric/pulse",
        "https://github.com/rusty1s",
        "https://github.com/pyg-team/pytorch_geometric/commits?author=rusty1s",
        "https://github.com/pyg-team/pytorch_geometric/commit/9c73f9908bfce4d8c47d23fa00b55d83ad4f1399",
        "https://github.com/pyg-team/pytorch_geometric/pull/9962",
        "https://github.com/pyg-team/pytorch_geometric/commits/master/",
        "https://github.com/pyg-team/pytorch_geometric/tree/master/.github",
        "https://github.com/pyg-team/pytorch_geometric/commit/c828200c6a65f1a32f725d32a95eaee6837616e5",
        "https://github.com/pyg-team/pytorch_geometric/pull/9942",
        "https://github.com/pyg-team/pytorch_geometric/tree/master/benchmark",
        "https://github.com/pyg-team/pytorch_geometric/commit/3c983534716bb0e7e457dc489840d05313806495",
        "https://github.com/pyg-team/pytorch_geometric/pull/9618",
        "https://github.com/pyg-team/pytorch_geometric/tree/master/conda",
        "https://github.com/pyg-team/pytorch_geometric/commit/c95517bb551fc13eb668a91fee7f831771eb3efd",
        "https://github.com/pyg-team/pytorch_geometric/pull/9702",
        "https://github.com/pyg-team/pytorch_geometric/tree/master/docker",
        "https://github.com/pyg-team/pytorch_geometric/commit/bd5ae45c74a3fbb6b6ff818476f7651d84313d2a",
        "https://github.com/pyg-team/pytorch_geometric/pull/9794",
        "https://github.com/pyg-team/pytorch_geometric/tree/master/docs",
        "https://github.com/pyg-team/pytorch_geometric/commit/b481f6c51ced5f07df7fbdd7f0dd4ae02c9ef16b",
        "https://github.com/pyg-team/pytorch_geometric/pull/9949",
        "https://github.com/pyg-team/pytorch_geometric/tree/master/examples",
        "https://github.com/pyg-team/pytorch_geometric/commit/5fb2a8eaae3047a9dd430fd58e735e333daed79d",
        "https://github.com/pyg-team/pytorch_geometric/pull/9955",
        "https://github.com/pyg-team/pytorch_geometric/tree/master/graphgym",
        "https://github.com/pyg-team/pytorch_geometric/commit/44007acc55a28089f673aba9f830a00a773726ea",
        "https://github.com/pyg-team/pytorch_geometric/pull/9466",
        "https://github.com/pyg-team/pytorch_geometric/tree/master/test",
        "https://github.com/pyg-team/pytorch_geometric/tree/master/torch_geometric",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/.gitignore",
        "https://github.com/pyg-team/pytorch_geometric/commit/2d1f7d3b2802d2df3f1dc134e366a9d7053a72ed",
        "https://github.com/pyg-team/pytorch_geometric/pull/8254",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/.pre-commit-config.yaml",
        "https://github.com/pyg-team/pytorch_geometric/commit/109ec56790c106ccd9738dc034871aa026659c13",
        "https://github.com/pyg-team/pytorch_geometric/pull/9920",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/CHANGELOG.md",
        "https://github.com/pyg-team/pytorch_geometric/commit/6a1db0744adff36ca8ff1890779383d37460c1e0",
        "https://github.com/pyg-team/pytorch_geometric/pull/9877",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/CITATION.cff",
        "https://github.com/pyg-team/pytorch_geometric/commit/b152720b884c2498d5e677587a3cebae0537ed17",
        "https://github.com/pyg-team/pytorch_geometric/commit/a75a82a6275a366ed1dab734bb0bdda9591e53c6",
        "https://github.com/pyg-team/pytorch_geometric/pull/6751",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/README.md",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/codecov.yml",
        "https://github.com/pyg-team/pytorch_geometric/commit/7ac4654db727df73d1443c5102020abe859e5eb6",
        "https://github.com/pyg-team/pytorch_geometric/pull/7872",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/pyproject.toml",
        "https://github.com/pyg-team/pytorch_geometric/commit/90501e08f2cd91e0febee87048015196c73d0031",
        "https://github.com/pyg-team/pytorch_geometric/pull/9696",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/readthedocs.yml",
        "https://github.com/pyg-team/pytorch_geometric/commit/c9e563c8578c90990a0aae1b32032ca48744f340",
        "https://github.com/pyg-team/pytorch_geometric/",
        "https://github.com/pyg-team/pytorch_geometric/actions/workflows/testing.yml",
        "https://github.com/pyg-team/pytorch_geometric/actions/workflows/linting.yml",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/.github/CONTRIBUTING.md",
        "https://github.com/snap-stanford/ogb/tree/master/examples",
        "https://github.com/pyg-team/pytorch_geometric/tree/master/examples/multi_gpu",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/datapipe.py",
        "https://github.com/pyg-team/pytorch_geometric/#library-highlights",
        "https://github.com/pyg-team/pytorch_geometric/#quick-tour-for-new-users",
        "https://github.com/pyg-team/pytorch_geometric/#architecture-overview",
        "https://github.com/pyg-team/pytorch_geometric/#implemented-gnn-models",
        "https://github.com/pyg-team/pytorch_geometric/#installation",
        "https://github.com/pyg-team/pytorch_geometric/#train-your-own-gnn-model",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/gcn.py",
        "https://github.com/pyg-team/pytorch_geometric/#create-your-own-gnn-layer",
        "https://github.com/pyg-team/pyg-lib",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/gcn.py#L36-L37",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/gat.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/gcn2_cora.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/gcn2_ppi.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/cora.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/faust.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/qm9_nn_conv.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/mnist_nn_conv.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/egc.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/unimp_arxiv.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/reddit.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/ogbn_train.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/graph_sage_unsup.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/graph_sage_unsup_ppi.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/mutag_gin.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/arma.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/sgc.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/benchmark/citation/appnp.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/agnn.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/tagcn.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/pna.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/rgcn.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/rgcn_link_pred.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/rgat.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/film.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/signed_gcn.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/dna.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/pointnet2_classification.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/pointnet2_segmentation.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/dgcnn_classification.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/dgcnn_segmentation.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/benchmark/points/point_cnn.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/super_gat.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/hetero/hgt_dblp.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/graph_gps.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/proteins_topk_pool.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/proteins_diff_pool.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/benchmark/kernel/global_attention.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/benchmark/kernel/set2set.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/benchmark/kernel/sort_pool.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/proteins_mincut_pool.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/proteins_dmon_pool.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/mnist_graclus.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/mnist_voxel_grid.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/benchmark/kernel/sag_pool.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/benchmark/kernel/edge_pool.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/benchmark/kernel/asap.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/mem_pool.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/proteins_gmt.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/equilibrium_median.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/qm9_pretrained_schnet.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/qm9_pretrained_dimenet.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/node2vec.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/infomax_transductive.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/infomax_inductive.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/hetero/dmgi_unsup.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/benchmark/kernel/gin.py#L54-L106",
        "https://github.com/deepmind/graph_nets",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/hetero/metapath2vec.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/autoencoder.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/argva_node_clustering.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/seal_link_pred.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/renet.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/graph_unet.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/attentive_fp.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/ogbn_proteins_deepgcn.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/rect.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/explain/gnn_explainer.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/explain/gnn_explainer_ba_shapes.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/explain/gnn_explainer_link_pred.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/glnn.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/linkx.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/rev_gnn.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/kge_fb15k_237.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/tgn.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/wl_kernel.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/label_prop.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/correct_and_smooth.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/hetero/to_hetero_mag.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/cluster_gcn_reddit.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/cluster_gcn_ppi.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/graph_saint.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/shadow.py",
        "https://github.com/pyg-team/pytorch_geometric/blob/master/examples/sign.py",
        "https://github.com/pyg-team/pytorch_geometric/#anaconda",
        "https://github.com/pyg-team/pytorch_geometric/#pypi",
        "https://github.com/pyg-team/pytorch_geometric/#additional-libraries",
        "https://github.com/rusty1s/pytorch_scatter",
        "https://github.com/rusty1s/pytorch_sparse",
        "https://github.com/rusty1s/pytorch_cluster",
        "https://github.com/rusty1s/pytorch_spline_conv",
        "https://github.com/pytorch/extension-cpp",
        "https://github.com/pyg-team/pytorch_geometric/#pytorch-25",
        "https://github.com/pyg-team/pytorch_geometric/#pytorch-24",
        "https://github.com/pyg-team/pytorch_geometric/#nvidia-pyg-container",
        "https://github.com/pyg-team/pytorch_geometric/#nightly-and-master",
        "https://github.com/pyg-team/pytorch_geometric/#rocm-wheels",
        "https://github.com/Looong01/pyg-rocm-build",
        "https://github.com/Looong01/pyg-rocm-build/issues",
        "https://github.com/pyg-team/pytorch_geometric/#cite",
        "https://github.com/topics/deep-learning",
        "https://github.com/topics/pytorch",
        "https://github.com/topics/graph-convolutional-networks",
        "https://github.com/topics/geometric-deep-learning",
        "https://github.com/topics/graph-neural-networks",
        "https://github.com/pyg-team/pytorch_geometric/#readme-ov-file",
        "https://github.com/pyg-team/pytorch_geometric/#MIT-1-ov-file",
        "https://github.com/pyg-team/pytorch_geometric/custom-properties",
        "https://github.com/pyg-team/pytorch_geometric/watchers",
        "https://github.com/contact/report-content?content_url=https%3A%2F%2Fgithub.com%2Fpyg-team%2Fpytorch_geometric&report=pyg-team+%28user%29",
        "https://github.com/pyg-team/pytorch_geometric/releases",
        "https://github.com/pyg-team/pytorch_geometric/releases/tag/2.6.1",
        "https://github.com/pyg-team/pytorch_geometric/network/dependents",
        "https://github.com/pyg-team/pytorch_geometric/graphs/contributors",
        "https://github.com/apps/pre-commit-ci",
        "https://github.com/wsad1",
        "https://github.com/EdisonLeeeee",
        "https://github.com/ekagra-ranjan",
        "https://github.com/puririshi98",
        "https://github.com/janericlenssen",
        "https://github.com/akihironitta",
        "https://github.com/dongkwan-kim",
        "https://github.com/Padarn",
        "https://github.com/mananshah99",
        "https://github.com/lgray",
        "https://github.com/lightaime",
        "https://github.com/JakubPietrakIntel",
        "https://github.com/pyg-team/pytorch_geometric/search?l=python",
        "https://github.com",
        "https://docs.github.com/site-policy/github-terms/github-terms-of-service",
        "https://docs.github.com/site-policy/privacy-policies/github-privacy-statement",
        "https://github.com/security",
        "https://docs.github.com/",
        "https://support.github.com?tags=dotcom-footer",
        "https://github.blog",
        "https://pyg.org",
        "https://raw.githubusercontent.com/pyg-team/pyg_sphinx_theme/master/pyg_sphinx_theme/static/img/pyg_logo_text.svg?sanitize=true",
        "https://pypi.python.org/pypi/torch-geometric",
        "https://pytorch-geometric.readthedocs.io/en/latest",
        "https://data.pyg.org/slack.html",
        "https://pytorch-geometric.readthedocs.io",
        "https://arxiv.org/abs/1903.02428",
        "https://pytorch-geometric.readthedocs.io/en/latest/get_started/colabs.html",
        "https://pytorch-geometric.readthedocs.io/en/latest/external/resources.html",
        "https://pytorch.org/",
        "http://geometricdeeplearning.com/",
        "https://pytorch-geometric.readthedocs.io/en/latest/advanced/compile.html",
        "https://medium.com/stanford-cs224w",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.datasets.Planetoid.html",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.GCNConv.html",
        "https://pytorch.org/tutorials/beginner/basics/optimization_tutorial.html#full-implementation",
        "https://pytorch-geometric.readthedocs.io/en/latest/tutorial/create_gnn.html",
        "https://arxiv.org/abs/1801.07829",
        "https://pytorch-geometric.readthedocs.io/en/latest/advanced/jit.html",
        "https://raw.githubusercontent.com/pyg-team/pytorch_geometric/master/docs/source/_figures/architecture.svg?sanitize=true",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.MessagePassing.html",
        "https://arxiv.org/abs/1609.02907",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.ChebConv.html",
        "https://arxiv.org/abs/1606.09375",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.GATConv.html",
        "https://arxiv.org/abs/1710.10903",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.GCN2Conv.html",
        "https://arxiv.org/abs/2007.02133",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.SplineConv.html",
        "https://arxiv.org/abs/1711.08920",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.NNConv.html",
        "https://arxiv.org/abs/1704.01212",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.CGConv.html",
        "https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.120.145301",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.ECConv.html",
        "https://arxiv.org/abs/1704.02901",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.EGConv.html",
        "https://arxiv.org/abs/2104.01481",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.GATv2Conv.html",
        "https://arxiv.org/abs/2105.14491",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.TransformerConv.html",
        "https://arxiv.org/abs/2009.03509",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.SAGEConv.html",
        "https://arxiv.org/abs/1706.02216",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.GraphConv.html",
        "https://arxiv.org/abs/1810.02244",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.GatedGraphConv.html",
        "https://arxiv.org/abs/1511.05493",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.ResGatedGraphConv.html",
        "https://arxiv.org/abs/1711.07553",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.GINConv.html",
        "https://arxiv.org/abs/1810.00826",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.GINEConv.html",
        "https://arxiv.org/abs/1905.12265",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.ARMAConv.html",
        "https://arxiv.org/abs/1901.01343",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.SGConv.html",
        "https://arxiv.org/abs/1902.07153",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.APPNP.html",
        "https://arxiv.org/abs/1810.05997",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.MFConv.html",
        "https://arxiv.org/abs/1509.09292",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.AGNNConv.html",
        "https://arxiv.org/abs/1803.03735",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.TAGConv.html",
        "https://arxiv.org/abs/1710.10370",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.PNAConv.html",
        "https://arxiv.org/abs/2004.05718",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.FAConv.html",
        "https://arxiv.org/abs/2101.00797",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.nn.conv.PDNConv.html",
        "https://arxiv.org/abs/2010.12878",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.RGCNConv.html",
        "https://arxiv.org/abs/1703.06103",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.RGATConv.html",
        "https://arxiv.org/abs/1904.05811",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.FiLMConv.html",
        "https://arxiv.org/abs/1906.12192",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.SignedConv.html",
        "https://arxiv.org/abs/1808.06354",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.DNAConv.html",
        "https://arxiv.org/abs/1904.04849",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.PANConv.html",
        "https://arxiv.org/abs/2006.16811",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.PointNetConv.html",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.pool.fps.html",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.pool.knn_graph.html",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.pool.radius_graph.html",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.unpool.knn_interpolate.html",
        "https://arxiv.org/abs/1612.00593",
        "https://arxiv.org/abs/1706.02413",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.EdgeConv.html",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.XConv.html",
        "https://arxiv.org/abs/1801.07791",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.PPFConv.html",
        "https://arxiv.org/abs/1802.02669",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.GMMConv.html",
        "https://arxiv.org/abs/1611.08402",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.FeaStConv.html",
        "https://arxiv.org/abs/1706.05206",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.PointTransformerConv.html",
        "https://arxiv.org/abs/2012.09164",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.HypergraphConv.html",
        "https://arxiv.org/abs/1901.08150",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.GravNetConv.html",
        "https://arxiv.org/abs/1902.07987",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.SuperGATConv.html",
        "https://openreview.net/forum?id=Wi5KUNlqWty",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.HGTConv.html",
        "https://arxiv.org/abs/2003.01332",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.HEATonv.html",
        "https://arxiv.org/abs/2106.07161",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.SSGConv.html",
        "https://openreview.net/forum?id=CYO5T-YjWZV",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.FusedGATConv.html",
        "https://proceedings.mlsys.org/paper/2022/file/9a1158154dfa42caddbd0694a4e9bdc8-Paper.pdf",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.GPSConv.html",
        "https://arxiv.org/abs/2205.12454",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.pool.TopKPooling.html",
        "https://arxiv.org/abs/1905.05178",
        "https://arxiv.org/abs/1811.01287",
        "https://arxiv.org/abs/1905.02850",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.dense.dense_diff_pool.html",
        "https://arxiv.org/abs/1806.08804",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.aggr.AttentionalAggregation.html",
        "https://arxiv.org/abs/1904.12787",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.aggr.Set2Set.html",
        "https://arxiv.org/abs/1511.06391",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.aggr.SortAggregation.html",
        "https://www.cse.wustl.edu/~muhan/papers/AAAI_2018_DGCNN.pdf",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.dense.dense_mincut_pool.html",
        "https://arxiv.org/abs/1907.00481",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.dense.DMoNPooling.html",
        "https://arxiv.org/abs/2006.16904",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.pool.graclus.html",
        "http://www.cs.utexas.edu/users/inderjit/public_papers/multilevel_pami.pdf",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.pool.voxel_grid.html",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.pool.SAGPooling.html",
        "https://arxiv.org/abs/1904.08082",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.pool.EdgePooling.html",
        "https://graphreason.github.io/papers/17.pdf",
        "https://arxiv.org/abs/1905.10990",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.pool.ASAPooling.html",
        "https://arxiv.org/abs/1911.07979",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.pool.PANPooling.html",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.pool.MemPooling.html",
        "https://arxiv.org/abs/2002.09518",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.aggr.GraphMultisetTransformer.html",
        "https://arxiv.org/abs/2102.11533",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.aggr.EquilibriumAggregation.html",
        "https://arxiv.org/abs/2202.12795",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.SchNet.html",
        "https://arxiv.org/abs/1706.08566",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.DimeNet.html",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.DimeNetPlusPlus.html",
        "https://arxiv.org/abs/2003.03123",
        "https://arxiv.org/abs/2011.14115",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.Node2Vec.html",
        "https://arxiv.org/abs/1607.00653",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.DeepGraphInfomax.html",
        "https://arxiv.org/abs/1809.10341",
        "https://arxiv.org/abs/1911.06750",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.MaskLabel.html",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.PMLP.html",
        "https://arxiv.org/abs/2212.09034",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.JumpingKnowledge.html",
        "https://arxiv.org/abs/1806.03536",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.MetaLayer.html",
        "https://arxiv.org/abs/1806.01261",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.MetaPath2Vec.html",
        "https://ericdongyx.github.io/papers/KDD17-dong-chawla-swami-metapath2vec.pdf",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.GAE.html",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.VGAE.html",
        "https://arxiv.org/abs/1611.07308",
        "https://arxiv.org/abs/1802.04407",
        "https://arxiv.org/abs/2001.07614",
        "https://arxiv.org/pdf/1802.09691.pdf",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.RENet.html",
        "https://arxiv.org/abs/1904.05530",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.GraphUNet.html",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.AttentiveFP.html",
        "https://pubs.acs.org/doi/10.1021/acs.jmedchem.9b00959",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.DeepGCNLayer.html",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.GENConv.html",
        "https://arxiv.org/abs/1904.03751",
        "https://arxiv.org/abs/2006.07739",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.RECT_L.html",
        "https://ieeexplore.ieee.org/document/8979355",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.explain.algorithm.GNNExplainer.html",
        "https://arxiv.org/abs/1903.03894",
        "https://arxiv.org/abs/2110.08727",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.LINKX.html",
        "https://arxiv.org/abs/2110.14446",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.GroupAddRev.html",
        "https://arxiv.org/abs/2106.07476",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.kge.TransE.html",
        "https://proceedings.neurips.cc/paper/2013/file/1cecc7a77928ca8133fa24680a88d2f9-Paper.pdf",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.kge.ComplEx.html",
        "https://arxiv.org/abs/1606.06357",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.kge.DistMult.html",
        "https://arxiv.org/abs/1412.6575",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.kge.RotatE.html",
        "https://arxiv.org/abs/1902.10197",
        "https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.dropout_edge",
        "https://openreview.net/forum?id=Hkx1qkrKPr",
        "https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.dropout_node",
        "https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.mask_feature",
        "https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.add_random_edge",
        "https://arxiv.org/abs/2010.13902",
        "https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.dropout_path",
        "https://arxiv.org/abs/2205.10053",
        "https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.shuffle_node",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.norm.GraphNorm.html",
        "https://proceedings.mlr.press/v139/cai21e.html",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.transforms.GDC.html",
        "https://arxiv.org/abs/1911.05485",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.norm.GraphSizeNorm.html",
        "https://arxiv.org/abs/2003.00982",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.norm.PairNorm.html",
        "https://arxiv.org/abs/1909.12223",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.norm.MeanSubtractionNorm.html",
        "https://arxiv.org/abs/2003.13663",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.norm.DiffGroupNorm.html",
        "https://arxiv.org/abs/2006.06972",
        "https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.tree_decomposition",
        "https://arxiv.org/abs/1802.04364",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.TGNMemory.html",
        "https://arxiv.org/abs/2006.10637",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.WLConv.html",
        "https://www.iti.zcu.cz/wl2018/pdf/wl_paper_translation.pdf",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.conv.WLConvContinuous.html",
        "https://arxiv.org/abs/1906.01277",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.LabelPropagation.html",
        "http://mlg.eng.cam.ac.uk/zoubin/papers/CMU-CALD-02-107.pdf",
        "https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.transforms.LocalDegreeProfile",
        "https://arxiv.org/abs/1811.03508",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.models.CorrectAndSmooth.html",
        "https://arxiv.org/abs/2010.13993",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.functional.gini.html",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.nn.functional.bro.html",
        "https://arxiv.org/abs/2105.04854",
        "https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.transforms.RootedEgoNets",
        "https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.transforms.RootedRWSubgraph",
        "https://arxiv.org/abs/2110.03753",
        "https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.transforms.FeaturePropagation",
        "https://arxiv.org/abs/2111.12128",
        "https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.NeighborLoader",
        "https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.ClusterLoader",
        "https://arxiv.org/abs/1905.07953",
        "https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.GraphSAINTSampler",
        "https://arxiv.org/abs/1907.04931",
        "https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.ShaDowKHopSampler",
        "https://arxiv.org/abs/2201.07858",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.transforms.SIGN.html",
        "https://arxiv.org/abs/2004.11198",
        "https://pytorch-geometric.readthedocs.io/en/latest/generated/torch_geometric.loader.HGTLoader.html",
        "https://anaconda.org/pyg/pyg",
        "https://pytorch.org/get-started/locally/",
        "https://pytorch-geometric.readthedocs.io/en/latest/advanced/sparse_tensor.html",
        "https://data.pyg.org/whl",
        "https://catalog.ngc.nvidia.com/orgs/nvidia/containers/pyg",
        "mailto:matthias.fey@tu-dortmund.de",
        "https://www.githubstatus.com/"
    ]
}