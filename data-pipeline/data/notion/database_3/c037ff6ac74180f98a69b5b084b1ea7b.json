{
    "id": "c037ff6ac74180f98a69b5b084b1ea7b",
    "metadata": {
        "id": "c037ff6ac74180f98a69b5b084b1ea7b",
        "url": "https://www.notion.so/Clustering-c037ff6ac74180f98a69b5b084b1ea7b",
        "title": "Clustering",
        "properties": {
            "Type": "Leaf"
        }
    },
    "parent_metadata": {
        "id": "8e8de4faa3a0e689fa74bc01ad4efa6f",
        "url": "",
        "title": "",
        "properties": {}
    },
    "content": "# Resources [Community]\n\n\t<child_page>\n\t# Clustering with HDBScan and UMAP\n\t\n\tðŸ”—Â [Source code](https://colab.research.google.com/github/superlinked/superlinked/blob/main/notebook/analytics_user_acquisition.ipynb#scrollTo=495beffe-5de7-4ee6-b354-535482e5bd91)\n\t---\n\t\n\tFirst label your data with HDBScan:\n\t```\n\t# fit a clustering model\n\t# this is done after some basic parameter search - not the point of this notebook\n\thdbscan = HDBSCAN(min_cluster_size=500, metric=\"cosine\")\n\thdbscan.fit(vector_df.values)\n\t\n\t# create label df\n\tlabel_df = pd.DataFrame(hdbscan.labels_, index=vector_df.index, columns=[\"cluster_label\"])\n\t# number of users in clusters\n\tlabel_df[\"cluster_label\"].value_counts()\n\t````\n\tThen visualize it with UMAP:\n\t```\n\t# fit UMAP and transform dataset\n\tumap_transform = umap.UMAP(random_state=0, transform_seed=0, n_jobs=1, metric=\"cosine\")\n\tumap_transform = umap_transform.fit(vector_df)\n\tumap_vectors = umap_transform.transform(vector_df)\n\tumap_df = pd.DataFrame(umap_vectors, columns=[\"dimension_1\", \"dimension_2\"], index=vector_df.index)\n\tumap_df = umap_df.join(label_df)\n\t````\n\t```\n\talt.Chart(umap_df).mark_circle(size=8).encode(x=\"dimension_1\", y=\"dimension_2\", color=\"cluster_label:N\").properties(\n\t    width=600, height=500, title=\"UMAP Transformed vectors coloured by cluster labels\"\n\t).configure_title(\n\t    fontSize=16,\n\t    anchor=\"middle\",\n\t).configure_legend(\n\t    strokeColor=\"black\",\n\t    padding=10,\n\t    cornerRadius=10,\n\t    labelFontSize=14,\n\t    titleFontSize=14,\n\t).configure_axis(\n\t    titleFontSize=14, labelFontSize=12\n\t)\n\t````\n\t[Image](No URL)\n\tLooking at clusters distribution:\n\t```\n\t# activity histograms by cluster\n\tuser_df = user_df.set_index(\"id\").join(label_df)\n\t\n\tby_cluster_data = {label: user_df[user_df[\"cluster_label\"] == label] for label in np.unique(hdbscan.labels_)}\n\t\n\tactivity_histograms = [\n\t    alt.Chart(user_df_part)\n\t    .mark_bar()\n\t    .encode(\n\t        x=alt.X(\"activity\", bin=True, scale=alt.Scale(domain=[0, 1.81])),\n\t        y=alt.Y(\"count()\", scale=alt.Scale(domain=[0, 1000])),\n\t    )\n\t    .properties(title=f\"Activity histogram for cluster {label}\")\n\t    for label, user_df_part in by_cluster_data.items()\n\t]\n\t\n\talt.hconcat(*activity_histograms)\n\t````\n\t[Image](No URL)\n\t</child_page>\n\n# Resources [Science]\n\n# Tools",
    "content_quality_score": null,
    "summary": null,
    "child_urls": [
        "https://colab.research.google.com/github/superlinked/superlinked/blob/main/notebook/analytics_user_acquisition.ipynb#scrollTo=495beffe-5de7-4ee6-b354-535482e5bd91/"
    ]
}